{"ast":null,"code":"/**\r\n * DevExtreme (ui/scheduler/workspaces/ui.scheduler.work_space.js)\r\n * Version: 20.2.7\r\n * Build date: Thu Apr 22 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _renderer = _interopRequireDefault(require(\"../../../core/renderer\"));\n\nvar _dom_adapter = _interopRequireDefault(require(\"../../../core/dom_adapter\"));\n\nvar _events_engine = _interopRequireDefault(require(\"../../../events/core/events_engine\"));\n\nvar _element_data = require(\"../../../core/element_data\");\n\nvar _date = _interopRequireDefault(require(\"../../../core/utils/date\"));\n\nvar _window = require(\"../../../core/utils/window\");\n\nvar _element = require(\"../../../core/element\");\n\nvar _extend = require(\"../../../core/utils/extend\");\n\nvar _iterator = require(\"../../../core/utils/iterator\");\n\nvar _position = require(\"../../../core/utils/position\");\n\nvar _message = _interopRequireDefault(require(\"../../../localization/message\"));\n\nvar _date2 = _interopRequireDefault(require(\"../../../localization/date\"));\n\nvar _common = require(\"../../../core/utils/common\");\n\nvar _type = require(\"../../../core/utils/type\");\n\nvar _index = require(\"../../../events/utils/index\");\n\nvar _pointer = _interopRequireDefault(require(\"../../../events/pointer\"));\n\nvar _ui = _interopRequireDefault(require(\"../../widget/ui.errors\"));\n\nvar _click = require(\"../../../events/click\");\n\nvar _contextmenu = require(\"../../../events/contextmenu\");\n\nvar _drag = require(\"../../../events/drag\");\n\nvar _ui2 = _interopRequireDefault(require(\"../../scroll_view/ui.scrollable\"));\n\nvar _uiSchedulerWork_spaceGroupedStrategy = _interopRequireDefault(require(\"./ui.scheduler.work_space.grouped.strategy.horizontal\"));\n\nvar _uiSchedulerWork_spaceGroupedStrategy2 = _interopRequireDefault(require(\"./ui.scheduler.work_space.grouped.strategy.vertical\"));\n\nvar _uiScheduler = _interopRequireDefault(require(\"../ui.scheduler.table_creator\"));\n\nvar _uiSchedulerCurrent_time_shader = _interopRequireDefault(require(\"../shaders/ui.scheduler.current_time_shader.vertical\"));\n\nvar _appointmentDragBehavior = _interopRequireDefault(require(\"../appointmentDragBehavior\"));\n\nvar _constants = require(\"../constants\");\n\nvar _utils = _interopRequireDefault(require(\"../utils.timeZone\"));\n\nvar _widgetObserver = _interopRequireDefault(require(\"../base/widgetObserver\"));\n\nvar _translator = require(\"../../../animation/translator\");\n\nvar _uiScheduler2 = _interopRequireDefault(require(\"./ui.scheduler.virtual_scrolling\"));\n\nvar _view_data_provider = _interopRequireDefault(require(\"./view_data_provider\"));\n\nvar _layout = _interopRequireDefault(require(\"../../../renovation/ui/scheduler/workspaces/base/date_table/all_day_panel/layout.j\"));\n\nvar _title = _interopRequireDefault(require(\"../../../renovation/ui/scheduler/workspaces/base/date_table/all_day_panel/title.j\"));\n\nvar _layout2 = _interopRequireDefault(require(\"../../../renovation/ui/scheduler/workspaces/base/time_panel/layout.j\"));\n\nvar _virtual_selection_state = _interopRequireDefault(require(\"./virtual_selection_state\"));\n\nvar _cache = require(\"./cache\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (null == source) {\n    return {};\n  }\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n\n      if (excluded.indexOf(key) >= 0) {\n        continue;\n      }\n\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) {\n        continue;\n      }\n\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (null == source) {\n    return {};\n  }\n\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n\n    if (excluded.indexOf(key) >= 0) {\n      continue;\n    }\n\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else {\n      if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n      } else {\n        ownKeys(Object(source)).forEach(function (key) {\n          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n      }\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n\n    if (\"value\" in descriptor) {\n      descriptor.writable = true;\n    }\n\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) {\n    _defineProperties(Constructor.prototype, protoProps);\n  }\n\n  if (staticProps) {\n    _defineProperties(Constructor, staticProps);\n  }\n\n  return Constructor;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function (o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar tableCreator = _uiScheduler.default.tableCreator;\nvar abstract = _widgetObserver.default.abstract;\nvar toMs = _date.default.dateToMilliseconds;\nvar COMPONENT_CLASS = \"dx-scheduler-work-space\";\nvar GROUPED_WORKSPACE_CLASS = \"dx-scheduler-work-space-grouped\";\nvar VERTICAL_GROUPED_WORKSPACE_CLASS = \"dx-scheduler-work-space-vertical-grouped\";\nvar WORKSPACE_VERTICAL_GROUP_TABLE_CLASS = \"dx-scheduler-work-space-vertical-group-table\";\nvar WORKSPACE_WITH_BOTH_SCROLLS_CLASS = \"dx-scheduler-work-space-both-scrollbar\";\nvar WORKSPACE_WITH_COUNT_CLASS = \"dx-scheduler-work-space-count\";\nvar WORKSPACE_WITH_GROUP_BY_DATE_CLASS = \"dx-scheduler-work-space-group-by-date\";\nvar WORKSPACE_WITH_ODD_CELLS_CLASS = \"dx-scheduler-work-space-odd-cells\";\nvar TIME_PANEL_CLASS = \"dx-scheduler-time-panel\";\nvar TIME_PANEL_CELL_CLASS = \"dx-scheduler-time-panel-cell\";\nvar TIME_PANEL_ROW_CLASS = \"dx-scheduler-time-panel-row\";\nvar ALL_DAY_PANEL_CLASS = \"dx-scheduler-all-day-panel\";\nvar ALL_DAY_TABLE_CLASS = \"dx-scheduler-all-day-table\";\nvar ALL_DAY_CONTAINER_CLASS = \"dx-scheduler-all-day-appointments\";\nvar ALL_DAY_TITLE_CLASS = \"dx-scheduler-all-day-title\";\nvar ALL_DAY_TITLE_HIDDEN_CLASS = \"dx-scheduler-all-day-title-hidden\";\nvar ALL_DAY_TABLE_CELL_CLASS = \"dx-scheduler-all-day-table-cell\";\nvar ALL_DAY_TABLE_ROW_CLASS = \"dx-scheduler-all-day-table-row\";\nvar WORKSPACE_WITH_ALL_DAY_CLASS = \"dx-scheduler-work-space-all-day\";\nvar WORKSPACE_WITH_COLLAPSED_ALL_DAY_CLASS = \"dx-scheduler-work-space-all-day-collapsed\";\nvar WORKSPACE_WITH_MOUSE_SELECTION_CLASS = \"dx-scheduler-work-space-mouse-selection\";\nvar HORIZONTAL_SIZES_CLASS = \"dx-scheduler-cell-sizes-horizontal\";\nvar VERTICAL_SIZES_CLASS = \"dx-scheduler-cell-sizes-vertical\";\nvar HEADER_PANEL_CLASS = \"dx-scheduler-header-panel\";\nvar HEADER_PANEL_CELL_CLASS = \"dx-scheduler-header-panel-cell\";\nvar HEADER_ROW_CLASS = \"dx-scheduler-header-row\";\nvar GROUP_ROW_CLASS = \"dx-scheduler-group-row\";\nvar GROUP_HEADER_CLASS = \"dx-scheduler-group-header\";\nvar GROUP_HEADER_CONTENT_CLASS = \"dx-scheduler-group-header-content\";\nvar DATE_TABLE_CLASS = \"dx-scheduler-date-table\";\nvar DATE_TABLE_CELL_CLASS = \"dx-scheduler-date-table-cell\";\nvar DATE_TABLE_ROW_CLASS = \"dx-scheduler-date-table-row\";\nvar DATE_TABLE_FOCUSED_CELL_CLASS = \"dx-scheduler-focused-cell\";\nvar VIRTUAL_ROW_CLASS = \"dx-scheduler-virtual-row\";\nvar VIRTUAL_CELL_CLASS = \"dx-scheduler-virtual-cell\";\nvar DATE_TABLE_DROPPABLE_CELL_CLASS = \"dx-scheduler-date-table-droppable-cell\";\nvar SCHEDULER_HEADER_SCROLLABLE_CLASS = \"dx-scheduler-header-scrollable\";\nvar SCHEDULER_SIDEBAR_SCROLLABLE_CLASS = \"dx-scheduler-sidebar-scrollable\";\nvar SCHEDULER_DATE_TABLE_SCROLLABLE_CLASS = \"dx-scheduler-date-table-scrollable\";\nvar SCHEDULER_WORKSPACE_DXPOINTERDOWN_EVENT_NAME = (0, _index.addNamespace)(_pointer.default.down, \"dxSchedulerWorkSpace\");\nvar SCHEDULER_CELL_DXDRAGENTER_EVENT_NAME = (0, _index.addNamespace)(_drag.enter, \"dxSchedulerDateTable\");\nvar SCHEDULER_CELL_DXDROP_EVENT_NAME = (0, _index.addNamespace)(_drag.drop, \"dxSchedulerDateTable\");\nvar SCHEDULER_CELL_DXDRAGLEAVE_EVENT_NAME = (0, _index.addNamespace)(_drag.leave, \"dxSchedulerDateTable\");\nvar SCHEDULER_CELL_DXCLICK_EVENT_NAME = (0, _index.addNamespace)(_click.name, \"dxSchedulerDateTable\");\nvar SCHEDULER_CELL_DXPOINTERDOWN_EVENT_NAME = (0, _index.addNamespace)(_pointer.default.down, \"dxSchedulerDateTable\");\nvar SCHEDULER_CELL_DXPOINTERUP_EVENT_NAME = (0, _index.addNamespace)(_pointer.default.up, \"dxSchedulerDateTable\");\nvar SCHEDULER_CELL_DXPOINTERMOVE_EVENT_NAME = (0, _index.addNamespace)(_pointer.default.move, \"dxSchedulerDateTable\");\nvar CELL_DATA = \"dxCellData\";\nvar DATE_TABLE_CELL_BORDER = 1;\nvar DATE_TABLE_MIN_CELL_WIDTH = 75;\nvar DAY_MS = toMs(\"day\");\nvar HOUR_MS = toMs(\"hour\");\nvar SCHEDULER_DRAG_AND_DROP_SELECTOR = \".\".concat(DATE_TABLE_CLASS, \" td, .\").concat(ALL_DAY_TABLE_CLASS, \" td\");\nvar CELL_SELECTOR = \".\".concat(DATE_TABLE_CELL_CLASS, \", .\").concat(ALL_DAY_TABLE_CELL_CLASS);\n\nvar ScrollSemaphore = function () {\n  function ScrollSemaphore() {\n    this.counter = 0;\n  }\n\n  var _proto = ScrollSemaphore.prototype;\n\n  _proto.isFree = function () {\n    return 0 === this.counter;\n  };\n\n  _proto.take = function () {\n    this.counter++;\n  };\n\n  _proto.release = function () {\n    this.counter--;\n\n    if (this.counter < 0) {\n      this.counter = 0;\n    }\n  };\n\n  return ScrollSemaphore;\n}();\n\nvar formatWeekday = function formatWeekday(date) {\n  return _date2.default.getDayNames(\"abbreviated\")[date.getDay()];\n};\n\nvar SchedulerWorkSpace = function (_WidgetObserver) {\n  _inheritsLoose(SchedulerWorkSpace, _WidgetObserver);\n\n  function SchedulerWorkSpace() {\n    return _WidgetObserver.apply(this, arguments) || this;\n  }\n\n  var _proto2 = SchedulerWorkSpace.prototype;\n\n  _proto2._supportedKeys = function () {\n    var clickHandler = function clickHandler(e) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      if (this._selectedCells && this._selectedCells.length) {\n        var $itemElement = (0, _renderer.default)(this.option(\"focusedElement\"));\n        var $cellElement = (0, _renderer.default)($itemElement.length ? $itemElement : this._selectedCells);\n        e.target = this._selectedCells;\n        this._showPopup = true;\n\n        this._cellClickAction({\n          event: e,\n          cellElement: (0, _renderer.default)(this._selectedCells),\n          cellData: this.getCellData($cellElement)\n        });\n      }\n    };\n\n    var arrowPressHandler = function arrowPressHandler(e, cell) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      this._moveToCell(cell, e.shiftKey);\n    };\n\n    return (0, _extend.extend)(_WidgetObserver.prototype._supportedKeys.call(this), {\n      enter: clickHandler,\n      space: clickHandler,\n      downArrow: function downArrow(e) {\n        var $cell = this._getCellFromNextRow(\"next\", e.shiftKey);\n\n        arrowPressHandler.call(this, e, $cell);\n      },\n      upArrow: function upArrow(e) {\n        var $cell = this._getCellFromNextRow(\"prev\", e.shiftKey);\n\n        arrowPressHandler.call(this, e, $cell);\n      },\n      rightArrow: function rightArrow(e) {\n        var $rightCell = this._getCellFromNextColumn(\"next\", e.shiftKey);\n\n        arrowPressHandler.call(this, e, $rightCell);\n      },\n      leftArrow: function leftArrow(e) {\n        var $leftCell = this._getCellFromNextColumn(\"prev\", e.shiftKey);\n\n        arrowPressHandler.call(this, e, $leftCell);\n      }\n    });\n  };\n\n  _proto2._dispose = function () {\n    var _this$virtualScrollin;\n\n    _WidgetObserver.prototype._dispose.call(this);\n\n    null === (_this$virtualScrollin = this.virtualScrollingDispatcher) || void 0 === _this$virtualScrollin ? void 0 : _this$virtualScrollin.dispose();\n\n    this._disposeRenovatedComponents();\n  };\n\n  _proto2._isRTL = function () {\n    return this.option(\"rtlEnabled\");\n  };\n\n  _proto2._getFocusedCell = function () {\n    return this._$focusedCell || this._$dateTable.find(\".\" + DATE_TABLE_CELL_CLASS).eq(0);\n  };\n\n  _proto2._getAllFocusedCells = function () {\n    return this._selectedCells || this._$dateTable.find(\".\" + DATE_TABLE_CELL_CLASS).eq(0);\n  };\n\n  _proto2._getCellFromNextRow = function (direction) {\n    var $currentCell = this._$focusedCell;\n\n    if ((0, _type.isDefined)($currentCell)) {\n      var cellIndex = $currentCell.index();\n      var $row = $currentCell.parent();\n      var $cell = $row[direction]().children().eq(cellIndex);\n      $cell = this._checkForViewBounds($cell);\n      return $cell;\n    }\n  };\n\n  _proto2._checkForViewBounds = function ($item) {\n    if (!$item.length) {\n      $item = this._$focusedCell;\n    }\n\n    return $item;\n  };\n\n  _proto2._getCellFromNextColumn = function (direction, isMultiSelection) {\n    var $focusedCell = this._$focusedCell;\n\n    if (!(0, _type.isDefined)($focusedCell)) {\n      return;\n    }\n\n    var $nextCell;\n    var $row = $focusedCell.parent();\n    var nextColumnDirection = direction;\n    var isDirectionNext = \"next\" === direction;\n    var previousColumnDirection = isDirectionNext ? \"prev\" : \"next\";\n\n    var isRTL = this._isRTL();\n\n    var groupCount = this._getGroupCount();\n\n    var isHorizontalGrouping = this._isHorizontalGroupedWorkSpace();\n\n    var isGroupedByDate = this.isGroupedByDate();\n\n    var totalCellCount = this._getTotalCellCount(groupCount);\n\n    var rowCellCount = isMultiSelection && !isGroupedByDate ? this._getCellCount() : totalCellCount;\n    var lastIndexInRow = rowCellCount - 1;\n    var currentIndex = $focusedCell.index();\n    var step = isGroupedByDate && isMultiSelection ? groupCount : 1;\n\n    var isEdgeCell = this._isEdgeCell(isHorizontalGrouping ? totalCellCount - 1 : lastIndexInRow, currentIndex, step, direction);\n\n    var sign = isRTL ? 1 : -1;\n    var directionSign = isDirectionNext ? 1 : -1;\n    var resultingSign = sign * directionSign;\n\n    if (isEdgeCell || isMultiSelection && this._isGroupEndCell($focusedCell, direction)) {\n      var nextIndex = currentIndex - resultingSign * step + resultingSign * rowCellCount;\n      var rowDirection = isRTL ? previousColumnDirection : nextColumnDirection;\n      $nextCell = $row[rowDirection]().children().eq(nextIndex);\n      $nextCell = this._checkForViewBounds($nextCell);\n    } else {\n      $nextCell = $row.children().eq(currentIndex - resultingSign * step);\n    }\n\n    return $nextCell;\n  };\n\n  _proto2._isEdgeCell = function (lastIndexInRow, cellIndex, step, direction) {\n    var isRTL = this._isRTL();\n\n    var isDirectionNext = \"next\" === direction;\n    var rightEdgeCellIndex = isRTL ? 0 : lastIndexInRow;\n    var leftEdgeCellIndex = isRTL ? lastIndexInRow : 0;\n    var edgeCellIndex = isDirectionNext ? rightEdgeCellIndex : leftEdgeCellIndex;\n    var isNextCellGreaterThanEdge = cellIndex + step > edgeCellIndex;\n    var isNextCellLessThanEdge = cellIndex - step < edgeCellIndex;\n    var isRightEdgeCell = isRTL ? isNextCellLessThanEdge : isNextCellGreaterThanEdge;\n    var isLeftEdgeCell = isRTL ? isNextCellGreaterThanEdge : isNextCellLessThanEdge;\n    return isDirectionNext ? isRightEdgeCell : isLeftEdgeCell;\n  };\n\n  _proto2._isGroupEndCell = function ($cell, direction) {\n    if (this.isGroupedByDate()) {\n      return false;\n    }\n\n    var isDirectionNext = \"next\" === direction;\n\n    var cellsInRow = this._getCellCount();\n\n    var currentCellIndex = $cell.index();\n    var result = currentCellIndex % cellsInRow;\n    var endCell = isDirectionNext ? cellsInRow - 1 : 0;\n    var startCell = isDirectionNext ? 0 : cellsInRow - 1;\n    return this._isRTL() ? result === startCell : result === endCell;\n  };\n\n  _proto2._moveToCell = function ($cell, isMultiSelection) {\n    isMultiSelection = isMultiSelection && this.option(\"allowMultipleCellSelection\");\n\n    this._setSelectedAndFocusedCells($cell, isMultiSelection);\n\n    this._dateTableScrollable.scrollToElement($cell);\n  };\n\n  _proto2._setSelectedAndFocusedCells = function ($cell, isMultiSelection) {\n    if (!(0, _type.isDefined)($cell) || !$cell.length) {\n      return;\n    }\n\n    var updateViewData = this.isVirtualScrolling();\n    var $correctedCell = $cell;\n\n    if (isMultiSelection) {\n      $correctedCell = this._correctCellForGroup($cell);\n    }\n\n    if ($correctedCell.hasClass(DATE_TABLE_FOCUSED_CELL_CLASS)) {\n      return;\n    }\n\n    this._setSelectedCells($correctedCell, isMultiSelection);\n\n    this._setFocusedCell($correctedCell, updateViewData);\n  };\n\n  _proto2._setFocusedCell = function ($cell) {\n    var updateViewData = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : false;\n\n    this._releaseFocusedCell();\n\n    var $correctedCell = $cell;\n\n    if (updateViewData) {\n      var _this$_getCoordinates = this._getCoordinatesByCell($cell),\n          rowIndex = _this$_getCoordinates.rowIndex,\n          columnIndex = _this$_getCoordinates.columnIndex;\n\n      var isAllDayCell = this._hasAllDayClass($cell);\n\n      this.virtualSelectionState.setFocusedCell(rowIndex, columnIndex, isAllDayCell);\n      var focusedCell = this.virtualSelectionState.getFocusedCell(this._isVerticalGroupedWorkSpace());\n      var cellData = focusedCell.cellData,\n          coordinates = focusedCell.coordinates;\n      var allDay = cellData.allDay;\n      $correctedCell = allDay && !this._isVerticalGroupedWorkSpace() ? this._dom_getAllDayPanelCell(coordinates.cellIndex) : this._dom_getDateCell(coordinates);\n    }\n\n    this._toggleFocusedCellClass(true, $correctedCell);\n\n    this._$focusedCell = $correctedCell;\n  };\n\n  _proto2._setSelectedCells = function ($firstCell, isMultiSelection) {\n    this._releaseSelectedCells();\n\n    this._selectedCells = [];\n\n    if (this.isVirtualScrolling()) {\n      this._setSelectedCellsInVirtualMode($firstCell, isMultiSelection);\n    } else {\n      this._setSelectedCellsInStandardMode($firstCell, isMultiSelection);\n    }\n\n    var $selectedCells = (0, _renderer.default)(this._selectedCells);\n\n    this._toggleFocusClass(true, $selectedCells);\n\n    this.setAria(\"label\", \"Add appointment\", $selectedCells);\n    var selectedCellData = this.getSelectedCellData().map(function (_ref) {\n      var startDate = _ref.startDate,\n          endDate = _ref.endDate,\n          allDay = _ref.allDay,\n          groups = _ref.groups,\n          groupIndex = _ref.groupIndex;\n      return {\n        startDate: startDate,\n        endDate: endDate,\n        allDay: allDay,\n        groups: groups,\n        groupIndex: groupIndex || 0\n      };\n    });\n    this.option(\"selectedCellData\", selectedCellData);\n\n    this._selectionChangedAction({\n      selectedCellData: selectedCellData\n    });\n  };\n\n  _proto2._setSelectedCellsInStandardMode = function ($firstCell, isMultiSelection) {\n    if (isMultiSelection) {\n      var $previousCell = this._$prevCell;\n      var orientation = \"day\" === this.option(\"type\") && (!this.option(\"groups\").length || \"vertical\" === this.option(\"groupOrientation\")) ? \"vertical\" : \"horizontal\";\n\n      var $targetCells = this._getCellsBetween($firstCell, $previousCell, orientation);\n\n      this._selectedCells = $targetCells.toArray();\n    } else {\n      this._selectedCells = [$firstCell.get(0)];\n      this._$prevCell = $firstCell;\n    }\n  };\n\n  _proto2._setSelectedCellsInVirtualMode = function ($firstCell, isMultiSelection) {\n    if (isMultiSelection) {\n      var _this$_getCoordinates2 = this._getCoordinatesByCell($firstCell),\n          firstRow = _this$_getCoordinates2.rowIndex,\n          firstColumn = _this$_getCoordinates2.columnIndex;\n\n      var isFirstAllDay = this._hasAllDayClass($firstCell);\n\n      var firstCell = {\n        rowIndex: firstRow,\n        columnIndex: firstColumn,\n        allDay: isFirstAllDay\n      };\n      this.virtualSelectionState.setSelectedCells(firstCell);\n    } else {\n      this._selectedCells = [$firstCell.get(0)];\n      this._$prevCell = $firstCell;\n\n      var _this$_getCoordinates3 = this._getCoordinatesByCell($firstCell),\n          rowIndex = _this$_getCoordinates3.rowIndex,\n          columnIndex = _this$_getCoordinates3.columnIndex;\n\n      var isAllDayCell = this._hasAllDayClass($firstCell);\n\n      var _firstCell = {\n        rowIndex: rowIndex,\n        columnIndex: columnIndex,\n        allDay: isAllDayCell\n      };\n      this.virtualSelectionState.setSelectedCells(_firstCell, _firstCell);\n    }\n\n    this._setSelectedCellsByCellData(this.virtualSelectionState.getSelectedCells());\n  };\n\n  _proto2._correctCellForGroup = function ($cell) {\n    if (this.isVirtualScrolling()) {\n      var cellData = this.getCellData($cell);\n      var isValidFocusedCell = this.virtualSelectionState.isValidFocusedCell(cellData);\n      return isValidFocusedCell ? $cell : this._$focusedCell;\n    }\n\n    var $focusedCell = this._$focusedCell;\n\n    var cellGroupIndex = this._getGroupIndexByCell($cell);\n\n    var focusedCellGroupIndex = this._getGroupIndexByCell($focusedCell);\n\n    var isDifferentTables = this._hasAllDayClass($cell) !== this._hasAllDayClass($focusedCell);\n\n    return focusedCellGroupIndex !== cellGroupIndex || isDifferentTables ? $focusedCell : $cell;\n  };\n\n  _proto2._getCellsBetween = function ($first, $last, direction) {\n    var isAllDayTable = this._hasAllDayClass($last);\n\n    var $cells = this._getCells(isAllDayTable, direction);\n\n    var firstIndex = $cells.index($first);\n    var lastIndex = $cells.index($last);\n\n    if (firstIndex > lastIndex) {\n      var buffer = firstIndex;\n      firstIndex = lastIndex;\n      lastIndex = buffer;\n    }\n\n    $cells = $cells.slice(firstIndex, lastIndex + 1);\n\n    if (this._getGroupCount() > 1) {\n      var result = [];\n\n      var focusedGroupIndex = this._getGroupIndexByCell($first);\n\n      (0, _iterator.each)($cells, function (_, cell) {\n        var groupIndex = this._getGroupIndexByCell((0, _renderer.default)(cell));\n\n        if (focusedGroupIndex === groupIndex) {\n          result.push(cell);\n        }\n      }.bind(this));\n      $cells = (0, _renderer.default)(result);\n    }\n\n    return $cells;\n  };\n\n  _proto2._hasAllDayClass = function ($cell) {\n    return $cell.hasClass(ALL_DAY_TABLE_CELL_CLASS);\n  };\n\n  _proto2._getGroupIndexByCell = function ($cell) {\n    if (this.isVirtualScrolling()) {\n      var _this$_getCoordinates4 = this._getCoordinatesByCell($cell),\n          rowIndex = _this$_getCoordinates4.rowIndex,\n          columnIndex = _this$_getCoordinates4.columnIndex;\n\n      var isAllDayCell = $cell.hasClass(ALL_DAY_TABLE_CELL_CLASS);\n      return this.viewDataProvider.getCellData(rowIndex, columnIndex, isAllDayCell).groupIndex;\n    }\n\n    return this._groupedStrategy.getGroupIndexByCell($cell);\n  };\n\n  _proto2._toggleFocusedCellClass = function (isFocused, $element) {\n    var $focusTarget = $element && $element.length ? $element : this._focusTarget();\n    $focusTarget.toggleClass(DATE_TABLE_FOCUSED_CELL_CLASS, isFocused);\n  };\n\n  _proto2._releaseSelectedAndFocusedCells = function () {\n    this._releaseFocusedCell();\n\n    this._releaseSelectedCells();\n\n    this.option(\"selectedCellData\", []);\n  };\n\n  _proto2._releaseFocusedCell = function () {\n    var $cell = this._$focusedCell;\n\n    if ((0, _type.isDefined)($cell) && $cell.length) {\n      this._toggleFocusedCellClass(false, $cell);\n\n      this.setAria(\"label\", void 0, $cell);\n    }\n  };\n\n  _proto2._releaseSelectedCells = function () {\n    var $cells = (0, _renderer.default)(this._selectedCells);\n\n    if ((0, _type.isDefined)($cells) && $cells.length) {\n      this._toggleFocusClass(false, $cells);\n\n      this.setAria(\"label\", void 0, $cells);\n    }\n  };\n\n  _proto2._focusInHandler = function (e) {\n    if ((0, _renderer.default)(e.target).is(this._focusTarget()) && false !== this._isCellClick) {\n      delete this._isCellClick;\n      delete this._contextMenuHandled;\n\n      _WidgetObserver.prototype._focusInHandler.apply(this, arguments);\n\n      var $cell = this._getFocusedCell();\n\n      this._setSelectedAndFocusedCells($cell);\n    }\n  };\n\n  _proto2._focusOutHandler = function () {\n    _WidgetObserver.prototype._focusOutHandler.apply(this, arguments);\n\n    if (!this._contextMenuHandled) {\n      var _this$virtualSelectio;\n\n      this._releaseSelectedAndFocusedCells();\n\n      null === (_this$virtualSelectio = this.virtualSelectionState) || void 0 === _this$virtualSelectio ? void 0 : _this$virtualSelectio.releaseSelectedAndFocusedCells();\n    }\n  };\n\n  _proto2._focusTarget = function () {\n    return this.$element();\n  };\n\n  _proto2._getDefaultOptions = function () {\n    return (0, _extend.extend)(_WidgetObserver.prototype._getDefaultOptions.call(this), {\n      currentDate: new Date(),\n      intervalCount: 1,\n      startDate: null,\n      firstDayOfWeek: void 0,\n      startDayHour: 0,\n      endDayHour: 24,\n      hoursInterval: .5,\n      activeStateEnabled: true,\n      hoverStateEnabled: true,\n      groups: [],\n      showAllDayPanel: true,\n      allDayExpanded: false,\n      onCellClick: null,\n      crossScrollingEnabled: false,\n      dataCellTemplate: null,\n      timeCellTemplate: null,\n      resourceCellTemplate: null,\n      dateCellTemplate: null,\n      allowMultipleCellSelection: true,\n      indicatorTime: new Date(),\n      indicatorUpdateInterval: 5 * toMs(\"minute\"),\n      shadeUntilCurrentTime: true,\n      groupOrientation: \"horizontal\",\n      selectedCellData: [],\n      groupByDate: false,\n      scrolling: {\n        mode: \"standard\"\n      },\n      renovateRender: false,\n      height: void 0\n    });\n  };\n\n  _proto2._optionChanged = function (args) {\n    switch (args.name) {\n      case \"startDayHour\":\n      case \"endDayHour\":\n        this.invoke(\"validateDayHours\");\n\n        this._cleanWorkSpace();\n\n        break;\n\n      case \"dateCellTemplate\":\n      case \"resourceCellTemplate\":\n      case \"dataCellTemplate\":\n      case \"timeCellTemplate\":\n      case \"hoursInterval\":\n      case \"firstDayOfWeek\":\n      case \"currentDate\":\n      case \"startDate\":\n        this._cleanWorkSpace();\n\n        break;\n\n      case \"groups\":\n        this._cleanView();\n\n        this._disposeRenovatedComponents();\n\n        this._removeAllDayElements();\n\n        this._initGrouping();\n\n        this.repaint();\n        break;\n\n      case \"groupOrientation\":\n        this._initGroupedStrategy();\n\n        this._createAllDayPanelElements();\n\n        this._removeAllDayElements();\n\n        this._cleanWorkSpace();\n\n        this._toggleGroupByDateClass();\n\n        break;\n\n      case \"showAllDayPanel\":\n        if (this._isVerticalGroupedWorkSpace()) {\n          this._cleanView();\n\n          this._disposeRenovatedComponents();\n\n          this._removeAllDayElements();\n\n          this._initGrouping();\n\n          this.repaint();\n        } else {\n          this._toggleAllDayVisibility();\n        }\n\n        break;\n\n      case \"allDayExpanded\":\n        this._changeAllDayVisibility();\n\n        this._attachTablesEvents();\n\n        this.headerPanelOffsetRecalculate();\n\n        this._updateScrollable();\n\n        break;\n\n      case \"onSelectionChanged\":\n        this._createSelectionChangedAction();\n\n        break;\n\n      case \"onCellClick\":\n        this._createCellClickAction();\n\n        break;\n\n      case \"onCellContextMenu\":\n        this._attachContextMenuEvent();\n\n        break;\n\n      case \"intervalCount\":\n        this._cleanWorkSpace();\n\n        this._toggleWorkSpaceCountClass();\n\n        this._toggleFixedScrollableClass();\n\n        break;\n\n      case \"groupByDate\":\n        this._cleanWorkSpace();\n\n        this._toggleGroupByDateClass();\n\n        break;\n\n      case \"crossScrollingEnabled\":\n        this._toggleHorizontalScrollClass();\n\n        this._dateTableScrollable.option(this._dateTableScrollableConfig());\n\n        break;\n\n      case \"width\":\n        _WidgetObserver.prototype._optionChanged.call(this, args);\n\n        this._dimensionChanged();\n\n        break;\n\n      case \"allowMultipleCellSelection\":\n        break;\n\n      case \"selectedCellData\":\n        break;\n\n      case \"scrolling\":\n        this.option(\"renovateRender\", this._isVirtualModeOn());\n        break;\n\n      case \"renovateRender\":\n        this._disposeRenovatedComponents();\n\n        this.repaint();\n        break;\n\n      default:\n        _WidgetObserver.prototype._optionChanged.call(this, args);\n\n    }\n  };\n\n  _proto2._cleanWorkSpace = function () {\n    this._cleanView();\n\n    this._toggleGroupedClass();\n\n    this._toggleWorkSpaceWithOddCells();\n\n    this._renderView();\n  };\n\n  _proto2._init = function () {\n    this._headerSemaphore = new ScrollSemaphore();\n    this._sideBarSemaphore = new ScrollSemaphore();\n    this._dataTableSemaphore = new ScrollSemaphore();\n    this._viewDataProvider = null;\n    this._virtualSelectionState = null;\n    this._activeStateUnit = CELL_SELECTOR;\n    this._maxAllowedVerticalPosition = [];\n    this._maxAllowedPosition = [];\n\n    _WidgetObserver.prototype._init.call(this);\n\n    this._initGrouping();\n\n    this._toggleHorizontalScrollClass();\n\n    this._toggleWorkSpaceCountClass();\n\n    this._toggleGroupByDateClass();\n\n    this._toggleWorkSpaceWithOddCells();\n\n    this.$element().addClass(COMPONENT_CLASS).addClass(this._getElementClass());\n  };\n\n  _proto2._initGrouping = function () {\n    this._initGroupedStrategy();\n\n    this._toggleGroupingDirectionClass();\n\n    this._toggleGroupByDateClass();\n  };\n\n  _proto2._initGroupedStrategy = function () {\n    var strategyName = this.option(\"groups\").length ? this.option(\"groupOrientation\") : this._getDefaultGroupStrategy();\n    var Strategy = \"vertical\" === strategyName ? _uiSchedulerWork_spaceGroupedStrategy2.default : _uiSchedulerWork_spaceGroupedStrategy.default;\n    this._groupedStrategy = new Strategy(this);\n  };\n\n  _proto2._getDefaultGroupStrategy = function () {\n    return \"horizontal\";\n  };\n\n  _proto2._isVerticalGroupedWorkSpace = function () {\n    return !!this.option(\"groups\").length && \"vertical\" === this.option(\"groupOrientation\");\n  };\n\n  _proto2._isHorizontalGroupedWorkSpace = function () {\n    return !!this.option(\"groups\").length && \"horizontal\" === this.option(\"groupOrientation\");\n  };\n\n  _proto2._toggleHorizontalScrollClass = function () {\n    this.$element().toggleClass(WORKSPACE_WITH_BOTH_SCROLLS_CLASS, this.option(\"crossScrollingEnabled\"));\n  };\n\n  _proto2._toggleGroupByDateClass = function () {\n    this.$element().toggleClass(WORKSPACE_WITH_GROUP_BY_DATE_CLASS, this.isGroupedByDate());\n  };\n\n  _proto2._toggleWorkSpaceCountClass = function () {\n    this.$element().toggleClass(WORKSPACE_WITH_COUNT_CLASS, this._isWorkSpaceWithCount());\n  };\n\n  _proto2._isWorkSpaceWithCount = function () {\n    return this.option(\"intervalCount\") > 1;\n  };\n\n  _proto2._toggleWorkSpaceWithOddCells = function () {\n    this.$element().toggleClass(WORKSPACE_WITH_ODD_CELLS_CLASS, this._isWorkspaceWithOddCells());\n  };\n\n  _proto2._isWorkspaceWithOddCells = function () {\n    return .5 === this.option(\"hoursInterval\") && !this.isVirtualScrolling();\n  };\n\n  _proto2._toggleGroupingDirectionClass = function () {\n    this.$element().toggleClass(VERTICAL_GROUPED_WORKSPACE_CLASS, this._isVerticalGroupedWorkSpace());\n  };\n\n  _proto2._getRealGroupOrientation = function () {\n    return this._isVerticalGroupedWorkSpace() ? \"vertical\" : \"horizontal\";\n  };\n\n  _proto2._getTimePanelClass = function () {\n    return TIME_PANEL_CLASS;\n  };\n\n  _proto2._getDateTableClass = function () {\n    return DATE_TABLE_CLASS;\n  };\n\n  _proto2._getDateTableRowClass = function () {\n    return DATE_TABLE_ROW_CLASS;\n  };\n\n  _proto2._getDateTableCellClass = function (i, j) {\n    var cellClass = DATE_TABLE_CELL_CLASS + \" \" + HORIZONTAL_SIZES_CLASS + \" \" + VERTICAL_SIZES_CLASS;\n    return this._needApplyLastGroupCellClass() ? this._groupedStrategy.addAdditionalGroupCellClasses(cellClass, j + 1, i, j) : cellClass;\n  };\n\n  _proto2._needApplyLastGroupCellClass = function () {\n    return true;\n  };\n\n  _proto2._getGroupRowClass = function () {\n    return GROUP_ROW_CLASS;\n  };\n\n  _proto2._getGroupHeaderClass = function (i) {\n    var cellClass = GROUP_HEADER_CLASS;\n    return this._groupedStrategy.addAdditionalGroupCellClasses(cellClass, i + 1);\n  };\n\n  _proto2._getGroupHeaderContentClass = function () {\n    return GROUP_HEADER_CONTENT_CLASS;\n  };\n\n  _proto2._initWorkSpaceUnits = function () {\n    this._$headerPanel = (0, _renderer.default)(\"<table>\");\n    this._$thead = (0, _renderer.default)(\"<thead>\").appendTo(this._$headerPanel);\n    this._$fixedContainer = (0, _renderer.default)(\"<div>\").addClass(_constants.FIXED_CONTAINER_CLASS);\n    this._$allDayContainer = (0, _renderer.default)(\"<div>\").addClass(ALL_DAY_CONTAINER_CLASS);\n\n    this._initAllDayPanelElements();\n\n    if (this.isRenovatedRender()) {\n      this.createRAllDayPanelElements();\n    } else {\n      this._createAllDayPanelElements();\n    }\n\n    this._$timePanel = (0, _renderer.default)(\"<table>\").addClass(this._getTimePanelClass());\n    this._$dateTable = (0, _renderer.default)(\"<table>\");\n    this._$groupTable = (0, _renderer.default)(\"<div>\").addClass(WORKSPACE_VERTICAL_GROUP_TABLE_CLASS);\n  };\n\n  _proto2._initAllDayPanelElements = function () {\n    this._allDayTitles = [];\n    this._allDayTables = [];\n    this._allDayPanels = [];\n  };\n\n  _proto2.createRAllDayPanelElements = function () {\n    this._$allDayPanel = (0, _renderer.default)(\"<div>\");\n    this._$allDayTitle = (0, _renderer.default)(\"<div>\").appendTo(this.$element());\n  };\n\n  _proto2._createAllDayPanelElements = function () {\n    var groupCount = this._getGroupCount();\n\n    if (this._isVerticalGroupedWorkSpace() && 0 !== groupCount) {\n      for (var i = 0; i < groupCount; i++) {\n        var $allDayTitle = (0, _renderer.default)(\"<div>\").addClass(ALL_DAY_TITLE_CLASS).text(_message.default.format(\"dxScheduler-allDay\"));\n\n        this._allDayTitles.push($allDayTitle);\n\n        this._$allDayTable = (0, _renderer.default)(\"<table>\");\n\n        this._allDayTables.push(this._$allDayTable);\n\n        this._$allDayPanel = (0, _renderer.default)(\"<div>\").addClass(ALL_DAY_PANEL_CLASS).append(this._$allDayTable);\n\n        this._allDayPanels.push(this._$allDayPanel);\n      }\n    } else {\n      this._$allDayTitle = (0, _renderer.default)(\"<div>\").addClass(ALL_DAY_TITLE_CLASS).text(_message.default.format(\"dxScheduler-allDay\")).appendTo(this.$element());\n      this._$allDayTable = (0, _renderer.default)(\"<table>\");\n      this._$allDayPanel = (0, _renderer.default)(\"<div>\").addClass(ALL_DAY_PANEL_CLASS).append(this._$allDayTable);\n    }\n  };\n\n  _proto2._initDateTableScrollable = function () {\n    var $dateTableScrollable = (0, _renderer.default)(\"<div>\").addClass(SCHEDULER_DATE_TABLE_SCROLLABLE_CLASS);\n    this._dateTableScrollable = this._createComponent($dateTableScrollable, _ui2.default, this._dateTableScrollableConfig());\n  };\n\n  _proto2._dateTableScrollableConfig = function () {\n    var config = {\n      useKeyboard: false,\n      bounceEnabled: false,\n      updateManually: true,\n      pushBackValue: 0\n    };\n\n    if (this._needCreateCrossScrolling()) {\n      config = (0, _extend.extend)(config, this._createCrossScrollingConfig());\n    }\n\n    return config;\n  };\n\n  _proto2._createCrossScrollingConfig = function () {\n    var _this = this;\n\n    var config = {};\n    config.direction = \"both\";\n\n    config.onScroll = function (e) {\n      _this._dataTableSemaphore.take();\n\n      _this._sideBarSemaphore.isFree() && _this._sidebarScrollable && _this._sidebarScrollable.scrollTo({\n        top: e.scrollOffset.top\n      });\n      _this._headerSemaphore.isFree() && _this._headerScrollable && _this._headerScrollable.scrollTo({\n        left: e.scrollOffset.left\n      });\n\n      _this._dataTableSemaphore.release();\n    };\n\n    config.onEnd = function () {\n      _this.notifyObserver(\"updateResizableArea\", {});\n    };\n\n    return config;\n  };\n\n  _proto2._createWorkSpaceElements = function () {\n    if (this.option(\"crossScrollingEnabled\")) {\n      this._createWorkSpaceScrollableElements();\n    } else {\n      this._createWorkSpaceStaticElements();\n    }\n  };\n\n  _proto2._createWorkSpaceStaticElements = function () {\n    if (this._isVerticalGroupedWorkSpace()) {\n      this._dateTableScrollable.$content().append(this._$allDayContainer, this._$groupTable, this._$timePanel, this._$dateTable);\n\n      this.$element().append(this._$fixedContainer, this._$headerPanel, this._dateTableScrollable.$element());\n    } else {\n      this._dateTableScrollable.$content().append(this._$timePanel, this._$dateTable);\n\n      this.$element().append(this._$fixedContainer, this._$headerPanel, this._$allDayContainer, this._$allDayPanel, this._dateTableScrollable.$element());\n    }\n  };\n\n  _proto2._createWorkSpaceScrollableElements = function () {\n    this.$element().append(this._$fixedContainer);\n\n    this._createHeaderScrollable();\n\n    this._createSidebarScrollable();\n\n    this.$element().append(this._dateTableScrollable.$element());\n\n    this._headerScrollable.$content().append(this._$headerPanel);\n\n    this._dateTableScrollable.$content().append(this._$dateTable);\n\n    if (this._isVerticalGroupedWorkSpace()) {\n      this._dateTableScrollable.$content().prepend(this._$allDayContainer);\n\n      this._sidebarScrollable.$content().append(this._$groupTable, this._$timePanel);\n    } else {\n      this._headerScrollable.$content().append(this._$allDayContainer, this._$allDayPanel);\n    }\n\n    this._sidebarScrollable.$content().append(this._$timePanel);\n  };\n\n  _proto2._createHeaderScrollable = function () {\n    var $headerScrollable = (0, _renderer.default)(\"<div>\").addClass(SCHEDULER_HEADER_SCROLLABLE_CLASS).appendTo(this.$element());\n    this._headerScrollable = this._createComponent($headerScrollable, _ui2.default, this._headerScrollableConfig());\n  };\n\n  _proto2._headerScrollableConfig = function () {\n    var _this2 = this;\n\n    var config = {\n      useKeyboard: false,\n      showScrollbar: false,\n      direction: \"horizontal\",\n      useNative: false,\n      updateManually: true,\n      bounceEnabled: false,\n      pushBackValue: 0,\n      onScroll: function onScroll(e) {\n        _this2._headerSemaphore.take();\n\n        _this2._dataTableSemaphore.isFree() && _this2._dateTableScrollable.scrollTo({\n          left: e.scrollOffset.left\n        });\n\n        _this2._headerSemaphore.release();\n      }\n    };\n    return config;\n  };\n\n  _proto2._createSidebarScrollable = function () {\n    var _this3 = this;\n\n    var $timePanelScrollable = (0, _renderer.default)(\"<div>\").addClass(SCHEDULER_SIDEBAR_SCROLLABLE_CLASS).appendTo(this.$element());\n    this._sidebarScrollable = this._createComponent($timePanelScrollable, _ui2.default, {\n      useKeyboard: false,\n      showScrollbar: false,\n      direction: \"vertical\",\n      useNative: false,\n      updateManually: true,\n      bounceEnabled: false,\n      pushBackValue: 0,\n      onScroll: function onScroll(e) {\n        _this3._sideBarSemaphore.take();\n\n        _this3._dataTableSemaphore.isFree() && _this3._dateTableScrollable.scrollTo({\n          top: e.scrollOffset.top\n        });\n\n        _this3._sideBarSemaphore.release();\n      }\n    });\n  };\n\n  _proto2._visibilityChanged = function (visible) {\n    this.cache.clear();\n\n    if (visible && this._isVerticalGroupedWorkSpace()) {\n      this._setHorizontalGroupHeaderCellsHeight();\n    }\n\n    if (visible && this._needCreateCrossScrolling()) {\n      this._setTableSizes();\n    }\n  };\n\n  _proto2._attachTableClasses = function () {\n    this._addTableClass(this._$dateTable, this._getDateTableClass());\n\n    if (this._isVerticalGroupedWorkSpace()) {\n      var groupCount = this._getGroupCount();\n\n      for (var i = 0; i < groupCount; i++) {\n        this._addTableClass(this._allDayTables[i], ALL_DAY_TABLE_CLASS);\n      }\n    } else {\n      this._addTableClass(this._$allDayTable, ALL_DAY_TABLE_CLASS);\n    }\n  };\n\n  _proto2._attachHeaderTableClasses = function () {\n    this._addTableClass(this._$headerPanel, HEADER_PANEL_CLASS);\n  };\n\n  _proto2._addTableClass = function ($el, className) {\n    $el && !$el.hasClass(className) && $el.addClass(className);\n  };\n\n  _proto2._setTableSizes = function () {\n    this._attachTableClasses();\n\n    var cellWidth = this.getCellWidth();\n\n    if (cellWidth < this.getCellMinWidth()) {\n      cellWidth = this.getCellMinWidth();\n    }\n\n    var minWidth = this.getWorkSpaceMinWidth();\n\n    var $headerCells = this._$headerPanel.find(\"tr\").last().find(\"th\");\n\n    var width = cellWidth * $headerCells.length;\n\n    if (width < minWidth) {\n      width = minWidth;\n    }\n\n    this._$headerPanel.width(width);\n\n    this._$dateTable.width(width);\n\n    this._$allDayTable && this._$allDayTable.width(width);\n\n    this._attachHeaderTableClasses();\n\n    if (this._isVerticalGroupedWorkSpace()) {\n      this._setHorizontalGroupHeaderCellsHeight();\n    }\n  };\n\n  _proto2.getWorkSpaceMinWidth = function () {\n    return this._groupedStrategy.getWorkSpaceMinWidth();\n  };\n\n  _proto2._dimensionChanged = function () {\n    if (this.option(\"crossScrollingEnabled\")) {\n      this._setTableSizes();\n    }\n\n    this.headerPanelOffsetRecalculate();\n    this.cache.clear();\n\n    this._cleanAllowedPositions();\n  };\n\n  _proto2._needCreateCrossScrolling = function () {\n    return this.option(\"crossScrollingEnabled\");\n  };\n\n  _proto2._getElementClass = function () {\n    return (0, _common.noop)();\n  };\n\n  _proto2._getRowCount = function () {\n    return (0, _common.noop)();\n  };\n\n  _proto2._getRowCountWithAllDayRows = function () {\n    var allDayRowCount = this._isShowAllDayPanel() ? 1 : 0;\n    return this._getRowCount() + allDayRowCount;\n  };\n\n  _proto2._getCellCount = function () {\n    return (0, _common.noop)();\n  };\n\n  _proto2._initMarkup = function () {\n    this.cache.clear();\n\n    this._initWorkSpaceUnits();\n\n    this._initDateTableScrollable();\n\n    this._createWorkSpaceElements();\n\n    this._initVirtualScrolling();\n\n    _WidgetObserver.prototype._initMarkup.call(this);\n\n    if (!this.option(\"crossScrollingEnabled\")) {\n      this._attachTableClasses();\n\n      this._attachHeaderTableClasses();\n    }\n\n    this._toggleGroupedClass();\n\n    this._toggleFixedScrollableClass();\n\n    this._renderView();\n\n    this._attachEvents();\n\n    this._setFocusOnCellByOption(this.option(\"selectedCellData\"));\n  };\n\n  _proto2.isRenovatedRender = function () {\n    return this.renovatedRenderSupported() && this.option(\"renovateRender\");\n  };\n\n  _proto2._isVirtualModeOn = function () {\n    return \"virtual\" === this.option(\"scrolling.mode\");\n  };\n\n  _proto2.isVirtualScrolling = function () {\n    return this.isRenovatedRender() && this._isVirtualModeOn();\n  };\n\n  _proto2._initVirtualScrolling = function () {\n    if (this.virtualScrollingDispatcher) {\n      this.virtualScrollingDispatcher.dispose();\n      this.virtualScrollingDispatcher = null;\n    }\n\n    if (this.isVirtualScrolling()) {\n      this.virtualScrollingDispatcher = new _uiScheduler2.default(this);\n    }\n  };\n\n  _proto2._render = function () {\n    _WidgetObserver.prototype._render.call(this);\n\n    this._renderDateTimeIndication();\n\n    this._setIndicationUpdateInterval();\n  };\n\n  _proto2._toggleGroupedClass = function () {\n    this.$element().toggleClass(GROUPED_WORKSPACE_CLASS, this._getGroupCount() > 0);\n  };\n\n  _proto2._toggleFixedScrollableClass = function () {\n    return (0, _common.noop)();\n  };\n\n  _proto2._renderView = function () {\n    this._setFirstViewDate();\n\n    this._applyCellTemplates(this._renderGroupHeader());\n\n    this._renderDateHeader();\n\n    if (this.isRenovatedRender()) {\n      this.renderRWorkspace();\n    } else {\n      this._renderTimePanel();\n\n      this._renderGroupAllDayPanel();\n\n      this._renderDateTable();\n\n      this._renderAllDayPanel();\n    }\n\n    this._updateGroupTableHeight();\n\n    this._shader = new _uiSchedulerCurrent_time_shader.default(this);\n  };\n\n  _proto2.isGroupedAllDayPanel = function () {\n    return this._isShowAllDayPanel() && this._isVerticalGroupedWorkSpace();\n  };\n\n  _proto2.generateRenderOptions = function () {\n    var groupCount = this._getGroupCount();\n\n    var verticalGroupCount = !this._isVerticalGroupedWorkSpace() ? 1 : groupCount;\n    var horizontalGroupCount = this._isVerticalGroupedWorkSpace() ? 1 : groupCount;\n    var allDayElements = this._insertAllDayRowsIntoDateTable() ? this._allDayTitles : void 0;\n\n    var rowCountInGroup = this._getRowCount();\n\n    var cellCount = this._getTotalCellCount(groupCount);\n\n    var options = {\n      horizontalGroupCount: horizontalGroupCount,\n      verticalGroupCount: verticalGroupCount,\n      rowCountInGroup: rowCountInGroup,\n      cellCount: cellCount,\n      cellCountInGroupRow: this._getCellCount(),\n      cellDataGetters: [this._getCellData.bind(this)],\n      allDayElements: allDayElements,\n      startRowIndex: 0,\n      groupOrientation: this.option(\"groupOrientation\"),\n      nonVirtualRowCount: this._getRowCount(),\n      groupCount: groupCount\n    };\n\n    if (this.isVirtualScrolling()) {\n      (0, _extend.extend)(options, this.virtualScrollingDispatcher.renderState);\n    } else {\n      options.rowCount = this._getTotalRowCount(groupCount, this._isVerticalGroupedWorkSpace());\n    }\n\n    return options;\n  };\n\n  _proto2.renovatedRenderSupported = function () {\n    return false;\n  };\n\n  _proto2.renderRWorkspace = function () {\n    var _this$virtualScrollin2;\n\n    var isGenerateNewViewData = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : true;\n\n    this._cleanAllowedPositions();\n\n    this.viewDataProvider.update(isGenerateNewViewData);\n    this.renderRAllDayPanel();\n    this.renderRTimeTable();\n    this.renderRDateTable();\n    this.updateRSelection();\n    null === (_this$virtualScrollin2 = this.virtualScrollingDispatcher) || void 0 === _this$virtualScrollin2 ? void 0 : _this$virtualScrollin2.updateDimensions();\n  };\n\n  _proto2.renderRAllDayPanel = function () {\n    var visible = this._isShowAllDayPanel() && !this.isGroupedAllDayPanel();\n\n    if (visible) {\n      var options = {\n        viewData: this.viewDataProvider.viewData,\n        visible: visible,\n        dataCellTemplate: this.option(\"dataCellTemplate\")\n      };\n      this.renderRComponent(this._$allDayPanel, _layout.default, \"renovatedAllDayPanel\", options);\n      this.renderRComponent(this._$allDayTitle, _title.default, \"renovatedAllDayPanelTitle\", {\n        visible: visible\n      });\n      this._$allDayTable = this.renovatedAllDayPanel.$element().find(\".\".concat(ALL_DAY_TABLE_CLASS));\n    }\n\n    this._toggleAllDayVisibility();\n  };\n\n  _proto2.renderRTimeTable = function () {\n    this.renderRComponent(this._$timePanel, _layout2.default, \"renovatedTimePanel\", {\n      viewData: this.viewDataProvider.viewData,\n      timeCellTemplate: this.option(\"timeCellTemplate\")\n    });\n  };\n\n  _proto2.renderRDateTable = function () {};\n\n  _proto2.renderRComponent = function (parentElement, componentClass, componentName, viewModel) {\n    var component = this[componentName];\n\n    if (!component) {\n      var container = (0, _element.getPublicElement)(parentElement);\n      component = this._createComponent(container, componentClass, _objectSpread(_objectSpread({}, viewModel), {}, {\n        groupOrientation: this.option(\"groupOrientation\")\n      }));\n      this[componentName] = component;\n    } else {\n      Object.getOwnPropertyNames(viewModel).forEach(function (optionName) {\n        component.option(optionName, viewModel[optionName]);\n      });\n    }\n  };\n\n  _proto2.updateRSelection = function () {\n    var isVerticalGrouping = this._isVerticalGroupedWorkSpace();\n\n    var focusedCell = this.virtualSelectionState.getFocusedCell(isVerticalGrouping);\n    var selectedCells = this.virtualSelectionState.getSelectedCells();\n\n    if (focusedCell) {\n      var coordinates = focusedCell.coordinates,\n          cellData = focusedCell.cellData;\n      var $cell = !isVerticalGrouping && cellData.allDay ? this._dom_getAllDayPanelCell(coordinates.cellIndex) : this._dom_getDateCell(coordinates);\n      $cell && this._setFocusedCell($cell);\n    }\n\n    selectedCells && this._setSelectedCellsByCellData(selectedCells);\n  };\n\n  _proto2._updateGroupTableHeight = function () {\n    if (this._isVerticalGroupedWorkSpace() && (0, _window.hasWindow)()) {\n      this._setHorizontalGroupHeaderCellsHeight();\n    }\n  };\n\n  _proto2._renderDateTimeIndication = function () {\n    return (0, _common.noop)();\n  };\n\n  _proto2._setIndicationUpdateInterval = function () {\n    return (0, _common.noop)();\n  };\n\n  _proto2._refreshDateTimeIndication = function () {\n    return (0, _common.noop)();\n  };\n\n  _proto2._setFocusOnCellByOption = function (data) {\n    this._releaseSelectedAndFocusedCells();\n\n    this._setSelectedCellsByCellData(data);\n  };\n\n  _proto2._setSelectedCellsByCellData = function (data) {\n    var _data$,\n        _this4 = this;\n\n    var cells = [];\n\n    var $cells = this._getAllCells(null === data || void 0 === data ? void 0 : null === (_data$ = data[0]) || void 0 === _data$ ? void 0 : _data$.allDay);\n\n    var cellsInRow = this._getTotalCellCount(this._getGroupCount());\n\n    data.forEach(function (cellData) {\n      var groups = cellData.groups,\n          startDate = cellData.startDate,\n          allDay = cellData.allDay;\n      var groupIndex = cellData.groupIndex;\n\n      if (!groupIndex) {\n        groupIndex = _this4._isGroupsSpecified(groups) ? _this4._getGroupIndexByResourceId(groups) : 0;\n      }\n\n      var coordinates = _this4.isVirtualScrolling() ? _this4.viewDataProvider.findCellPositionInMap(groupIndex, startDate, allDay) : _this4.getCoordinatesByDate(startDate, groupIndex, allDay);\n\n      if (coordinates) {\n        var rowIndex = coordinates.rowIndex,\n            cellIndex = coordinates.cellIndex;\n        var index = rowIndex * cellsInRow + cellIndex;\n        var $cell = $cells[index];\n\n        if ((0, _type.isDefined)($cell)) {\n          _this4._toggleFocusClass(true, (0, _renderer.default)($cell));\n\n          cells.push($cell);\n        }\n      }\n    });\n    this._selectedCells = cells;\n  };\n\n  _proto2._isGroupsSpecified = function (resources) {\n    return this.option(\"groups\").length && resources;\n  };\n\n  _proto2._getGroupIndexByResourceId = function (id) {\n    var groups = this.option(\"groups\");\n    var resourceTree = this.invoke(\"createResourcesTree\", groups);\n\n    if (!resourceTree.length) {\n      return 0;\n    }\n\n    return this._getGroupIndexRecursively(resourceTree, id);\n  };\n\n  _proto2._getGroupIndexRecursively = function (resourceTree, id) {\n    var _this5 = this;\n\n    var currentKey = resourceTree[0].name;\n    var currentValue = id[currentKey];\n    return resourceTree.reduce(function (prevIndex, _ref2) {\n      var leafIndex = _ref2.leafIndex,\n          value = _ref2.value,\n          children = _ref2.children;\n      var areValuesEqual = currentValue === value;\n\n      if (areValuesEqual && void 0 !== leafIndex) {\n        return leafIndex;\n      }\n\n      if (areValuesEqual) {\n        return _this5._getGroupIndexRecursively(children, id);\n      }\n\n      return prevIndex;\n    }, 0);\n  };\n\n  _proto2._getCalculatedFirstDayOfWeek = function () {\n    var firstDayOfWeekOption = this._firstDayOfWeek();\n\n    var firstDayOfWeek = (0, _type.isDefined)(firstDayOfWeekOption) ? firstDayOfWeekOption : _date2.default.firstDayOfWeekIndex();\n    return firstDayOfWeek;\n  };\n\n  _proto2._setFirstViewDate = function () {\n    var firstDayOfWeek = this._getCalculatedFirstDayOfWeek();\n\n    this._firstViewDate = _date.default.getFirstWeekDate(this._getViewStartByOptions(), firstDayOfWeek);\n\n    this._setStartDayHour(this._firstViewDate);\n  };\n\n  _proto2._getViewStartByOptions = function () {\n    if (!this.option(\"startDate\")) {\n      return this.option(\"currentDate\");\n    } else {\n      var startDate = _date.default.trimTime(this._getStartViewDate());\n\n      var currentDate = this.option(\"currentDate\");\n      var diff = startDate.getTime() <= currentDate.getTime() ? 1 : -1;\n      var endDate = new Date(startDate.getTime() + this._getIntervalDuration() * diff);\n\n      while (!this._dateInRange(currentDate, startDate, endDate, diff)) {\n        startDate = endDate;\n        endDate = new Date(startDate.getTime() + this._getIntervalDuration() * diff);\n      }\n\n      return diff > 0 ? startDate : endDate;\n    }\n  };\n\n  _proto2._getHeaderDate = function () {\n    return this.getStartViewDate();\n  };\n\n  _proto2._getStartViewDate = function () {\n    return this.option(\"startDate\");\n  };\n\n  _proto2._dateInRange = function (date, startDate, endDate, diff) {\n    return diff > 0 ? _date.default.dateInRange(date, startDate, new Date(endDate.getTime() - 1)) : _date.default.dateInRange(date, endDate, startDate, \"date\");\n  };\n\n  _proto2._getIntervalDuration = function () {\n    return toMs(\"day\") * this.option(\"intervalCount\");\n  };\n\n  _proto2._setStartDayHour = function (date) {\n    var startDayHour = this.option(\"startDayHour\");\n\n    if ((0, _type.isDefined)(startDayHour)) {\n      date.setHours(startDayHour, startDayHour % 1 * 60, 0, 0);\n    }\n  };\n\n  _proto2._firstDayOfWeek = function () {\n    return this.option(\"firstDayOfWeek\");\n  };\n\n  _proto2._attachEvents = function () {\n    this._createSelectionChangedAction();\n\n    this._attachClickEvent();\n\n    this._attachContextMenuEvent();\n  };\n\n  _proto2._attachClickEvent = function () {\n    var that = this;\n\n    var pointerDownAction = this._createAction(function (e) {\n      that._pointerDownHandler(e.event);\n    });\n\n    this._createCellClickAction();\n\n    var cellSelector = \".\" + DATE_TABLE_CELL_CLASS + \",.\" + ALL_DAY_TABLE_CELL_CLASS;\n    var $element = this.$element();\n\n    _events_engine.default.off($element, SCHEDULER_WORKSPACE_DXPOINTERDOWN_EVENT_NAME);\n\n    _events_engine.default.off($element, SCHEDULER_CELL_DXCLICK_EVENT_NAME);\n\n    _events_engine.default.on($element, SCHEDULER_WORKSPACE_DXPOINTERDOWN_EVENT_NAME, function (e) {\n      if ((0, _index.isMouseEvent)(e) && e.which > 1) {\n        e.preventDefault();\n        return;\n      }\n\n      pointerDownAction({\n        event: e\n      });\n    });\n\n    _events_engine.default.on($element, SCHEDULER_CELL_DXCLICK_EVENT_NAME, cellSelector, function (e) {\n      var $cell = (0, _renderer.default)(e.target);\n\n      that._cellClickAction({\n        event: e,\n        cellElement: (0, _element.getPublicElement)($cell),\n        cellData: that.getCellData($cell)\n      });\n    });\n  };\n\n  _proto2._createCellClickAction = function () {\n    var _this6 = this;\n\n    this._cellClickAction = this._createActionByOption(\"onCellClick\", {\n      afterExecute: function afterExecute(e) {\n        return _this6._cellClickHandler(e.args[0].event);\n      }\n    });\n  };\n\n  _proto2._createSelectionChangedAction = function () {\n    this._selectionChangedAction = this._createActionByOption(\"onSelectionChanged\");\n  };\n\n  _proto2._cellClickHandler = function (e) {\n    var $target = (0, _renderer.default)(e.target);\n\n    if (this._showPopup && this._hasFocusClass($target)) {\n      delete this._showPopup;\n\n      this._showAddAppointmentPopup($target);\n    }\n  };\n\n  _proto2._pointerDownHandler = function (e) {\n    var $target = (0, _renderer.default)(e.target);\n\n    if (!$target.hasClass(DATE_TABLE_CELL_CLASS) && !$target.hasClass(ALL_DAY_TABLE_CELL_CLASS)) {\n      this._isCellClick = false;\n      return;\n    }\n\n    this._isCellClick = true;\n\n    if ($target.hasClass(DATE_TABLE_FOCUSED_CELL_CLASS)) {\n      this._showPopup = true;\n    } else {\n      this._setSelectedAndFocusedCells($target);\n    }\n  };\n\n  _proto2._showAddAppointmentPopup = function ($cell) {\n    var firstCellData = this.getCellData($cell.first());\n    var lastCellData = this.getCellData($cell.last());\n\n    if (this.isVirtualScrolling()) {\n      var selectedCells = this.virtualSelectionState.getSelectedCells();\n      firstCellData = selectedCells[0];\n      lastCellData = selectedCells[selectedCells.length - 1];\n    }\n\n    var result = {\n      startDate: firstCellData.startDate,\n      endDate: lastCellData.endDate\n    };\n\n    if (void 0 !== lastCellData.allDay) {\n      result.allDay = lastCellData.allDay;\n    }\n\n    this.invoke(\"showAddAppointmentPopup\", result, lastCellData.groups);\n  };\n\n  _proto2._attachContextMenuEvent = function () {\n    this._createContextMenuAction();\n\n    var cellSelector = \".\" + DATE_TABLE_CELL_CLASS + \",.\" + ALL_DAY_TABLE_CELL_CLASS;\n    var $element = this.$element();\n    var eventName = (0, _index.addNamespace)(_contextmenu.name, this.NAME);\n\n    _events_engine.default.off($element, eventName, cellSelector);\n\n    _events_engine.default.on($element, eventName, cellSelector, this._contextMenuHandler.bind(this));\n  };\n\n  _proto2._contextMenuHandler = function (e) {\n    var $cell = (0, _renderer.default)(e.target);\n\n    this._contextMenuAction({\n      event: e,\n      cellElement: (0, _element.getPublicElement)($cell),\n      cellData: this.getCellData($cell)\n    });\n\n    this._contextMenuHandled = true;\n  };\n\n  _proto2._createContextMenuAction = function () {\n    this._contextMenuAction = this._createActionByOption(\"onCellContextMenu\");\n  };\n\n  _proto2._getGroupHeaderContainer = function () {\n    if (this._isVerticalGroupedWorkSpace()) {\n      return this._$groupTable;\n    }\n\n    return this._$thead;\n  };\n\n  _proto2._getDateHeaderContainer = function () {\n    return this._$thead;\n  };\n\n  _proto2._renderGroupHeader = function () {\n    var $container = this._getGroupHeaderContainer();\n\n    var groupCount = this._getGroupCount();\n\n    var cellTemplates = [];\n\n    if (groupCount) {\n      var groupRows = this._makeGroupRows(this.option(\"groups\"), this.option(\"groupByDate\"));\n\n      this._attachGroupCountAttr(groupCount, groupRows);\n\n      $container.append(groupRows.elements);\n      cellTemplates = groupRows.cellTemplates;\n    } else {\n      this._detachGroupCountAttr();\n    }\n\n    return cellTemplates;\n  };\n\n  _proto2._applyCellTemplates = function (templates) {\n    templates.forEach(function (template) {\n      template();\n    });\n  };\n\n  _proto2._detachGroupCountAttr = function () {\n    var groupedAttr = this._groupedStrategy.getGroupCountAttr();\n\n    this.$element().removeAttr(groupedAttr.attr);\n  };\n\n  _proto2._attachGroupCountAttr = function (groupRowCount, groupRows) {\n    var groupedAttr = this._groupedStrategy.getGroupCountAttr(groupRowCount, groupRows);\n\n    this.$element().attr(groupedAttr.attr, groupedAttr.count);\n  };\n\n  _proto2.headerPanelOffsetRecalculate = function () {\n    if (!this.option(\"resourceCellTemplate\") && !this.option(\"dateCellTemplate\")) {\n      return;\n    }\n\n    var headerPanelHeight = this.getHeaderPanelHeight();\n    var headerHeight = this.invoke(\"getHeaderHeight\");\n    var allDayPanelHeight = this.supportAllDayRow() && this._isShowAllDayPanel() ? this._groupedStrategy.getAllDayTableHeight() : 0;\n    headerPanelHeight && this._headerScrollable && this._headerScrollable.$element().height(headerPanelHeight + allDayPanelHeight);\n    headerPanelHeight && this._dateTableScrollable.$element().css({\n      paddingBottom: allDayPanelHeight + headerPanelHeight + \"px\",\n      marginBottom: -1 * (parseInt(headerPanelHeight, 10) + allDayPanelHeight) + \"px\"\n    });\n    headerPanelHeight && this._sidebarScrollable && this._sidebarScrollable.$element().css({\n      paddingBottom: allDayPanelHeight + headerPanelHeight + \"px\",\n      marginBottom: -1 * (parseInt(headerPanelHeight, 10) + allDayPanelHeight) + \"px\"\n    });\n    this._$allDayTitle && this._$allDayTitle.css(\"top\", headerHeight + headerPanelHeight + \"px\");\n  };\n\n  _proto2._makeGroupRows = function (groups, groupByDate) {\n    var tableCreatorStrategy = this._isVerticalGroupedWorkSpace() ? tableCreator.VERTICAL : tableCreator.HORIZONTAL;\n    return tableCreator.makeGroupedTable(tableCreatorStrategy, groups, {\n      groupHeaderRowClass: this._getGroupRowClass(),\n      groupRowClass: this._getGroupRowClass(),\n      groupHeaderClass: this._getGroupHeaderClass.bind(this),\n      groupHeaderContentClass: this._getGroupHeaderContentClass()\n    }, this._getCellCount() || 1, this.option(\"resourceCellTemplate\"), this._getGroupCount(), groupByDate);\n  };\n\n  _proto2._getDateHeaderTemplate = function () {\n    return this.option(\"dateCellTemplate\");\n  };\n\n  _proto2._renderDateHeader = function () {\n    var container = this._getDateHeaderContainer();\n\n    var $headerRow = (0, _renderer.default)(\"<tr>\").addClass(HEADER_ROW_CLASS);\n\n    var count = this._getCellCount();\n\n    var cellTemplate = this._getDateHeaderTemplate();\n\n    var repeatCount = this._getCalculateHeaderCellRepeatCount();\n\n    var templateCallbacks = [];\n    var groupByDate = this.isGroupedByDate();\n\n    if (!groupByDate) {\n      for (var rowIndex = 0; rowIndex < repeatCount; rowIndex++) {\n        for (var cellIndex = 0; cellIndex < count; cellIndex++) {\n          var templateIndex = rowIndex * repeatCount + cellIndex;\n\n          this._renderDateHeaderTemplate($headerRow, cellIndex, templateIndex, cellTemplate, templateCallbacks);\n        }\n      }\n\n      container.append($headerRow);\n    } else {\n      var colSpan = groupByDate ? this._getGroupCount() : 1;\n\n      for (var _cellIndex = 0; _cellIndex < count; _cellIndex++) {\n        var _templateIndex = _cellIndex * repeatCount;\n\n        var cellElement = this._renderDateHeaderTemplate($headerRow, _cellIndex, _templateIndex, cellTemplate, templateCallbacks);\n\n        cellElement.attr(\"colSpan\", colSpan);\n      }\n\n      container.prepend($headerRow);\n    }\n\n    this._applyCellTemplates(templateCallbacks);\n\n    return $headerRow;\n  };\n\n  _proto2._renderDateHeaderTemplate = function (container, panelCellIndex, templateIndex, cellTemplate, templateCallbacks) {\n    var text = this._getHeaderText(panelCellIndex);\n\n    var $cell = (0, _renderer.default)(\"<th>\").addClass(this._getHeaderPanelCellClass(panelCellIndex)).attr(\"title\", text);\n\n    if (null !== cellTemplate && void 0 !== cellTemplate && cellTemplate.render) {\n      templateCallbacks.push(cellTemplate.render.bind(cellTemplate, {\n        model: {\n          text: text,\n          date: this._getDateByIndex(panelCellIndex)\n        },\n        index: templateIndex,\n        container: (0, _element.getPublicElement)($cell)\n      }));\n    } else {\n      $cell.text(text);\n    }\n\n    container.append($cell);\n    return $cell;\n  };\n\n  _proto2._getHeaderPanelCellClass = function (i) {\n    var cellClass = HEADER_PANEL_CELL_CLASS + \" \" + HORIZONTAL_SIZES_CLASS;\n    return this._groupedStrategy.addAdditionalGroupCellClasses(cellClass, i + 1, void 0, void 0, this.isGroupedByDate());\n  };\n\n  _proto2._getCalculateHeaderCellRepeatCount = function () {\n    return this._groupedStrategy.calculateHeaderCellRepeatCount();\n  };\n\n  _proto2._renderAllDayPanel = function (index) {\n    var cellCount = this._getCellCount();\n\n    if (!this._isVerticalGroupedWorkSpace()) {\n      cellCount *= this._getGroupCount() || 1;\n    }\n\n    var cellTemplates = this._renderTableBody({\n      container: this._allDayPanels.length ? (0, _element.getPublicElement)(this._allDayTables[index]) : (0, _element.getPublicElement)(this._$allDayTable),\n      rowCount: 1,\n      cellCount: cellCount,\n      cellClass: this._getAllDayPanelCellClass.bind(this),\n      rowClass: ALL_DAY_TABLE_ROW_CLASS,\n      cellTemplate: this.option(\"dataCellTemplate\"),\n      getCellData: this._getAllDayCellData.bind(this),\n      groupIndex: index\n    }, true);\n\n    this._toggleAllDayVisibility();\n\n    this._applyCellTemplates(cellTemplates);\n  };\n\n  _proto2._renderGroupAllDayPanel = function () {\n    if (this._isVerticalGroupedWorkSpace()) {\n      var groupCount = this._getGroupCount();\n\n      for (var i = 0; i < groupCount; i++) {\n        this._renderAllDayPanel(i);\n      }\n    }\n  };\n\n  _proto2._getAllDayPanelCellClass = function (i, j) {\n    var cellClass = ALL_DAY_TABLE_CELL_CLASS + \" \" + HORIZONTAL_SIZES_CLASS;\n    return this._groupedStrategy.addAdditionalGroupCellClasses(cellClass, j + 1);\n  };\n\n  _proto2._getAllDayCellData = function (cell, rowIndex, cellIndex, groupIndex) {\n    var startDate = this._getDateByCellIndexes(rowIndex, cellIndex);\n\n    var cellGroupIndex = groupIndex || this._getGroupIndex(rowIndex, cellIndex);\n\n    startDate = _date.default.trimTime(startDate);\n    var data = {\n      startDate: startDate,\n      endDate: startDate,\n      allDay: true,\n      groupIndex: cellGroupIndex\n    };\n\n    var groups = this._getCellGroups(cellGroupIndex);\n\n    if (groups.length) {\n      data.groups = {};\n    }\n\n    for (var i = 0; i < groups.length; i++) {\n      data.groups[groups[i].name] = groups[i].id;\n    }\n\n    return {\n      key: CELL_DATA,\n      value: data\n    };\n  };\n\n  _proto2._toggleAllDayVisibility = function () {\n    var showAllDayPanel = this._isShowAllDayPanel();\n\n    this._$allDayPanel.toggle(showAllDayPanel);\n\n    this._$allDayTitle && this._$allDayTitle.toggleClass(ALL_DAY_TITLE_HIDDEN_CLASS, !showAllDayPanel);\n    this.$element().toggleClass(WORKSPACE_WITH_ALL_DAY_CLASS, showAllDayPanel);\n\n    this._changeAllDayVisibility();\n\n    this._updateScrollable();\n  };\n\n  _proto2._changeAllDayVisibility = function () {\n    this.$element().toggleClass(WORKSPACE_WITH_COLLAPSED_ALL_DAY_CLASS, !this.option(\"allDayExpanded\") && this._isShowAllDayPanel());\n  };\n\n  _proto2._updateScrollable = function () {\n    this._dateTableScrollable.update();\n\n    this._headerScrollable && this._headerScrollable.update();\n    this._sidebarScrollable && this._sidebarScrollable.update();\n  };\n\n  _proto2._renderTimePanel = function () {\n    var _this7 = this;\n\n    var repeatCount = this._groupedStrategy.calculateTimeCellRepeatCount();\n\n    var startViewDate = _utils.default.getDateWithoutTimezoneChange(this.getStartViewDate());\n\n    var _getTimeText = function _getTimeText(i) {\n      var index = i % _this7._getRowCount();\n\n      if (index % 2 === 0) {\n        return _date2.default.format(_this7._getTimeCellDateCore(startViewDate, i), \"shorttime\");\n      }\n\n      return \"\";\n    };\n\n    this._renderTableBody({\n      container: (0, _element.getPublicElement)(this._$timePanel),\n      rowCount: this._getTimePanelRowCount() * repeatCount,\n      cellCount: 1,\n      cellClass: this._getTimeCellClass.bind(this),\n      rowClass: TIME_PANEL_ROW_CLASS,\n      cellTemplate: this.option(\"timeCellTemplate\"),\n      getCellText: _getTimeText.bind(this),\n      getCellDate: this._getTimeCellDate.bind(this),\n      groupCount: this._getGroupCount(),\n      allDayElements: this._insertAllDayRowsIntoDateTable() ? this._allDayTitles : void 0\n    });\n  };\n\n  _proto2._getTimePanelRowCount = function () {\n    return this._getCellCountInDay();\n  };\n\n  _proto2._getCellCountInDay = function (skipRound) {\n    var result = this._calculateDayDuration() / this.option(\"hoursInterval\");\n    return skipRound ? result : Math.ceil(result);\n  };\n\n  _proto2._calculateDayDuration = function () {\n    return this.option(\"endDayHour\") - this.option(\"startDayHour\");\n  };\n\n  _proto2._getTimeCellClass = function (i) {\n    var cellClass = TIME_PANEL_CELL_CLASS + \" \" + VERTICAL_SIZES_CLASS;\n    return this._isVerticalGroupedWorkSpace() ? this._groupedStrategy.addAdditionalGroupCellClasses(cellClass, i, i) : cellClass;\n  };\n\n  _proto2._getTimeCellDate = function (i) {\n    return this._getTimeCellDateCore(this.getStartViewDate(), i);\n  };\n\n  _proto2._getTimeCellDateCore = function (startViewDate, i) {\n    var result = new Date(startViewDate);\n    var timeCellDuration = Math.round(this.getCellDuration());\n\n    var cellCountInDay = this._getCellCountInDay(true);\n\n    result.setMilliseconds(result.getMilliseconds() + timeCellDuration * (i % cellCountInDay));\n    return result;\n  };\n\n  _proto2._renderDateTable = function () {\n    var groupCount = this._getGroupCount();\n\n    this._renderTableBody({\n      container: (0, _element.getPublicElement)(this._$dateTable),\n      rowCount: this._getTotalRowCount(groupCount),\n      cellCount: this._getTotalCellCount(groupCount),\n      cellClass: this._getDateTableCellClass.bind(this),\n      rowClass: this._getDateTableRowClass(),\n      cellTemplate: this.option(\"dataCellTemplate\"),\n      getCellData: this._getCellData.bind(this),\n      allDayElements: this._insertAllDayRowsIntoDateTable() ? this._allDayPanels : void 0,\n      groupCount: groupCount,\n      groupByDate: this.option(\"groupByDate\")\n    });\n  };\n\n  _proto2._insertAllDayRowsIntoDateTable = function () {\n    return this._groupedStrategy.insertAllDayRowsIntoDateTable();\n  };\n\n  _proto2._getTotalCellCount = function (groupCount) {\n    return this._groupedStrategy.getTotalCellCount(groupCount);\n  };\n\n  _proto2._getTotalRowCount = function (groupCount, includeAllDayPanelRows) {\n    var result = this._groupedStrategy.getTotalRowCount(groupCount);\n\n    if (includeAllDayPanelRows && groupCount > 1 && this._isShowAllDayPanel()) {\n      result += groupCount;\n    }\n\n    return result;\n  };\n\n  _proto2._getCellData = function (cell, rowIndex, cellIndex) {\n    var data = this._prepareCellData(rowIndex, cellIndex, cell);\n\n    return {\n      key: CELL_DATA,\n      value: data\n    };\n  };\n\n  _proto2._prepareCellData = function (rowIndex, cellIndex) {\n    var startDate = this._getDateByCellIndexes(rowIndex, cellIndex);\n\n    var endDate = this.calculateEndDate(startDate);\n\n    var groupIndex = this._getGroupIndex(rowIndex, cellIndex);\n\n    var data = {\n      startDate: startDate,\n      endDate: endDate,\n      allDay: this._getTableAllDay(),\n      groupIndex: groupIndex\n    };\n\n    var groups = this._getCellGroups(groupIndex);\n\n    if (groups.length) {\n      data.groups = {};\n    }\n\n    for (var i = 0; i < groups.length; i++) {\n      data.groups[groups[i].name] = groups[i].id;\n    }\n\n    return data;\n  };\n\n  _proto2._getGroupIndex = function (rowIndex, cellIndex) {\n    return this._groupedStrategy.getGroupIndex(rowIndex, cellIndex);\n  };\n\n  _proto2._getTableAllDay = function () {\n    return false;\n  };\n\n  _proto2.calculateEndDate = function (startDate) {\n    var result = new Date(startDate);\n    result.setMilliseconds(result.getMilliseconds() + Math.round(this._getInterval()));\n    return result;\n  };\n\n  _proto2._getGroupCount = function () {\n    var groups = this.option(\"groups\");\n    var result = 0;\n\n    for (var i = 0, len = groups.length; i < len; i++) {\n      if (!i) {\n        result = groups[i].items.length;\n      } else {\n        result *= groups[i].items.length;\n      }\n    }\n\n    return result;\n  };\n\n  _proto2._getPathToLeaf = function (leafIndex) {\n    var tree = this.invoke(\"createResourcesTree\", this.option(\"groups\"));\n\n    function findLeafByIndex(data, index) {\n      for (var i = 0; i < data.length; i++) {\n        if (data[i].leafIndex === index) {\n          return data[i];\n        } else {\n          var _leaf = findLeafByIndex(data[i].children, index);\n\n          if (_leaf) {\n            return _leaf;\n          }\n        }\n      }\n    }\n\n    function makeBranch(leaf, result) {\n      result = result || [];\n      result.push(leaf.value);\n\n      if (leaf.parent) {\n        makeBranch(leaf.parent, result);\n      }\n\n      return result;\n    }\n\n    var leaf = findLeafByIndex(tree, leafIndex);\n    return makeBranch(leaf).reverse();\n  };\n\n  _proto2._getCellGroups = function (groupIndex) {\n    var result = [];\n\n    if (this._getGroupCount()) {\n      var groups = this.option(\"groups\");\n\n      if (groupIndex < 0) {\n        return;\n      }\n\n      var path = this._getPathToLeaf(groupIndex);\n\n      for (var i = 0; i < groups.length; i++) {\n        result.push({\n          name: groups[i].name,\n          id: path[i]\n        });\n      }\n    }\n\n    return result;\n  };\n\n  _proto2._attachTablesEvents = function () {\n    var _this8 = this;\n\n    var that = this;\n    var isPointerDown = false;\n    var cellHeight;\n    var cellWidth;\n    var $element = this.$element();\n\n    _events_engine.default.off($element, SCHEDULER_CELL_DXDRAGENTER_EVENT_NAME);\n\n    _events_engine.default.off($element, SCHEDULER_CELL_DXDRAGLEAVE_EVENT_NAME);\n\n    _events_engine.default.off($element, SCHEDULER_CELL_DXDROP_EVENT_NAME);\n\n    _events_engine.default.off($element, SCHEDULER_CELL_DXPOINTERMOVE_EVENT_NAME);\n\n    _events_engine.default.off($element, SCHEDULER_CELL_DXPOINTERDOWN_EVENT_NAME);\n\n    _events_engine.default.on($element, SCHEDULER_CELL_DXDRAGENTER_EVENT_NAME, SCHEDULER_DRAG_AND_DROP_SELECTOR, {\n      itemSizeFunc: function itemSizeFunc($element) {\n        if (!cellHeight) {\n          cellHeight = (0, _position.getBoundingRect)($element.get(0)).height;\n        }\n\n        if (!cellWidth) {\n          cellWidth = (0, _position.getBoundingRect)($element.get(0)).width;\n        }\n\n        return {\n          width: cellWidth,\n          height: cellHeight\n        };\n      },\n      checkDropTarget: function checkDropTarget(target, event) {\n        return !_this8._isOutsideScrollable(target, event);\n      }\n    }, function (e) {\n      if (that._$currentTableTarget) {\n        that.removeDroppableCellClass(that._$currentTableTarget);\n      }\n\n      that._$currentTableTarget = (0, _renderer.default)(e.target);\n\n      that._$currentTableTarget.addClass(DATE_TABLE_DROPPABLE_CELL_CLASS);\n    });\n\n    _events_engine.default.on($element, SCHEDULER_CELL_DXDRAGLEAVE_EVENT_NAME, function (e) {\n      if (!$element.find((0, _renderer.default)(e.draggingElement)).length) {\n        that.removeDroppableCellClass();\n      }\n    });\n\n    _events_engine.default.on($element, SCHEDULER_CELL_DXDROP_EVENT_NAME, SCHEDULER_DRAG_AND_DROP_SELECTOR, function (e) {\n      that.removeDroppableCellClass((0, _renderer.default)(e.target));\n      cellHeight = 0;\n      cellWidth = 0;\n    });\n\n    _events_engine.default.on($element, SCHEDULER_CELL_DXPOINTERDOWN_EVENT_NAME, SCHEDULER_DRAG_AND_DROP_SELECTOR, function (e) {\n      if ((0, _index.isMouseEvent)(e) && 1 === e.which) {\n        isPointerDown = true;\n        that.$element().addClass(WORKSPACE_WITH_MOUSE_SELECTION_CLASS);\n\n        _events_engine.default.off(_dom_adapter.default.getDocument(), SCHEDULER_CELL_DXPOINTERUP_EVENT_NAME);\n\n        _events_engine.default.on(_dom_adapter.default.getDocument(), SCHEDULER_CELL_DXPOINTERUP_EVENT_NAME, function () {\n          isPointerDown = false;\n          that.$element().removeClass(WORKSPACE_WITH_MOUSE_SELECTION_CLASS);\n        });\n      }\n    });\n\n    _events_engine.default.on($element, SCHEDULER_CELL_DXPOINTERMOVE_EVENT_NAME, SCHEDULER_DRAG_AND_DROP_SELECTOR, function (e) {\n      if (isPointerDown && that._dateTableScrollable && !that._dateTableScrollable.option(\"scrollByContent\")) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        that._moveToCell((0, _renderer.default)(e.target), true);\n      }\n    });\n  };\n\n  _proto2._getDateTables = function () {\n    return this._$dateTable.add(this._$allDayTable);\n  };\n\n  _proto2._getDateTable = function () {\n    return this._$dateTable;\n  };\n\n  _proto2._getAllDayTable = function () {\n    return this._$allDayTable;\n  };\n\n  _proto2._getInterval = function () {\n    if (void 0 === this._interval) {\n      this._interval = this.option(\"hoursInterval\") * HOUR_MS;\n    }\n\n    return this._interval;\n  };\n\n  _proto2._getHeaderText = function (headerIndex) {\n    return _date2.default.format(this._getDateForHeaderText(headerIndex), this._getFormat());\n  };\n\n  _proto2._getDateForHeaderText = function (index) {\n    return this._getDateByIndex(index);\n  };\n\n  _proto2._getDateByIndex = function () {\n    return abstract();\n  };\n\n  _proto2._getFormat = function () {\n    return abstract();\n  };\n\n  _proto2._calculateCellIndex = function (rowIndex, cellIndex) {\n    return this._groupedStrategy.calculateCellIndex(rowIndex, cellIndex);\n  };\n\n  _proto2._renderTableBody = function (options, delayCellTemplateRendering) {\n    var result = [];\n\n    if (!delayCellTemplateRendering) {\n      this._applyCellTemplates(tableCreator.makeTable(options));\n    } else {\n      result = tableCreator.makeTable(options);\n    }\n\n    return result;\n  };\n\n  _proto2._removeAllDayElements = function () {\n    this._$allDayTable && this._$allDayTable.remove();\n    this._$allDayTitle && this._$allDayTitle.remove();\n  };\n\n  _proto2._cleanView = function () {\n    var _this$virtualSelectio2;\n\n    this.cache.clear();\n\n    this._cleanAllowedPositions();\n\n    null === (_this$virtualSelectio2 = this.virtualSelectionState) || void 0 === _this$virtualSelectio2 ? void 0 : _this$virtualSelectio2.releaseSelectedAndFocusedCells();\n\n    this._$thead.empty();\n\n    this._$dateTable.empty();\n\n    this._shader && this._shader.clean();\n\n    this._$timePanel.empty();\n\n    this._$allDayTable && this._$allDayTable.empty();\n\n    this._$groupTable.empty();\n\n    delete this._hiddenInterval;\n    delete this._interval;\n  };\n\n  _proto2._clean = function () {\n    _events_engine.default.off(_dom_adapter.default.getDocument(), SCHEDULER_CELL_DXPOINTERUP_EVENT_NAME);\n\n    _WidgetObserver.prototype._clean.call(this);\n  };\n\n  _proto2._disposeRenovatedComponents = function () {\n    var _this$renovatedAllDay, _this$renovatedDateTa, _this$renovatedTimePa;\n\n    null === (_this$renovatedAllDay = this.renovatedAllDayPanel) || void 0 === _this$renovatedAllDay ? void 0 : _this$renovatedAllDay.dispose();\n    this.renovatedAllDayPanel = void 0;\n    null === (_this$renovatedDateTa = this.renovatedDateTable) || void 0 === _this$renovatedDateTa ? void 0 : _this$renovatedDateTa.dispose();\n    this.renovatedDateTable = void 0;\n    null === (_this$renovatedTimePa = this.renovatedTimePanel) || void 0 === _this$renovatedTimePa ? void 0 : _this$renovatedTimePa.dispose();\n    this.renovatedTimePanel = void 0;\n  };\n\n  _proto2.getWorkArea = function () {\n    return this._dateTableScrollable.$content();\n  };\n\n  _proto2.getScrollable = function () {\n    return this._dateTableScrollable;\n  };\n\n  _proto2.getScrollableScrollTop = function () {\n    return this._dateTableScrollable.scrollTop();\n  };\n\n  _proto2.getGroupedScrollableScrollTop = function (allDay) {\n    return this._groupedStrategy.getScrollableScrollTop(allDay);\n  };\n\n  _proto2.getScrollableScrollLeft = function () {\n    return this._dateTableScrollable.scrollLeft();\n  };\n\n  _proto2.getScrollableOuterWidth = function () {\n    return this._dateTableScrollable.scrollWidth();\n  };\n\n  _proto2.getScrollableContainer = function () {\n    return this._dateTableScrollable._container();\n  };\n\n  _proto2.getHeaderPanelHeight = function () {\n    return this._$headerPanel && this._$headerPanel.outerHeight(true);\n  };\n\n  _proto2.getTimePanelWidth = function () {\n    return this._$timePanel && (0, _position.getBoundingRect)(this._$timePanel.get(0)).width;\n  };\n\n  _proto2.getGroupTableWidth = function () {\n    return this._$groupTable ? this._$groupTable.outerWidth() : 0;\n  };\n\n  _proto2.getWorkSpaceLeftOffset = function () {\n    return this._groupedStrategy.getLeftOffset();\n  };\n\n  _proto2.getGroupedStrategy = function () {\n    return this._groupedStrategy;\n  };\n\n  _proto2._getCellCoordinatesByIndex = function (index) {\n    var cellIndex = Math.floor(index / this._getRowCount());\n    var rowIndex = index - this._getRowCount() * cellIndex;\n    return {\n      cellIndex: cellIndex,\n      rowIndex: rowIndex\n    };\n  };\n\n  _proto2._getDateByCellIndexes = function (rowIndex, cellIndex, patchedIndexes) {\n    cellIndex = !patchedIndexes ? this._patchCellIndex(cellIndex) : cellIndex;\n    var firstViewDate = this.getStartViewDate();\n    var currentDate = new Date(firstViewDate.getTime() + this._getMillisecondsOffset(rowIndex, cellIndex) + this._getOffsetByCount(cellIndex));\n    currentDate.setTime(currentDate.getTime() + _date.default.getTimezonesDifference(firstViewDate, currentDate));\n    return currentDate;\n  };\n\n  _proto2._patchCellIndex = function (cellIndex) {\n    if (this.isGroupedByDate()) {\n      cellIndex = Math.floor(cellIndex / this._getGroupCount());\n    }\n\n    return cellIndex;\n  };\n\n  _proto2._getOffsetByCount = function () {\n    return 0;\n  };\n\n  _proto2._getMillisecondsOffset = function (rowIndex, cellIndex) {\n    return this._getInterval() * this._calculateCellIndex(rowIndex, cellIndex) + this._calculateHiddenInterval(rowIndex, cellIndex);\n  };\n\n  _proto2._calculateHiddenInterval = function (rowIndex, cellIndex) {\n    var dayCount = cellIndex % this._getCellCount();\n\n    return dayCount * this._getHiddenInterval();\n  };\n\n  _proto2._getHiddenInterval = function () {\n    if (void 0 === this._hiddenInterval) {\n      this._hiddenInterval = DAY_MS - this.getVisibleDayDuration();\n    }\n\n    return this._hiddenInterval;\n  };\n\n  _proto2._getIntervalBetween = function (currentDate, allDay) {\n    var firstViewDate = this.getStartViewDate();\n    var startDayTime = this.option(\"startDayHour\") * HOUR_MS;\n\n    var timeZoneOffset = _date.default.getTimezonesDifference(firstViewDate, currentDate);\n\n    var fullInterval = currentDate.getTime() - firstViewDate.getTime() - timeZoneOffset;\n\n    var days = this._getDaysOfInterval(fullInterval, startDayTime);\n\n    var weekendsCount = this._getWeekendsCount(days);\n\n    var result = (days - weekendsCount) * DAY_MS;\n\n    if (!allDay) {\n      result = fullInterval - days * this._getHiddenInterval() - weekendsCount * this.getVisibleDayDuration();\n    }\n\n    return result;\n  };\n\n  _proto2._getWeekendsCount = function () {\n    return 0;\n  };\n\n  _proto2._getDaysOfInterval = function (fullInterval, startDayTime) {\n    return Math.floor((fullInterval + startDayTime) / DAY_MS);\n  };\n\n  _proto2._getGroupIndexes = function (appointmentResources) {\n    var result = [];\n\n    if (this._isGroupsSpecified(appointmentResources)) {\n      var tree = this.invoke(\"createResourcesTree\", this.option(\"groups\"));\n      result = this.invoke(\"getResourceTreeLeaves\", tree, appointmentResources);\n    }\n\n    return result;\n  };\n\n  _proto2._updateIndex = function (index) {\n    return index * this._getRowCount();\n  };\n\n  _proto2._getDroppableCell = function () {\n    return this._getDateTables().find(\".\" + DATE_TABLE_DROPPABLE_CELL_CLASS);\n  };\n\n  _proto2._getWorkSpaceWidth = function () {\n    var _this9 = this;\n\n    return this.cache.get(\"workspaceWidth\", function () {\n      if (_this9._needCreateCrossScrolling()) {\n        return (0, _position.getBoundingRect)(_this9._$dateTable.get(0)).width;\n      }\n\n      return (0, _position.getBoundingRect)(_this9.$element().get(0)).width - _this9.getTimePanelWidth();\n    });\n  };\n\n  _proto2._getCellPositionByIndex = function (index, groupIndex, inAllDayRow) {\n    var cellCoordinates = this._getCellCoordinatesByIndex(index);\n\n    var $cell = this._getCellByCoordinates(cellCoordinates, groupIndex, inAllDayRow);\n\n    return this._getCellPositionWithCache($cell, cellCoordinates, groupIndex);\n  };\n\n  _proto2._getCellPositionWithCache = function ($cell, cellCoordinates, groupIndex) {\n    var result = this._getCellPosition($cell);\n\n    this.setCellDataCache(cellCoordinates, groupIndex, $cell);\n\n    if (result) {\n      result.rowIndex = cellCoordinates.rowIndex;\n      result.cellIndex = cellCoordinates.cellIndex;\n    }\n\n    return result;\n  };\n\n  _proto2._getCellPosition = function ($cell) {\n    var position = $cell.position();\n\n    if (this.option(\"rtlEnabled\")) {\n      position.left += (0, _position.getBoundingRect)($cell.get(0)).width;\n    }\n\n    return position;\n  };\n\n  _proto2._getCellByCoordinates = function (cellCoordinates, groupIndex, inAllDayRow) {\n    var indexes = this._groupedStrategy.prepareCellIndexes(cellCoordinates, groupIndex, inAllDayRow);\n\n    return this._dom_getDateCell(indexes);\n  };\n\n  _proto2._dom_getDateCell = function (position) {\n    return this._$dateTable.find(\"tr:not(.\".concat(VIRTUAL_ROW_CLASS, \")\")).eq(position.rowIndex).find(\"td\").eq(position.cellIndex);\n  };\n\n  _proto2._dom_getAllDayPanelCell = function (cellIndex) {\n    return this._$allDayPanel.find(\"tr\").eq(0).find(\"td\").eq(cellIndex);\n  };\n\n  _proto2._getCells = function (allDay, direction) {\n    var cellClass = allDay ? ALL_DAY_TABLE_CELL_CLASS : DATE_TABLE_CELL_CLASS;\n\n    if (\"vertical\" === direction) {\n      var result = [];\n\n      for (var i = 1;; i++) {\n        var cells = this.$element().find(\"tr .\".concat(cellClass, \":nth-child(\").concat(i, \")\"));\n\n        if (!cells.length) {\n          break;\n        }\n\n        result = result.concat(cells.toArray());\n      }\n\n      return (0, _renderer.default)(result);\n    } else {\n      return this.$element().find(\".\" + cellClass);\n    }\n  };\n\n  _proto2._getAllCells = function (allDay) {\n    if (this._isVerticalGroupedWorkSpace()) {\n      return this._$dateTable.find(\"td:not(.\".concat(VIRTUAL_CELL_CLASS, \")\"));\n    }\n\n    var cellClass = allDay && this.supportAllDayRow() ? ALL_DAY_TABLE_CELL_CLASS : DATE_TABLE_CELL_CLASS;\n    return this.$element().find(\".\" + cellClass);\n  };\n\n  _proto2._setHorizontalGroupHeaderCellsHeight = function () {\n    var height = (0, _position.getBoundingRect)(this._$dateTable.get(0)).height;\n\n    this._$groupTable.outerHeight(height);\n  };\n\n  _proto2._getDateTableBorder = function () {\n    return DATE_TABLE_CELL_BORDER;\n  };\n\n  _proto2._getDateTableBorderOffset = function () {\n    return 2 * this._getDateTableBorder();\n  };\n\n  _proto2._getGroupHeaderCellsContent = function () {\n    return this.$element().find(\".\" + GROUP_HEADER_CONTENT_CLASS);\n  };\n\n  _proto2._getGroupHeaderCells = function () {\n    return this.$element().find(\".\" + GROUP_HEADER_CLASS);\n  };\n\n  _proto2._getScrollCoordinates = function (hours, minutes, date, groupIndex, allDay) {\n    var currentDate = date || new Date(this.option(\"currentDate\"));\n    var startDayHour = this.option(\"startDayHour\");\n    var endDayHour = this.option(\"endDayHour\");\n\n    if (hours < startDayHour) {\n      hours = startDayHour;\n    }\n\n    if (hours >= endDayHour) {\n      hours = endDayHour - 1;\n    }\n\n    currentDate.setHours(hours, minutes, 0, 0);\n\n    if (!this.isVirtualScrolling()) {\n      return this.getCoordinatesByDate(currentDate, groupIndex, allDay);\n    }\n\n    var cell = this.viewDataProvider.findGlobalCellPosition(currentDate, groupIndex, allDay);\n    var position = cell.position,\n        cellData = cell.cellData;\n    return this.virtualScrollingDispatcher.calculateCoordinatesByDataAndPosition(cellData, position, currentDate);\n  };\n\n  _proto2._isOutsideScrollable = function (target, event) {\n    var $dateTableScrollableElement = this._dateTableScrollable.$element();\n\n    var scrollableSize = (0, _position.getBoundingRect)($dateTableScrollableElement.get(0));\n    var window = (0, _window.getWindow)();\n    var isTargetInAllDayPanel = !(0, _renderer.default)(target).closest($dateTableScrollableElement).length;\n    var isOutsideHorizontalScrollable = event.pageX < scrollableSize.left || event.pageX > scrollableSize.left + scrollableSize.width + (window.scrollX || 0);\n    var isOutsideVerticalScrollable = event.pageY < scrollableSize.top || event.pageY > scrollableSize.top + scrollableSize.height + (window.scrollY || 0);\n\n    if (isTargetInAllDayPanel && !isOutsideHorizontalScrollable) {\n      return false;\n    }\n\n    return isOutsideVerticalScrollable || isOutsideHorizontalScrollable;\n  };\n\n  _proto2.setCellDataCache = function (cellCoordinates, groupIndex, $cell) {\n    var key = JSON.stringify({\n      rowIndex: cellCoordinates.rowIndex,\n      cellIndex: cellCoordinates.cellIndex,\n      groupIndex: groupIndex\n    });\n    this.cache.set(key, this.getCellData($cell));\n  };\n\n  _proto2.setCellDataCacheAlias = function (appointment, geometry) {\n    var key = JSON.stringify({\n      rowIndex: appointment.rowIndex,\n      cellIndex: appointment.cellIndex,\n      groupIndex: appointment.groupIndex\n    });\n    var aliasKey = JSON.stringify({\n      top: geometry.top,\n      left: geometry.left\n    });\n    this.cache.set(aliasKey, this.cache.get(key));\n  };\n\n  _proto2._cleanAllowedPositions = function () {\n    this._maxAllowedVerticalPosition = [];\n    this._maxAllowedPosition = [];\n  };\n\n  _proto2.supportAllDayRow = function () {\n    return true;\n  };\n\n  _proto2.keepOriginalHours = function () {\n    return false;\n  };\n\n  _proto2.getSelectedCellData = function () {\n    if (this.isVirtualScrolling()) {\n      return this.virtualSelectionState.getSelectedCells();\n    }\n\n    var $focusedCells = this._getAllFocusedCells();\n\n    var result = [];\n\n    if ($focusedCells.length > 1) {\n      result = this._getMultipleCellsData($focusedCells);\n    } else {\n      var data = this.getCellData((0, _renderer.default)($focusedCells[0]));\n      data && result.push(data);\n    }\n\n    return result;\n  };\n\n  _proto2._getMultipleCellsData = function ($cells) {\n    var data = [];\n\n    for (var i = 0; i < $cells.length; i++) {\n      data.push(this.getCellData((0, _renderer.default)($cells[i])));\n    }\n\n    return data;\n  };\n\n  _proto2.getCellData = function ($cell) {\n    var data;\n    var currentCell = $cell[0];\n\n    if (currentCell) {\n      if (this.isRenovatedRender()) {\n        data = this._getCellDataInRenovatedView($cell);\n      } else {\n        data = (0, _element_data.data)(currentCell, CELL_DATA);\n      }\n    }\n\n    return (0, _extend.extend)(true, {}, data);\n  };\n\n  _proto2._getVirtualRowOffset = function () {\n    return this.isVirtualScrolling() ? this.virtualScrollingDispatcher.verticalScrollingState.virtualItemSizeBefore : 0;\n  };\n\n  _proto2._getCellDataInRenovatedView = function ($cell) {\n    var rowIndex = $cell.parent().index();\n\n    if (this.isVirtualScrolling()) {\n      rowIndex -= this.virtualScrollingDispatcher.topVirtualRowsCount;\n    }\n\n    var columnIndex = $cell.index();\n    var viewDataProvider = this.viewDataProvider;\n\n    var isAllDayCell = this._hasAllDayClass($cell);\n\n    var cellData = viewDataProvider.getCellData(rowIndex, columnIndex, isAllDayCell);\n    return cellData ? {\n      startDate: cellData.startDate,\n      endDate: cellData.endDate,\n      groups: cellData.groups,\n      groupIndex: cellData.groupIndex,\n      allDay: cellData.allDay,\n      text: cellData.text\n    } : void 0;\n  };\n\n  _proto2._getHorizontalMax = function (groupIndex) {\n    groupIndex = this.isGroupedByDate() ? this._getGroupCount() - 1 : groupIndex;\n    return this._groupedStrategy.getHorizontalMax(groupIndex);\n  };\n\n  _proto2.getCoordinatesByDate = function (date, groupIndex, inAllDayRow) {\n    groupIndex = groupIndex || 0;\n    var position;\n\n    var shouldFindPositionByViewData = this.isVirtualScrolling() && (!inAllDayRow || this._isVerticalGroupedWorkSpace());\n\n    if (shouldFindPositionByViewData) {\n      var positionByMap = this.viewDataProvider.findCellPositionInMap(groupIndex, date, inAllDayRow);\n\n      if (!positionByMap) {\n        return;\n      }\n\n      var $cell = this._dom_getDateCell(positionByMap);\n\n      position = this._getCellPositionWithCache($cell, positionByMap, groupIndex);\n    } else {\n      position = this.calculateCellPositionByView(date, groupIndex, inAllDayRow);\n    }\n\n    var shift = this.getPositionShift(inAllDayRow ? 0 : this.getTimeShift(date), inAllDayRow);\n\n    var horizontalHMax = this._getHorizontalMax(groupIndex, date);\n\n    if (!position) {\n      throw _ui.default.Error(\"E1039\");\n    }\n\n    return {\n      cellPosition: position.left + shift.cellPosition,\n      top: position.top + shift.top,\n      left: position.left + shift.left,\n      rowIndex: position.rowIndex,\n      cellIndex: position.cellIndex,\n      hMax: horizontalHMax,\n      vMax: this.getVerticalMax(groupIndex),\n      groupIndex: groupIndex\n    };\n  };\n\n  _proto2.calculateCellPositionByView = function (date, groupIndex, inAllDayRow) {\n    var index = this.getCellIndexByDate(date, inAllDayRow);\n\n    var position = this._getCellPositionByIndex(index, groupIndex, inAllDayRow);\n\n    if (position) {\n      position.top -= this._getVirtualRowOffset();\n    }\n\n    return position;\n  };\n\n  _proto2.getVerticalMax = function (groupIndex) {\n    return this._groupedStrategy.getVerticalMax(groupIndex);\n  };\n\n  _proto2._getOffsetByAllDayPanel = function (groupIndex) {\n    return this._groupedStrategy._getOffsetByAllDayPanel(groupIndex);\n  };\n\n  _proto2._getGroupTop = function (groupIndex) {\n    return this._groupedStrategy._getGroupTop(groupIndex);\n  };\n\n  _proto2.isGroupedByDate = function () {\n    return this.option(\"groupByDate\") && this._isHorizontalGroupedWorkSpace() && this._getGroupCount() > 0;\n  };\n\n  _proto2.getCellIndexByDate = function (date, inAllDayRow) {\n    var timeInterval = inAllDayRow ? 864e5 : this._getInterval();\n\n    var dateTimeStamp = this._getIntervalBetween(date, inAllDayRow);\n\n    var index = Math.floor(dateTimeStamp / timeInterval);\n\n    if (inAllDayRow) {\n      index = this._updateIndex(index);\n    }\n\n    if (index < 0) {\n      index = 0;\n    }\n\n    return index;\n  };\n\n  _proto2.getPositionShift = function (timeShift, isAllDay) {\n    return {\n      top: timeShift * this.getCellHeight(),\n      left: 0,\n      cellPosition: 0\n    };\n  };\n\n  _proto2.getTimeShift = function (date) {\n    var currentDayStart = new Date(date);\n    var cellDuration = this.getCellDuration();\n    var currentDayEndHour = new Date(new Date(date).setHours(this.option(\"endDayHour\"), 0, 0));\n\n    if (date.getTime() <= currentDayEndHour.getTime()) {\n      currentDayStart.setHours(this.option(\"startDayHour\"), 0, 0, 0);\n    }\n\n    var timeZoneDifference = _date.default.getTimezonesDifference(date, currentDayStart);\n\n    var currentDateTime = date.getTime();\n    var currentDayStartTime = currentDayStart.getTime();\n\n    var minTime = this._firstViewDate.getTime();\n\n    return currentDateTime > minTime ? (currentDateTime - currentDayStartTime + timeZoneDifference) % cellDuration / cellDuration : 0;\n  };\n\n  _proto2._isSkippedData = function () {\n    return false;\n  };\n\n  _proto2.getCoordinatesByDateInGroup = function (startDate, appointmentResources, inAllDayRow) {\n    var _this10 = this;\n\n    var result = [];\n\n    if (this._isSkippedData(startDate)) {\n      return result;\n    }\n\n    var groupIndices = this._getGroupCount() ? this._getGroupIndexes(appointmentResources) : [0];\n    groupIndices.forEach(function (groupIndex) {\n      var coordinates = _this10.getCoordinatesByDate(startDate, groupIndex, inAllDayRow);\n\n      coordinates && result.push(coordinates);\n    });\n    return result;\n  };\n\n  _proto2.getDroppableCellIndex = function () {\n    var $droppableCell = this._getDroppableCell();\n\n    var $row = $droppableCell.parent();\n    var rowIndex = $row.index();\n    return rowIndex * $row.find(\"td\").length + $droppableCell.index();\n  };\n\n  _proto2.getDataByDroppableCell = function () {\n    var cellData = this.getCellData((0, _renderer.default)(this._getDroppableCell()));\n    var allDay = cellData.allDay;\n    var startDate = cellData.startDate;\n    var endDate = startDate && this.invoke(\"calculateAppointmentEndDate\", allDay, startDate);\n    return {\n      startDate: startDate,\n      endDate: endDate,\n      allDay: allDay,\n      groups: cellData.groups\n    };\n  };\n\n  _proto2.getDateRange = function () {\n    return [this.getStartViewDate(), this.getEndViewDateByEndDayHour()];\n  };\n\n  _proto2.getCellWidth = function () {\n    var _this11 = this;\n\n    return this.cache.get(\"cellWidth\", function () {\n      var cell = _this11._getCells().first().get(0);\n\n      return cell && (0, _position.getBoundingRect)(cell).width;\n    });\n  };\n\n  _proto2.getCellMinWidth = function () {\n    return DATE_TABLE_MIN_CELL_WIDTH;\n  };\n\n  _proto2.getRoundedCellWidth = function (groupIndex, startIndex, cellCount) {\n    if (groupIndex < 0) {\n      return 0;\n    }\n\n    var $row = this.$element().find(\".\" + this._getDateTableRowClass()).eq(0);\n    var width = 0;\n    var $cells = $row.find(\".\" + DATE_TABLE_CELL_CLASS);\n    var totalCellCount = this._getCellCount() * groupIndex;\n    cellCount = cellCount || this._getCellCount();\n\n    if (!(0, _type.isDefined)(startIndex)) {\n      startIndex = totalCellCount;\n    }\n\n    for (var i = startIndex; i < totalCellCount + cellCount; i++) {\n      width += (0, _position.getBoundingRect)((0, _renderer.default)($cells).eq(i).get(0)).width;\n    }\n\n    return width / (totalCellCount + cellCount - startIndex);\n  };\n\n  _proto2.getCellHeight = function () {\n    var _this12 = this;\n\n    var useCache = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : true;\n\n    var callbackResult = function callbackResult() {\n      var cell = _this12._getCells().first().get(0);\n\n      return cell && (0, _position.getBoundingRect)(cell).height;\n    };\n\n    return useCache ? this.cache.get(\"cellHeight\", callbackResult) : callbackResult();\n  };\n\n  _proto2.getAllDayHeight = function () {\n    var cell = this._getCells(true).first().get(0);\n\n    return this._isShowAllDayPanel() ? cell && (0, _position.getBoundingRect)(cell).height || 0 : 0;\n  };\n\n  _proto2.getAllDayOffset = function () {\n    return this._groupedStrategy.getAllDayOffset();\n  };\n\n  _proto2.getMaxAllowedPosition = function () {\n    if (0 === this._maxAllowedPosition.length) {\n      var isRtl = this.option(\"rtlEnabled\");\n      this._maxAllowedPosition = [];\n\n      this._$dateTable.find(\"tr:not(.\".concat(VIRTUAL_ROW_CLASS, \")\")).first().find(\"td:nth-child(\".concat(this._getCellCount(), \"n)\")).each(function (_, cell) {\n        var maxPosition = (0, _renderer.default)(cell).position().left;\n\n        if (!isRtl) {\n          maxPosition += (0, _position.getBoundingRect)(cell).width;\n        }\n\n        this._maxAllowedPosition.push(Math.round(maxPosition));\n      }.bind(this));\n    }\n\n    return this._maxAllowedPosition;\n  };\n\n  _proto2.getMaxAllowedVerticalPosition = function (groupIndex) {\n    if (this.isVirtualScrolling()) {\n      return this.getMaxAllowedVerticalPositionVirtual(groupIndex);\n    }\n\n    return this.getMaxAllowedVerticalPositionStandard(groupIndex);\n  };\n\n  _proto2.getMaxAllowedVerticalPositionStandard = function (groupIndex) {\n    var _this13 = this;\n\n    if (0 === this._maxAllowedVerticalPosition.length) {\n      var rowCount = this._getRowCount();\n\n      this._$dateTable.find(\"tr:not(.\".concat(VIRTUAL_ROW_CLASS, \"):nth-child(\").concat(rowCount, \"n)\")).each(function (_, row) {\n        var maxPosition = (0, _renderer.default)(row).position().top + (0, _position.getBoundingRect)(row).height;\n\n        _this13._maxAllowedVerticalPosition.push(Math.round(maxPosition));\n      });\n    }\n\n    return this._maxAllowedVerticalPosition[groupIndex];\n  };\n\n  _proto2.getMaxAllowedVerticalPositionVirtual = function (groupIndex) {\n    var _this14 = this;\n\n    var getMaxPosition = function getMaxPosition(rowIndex) {\n      var row = _this14._$dateTable.find(\"tr:not(.\".concat(VIRTUAL_ROW_CLASS, \")\")).get(rowIndex);\n\n      var maxPosition = (0, _renderer.default)(row).position().top + (0, _position.getBoundingRect)(row).height;\n\n      if (_this14.isGroupedAllDayPanel()) {\n        maxPosition -= (groupIndex + 1) * _this14.getAllDayHeight();\n      }\n\n      _this14._maxAllowedVerticalPosition[groupIndex] = Math.round(maxPosition);\n    };\n\n    if (!this._maxAllowedVerticalPosition[groupIndex]) {\n      var _this$viewDataProvide = this.viewDataProvider.getLasGroupCellPosition(groupIndex),\n          rowIndex = _this$viewDataProvide.rowIndex;\n\n      getMaxPosition(rowIndex);\n    }\n\n    return this._maxAllowedVerticalPosition[groupIndex];\n  };\n\n  _proto2.getFixedContainer = function () {\n    return this._$fixedContainer;\n  };\n\n  _proto2.getAllDayContainer = function () {\n    return this._$allDayContainer;\n  };\n\n  _proto2.getCellIndexByCoordinates = function (coordinates, allDay) {\n    var cellCount = this._getTotalCellCount(this._getGroupCount());\n\n    var cellWidth = Math.floor(this._getWorkSpaceWidth() / cellCount);\n    var cellHeight = allDay ? this.getAllDayHeight() : this.getCellHeight();\n    var leftOffset = this._isRTL() || this.option(\"crossScrollingEnabled\") ? 0 : this.getWorkSpaceLeftOffset();\n    var topIndex = Math.floor(Math.floor(coordinates.top) / Math.floor(cellHeight));\n    var leftIndex = Math.floor((coordinates.left + 5 - leftOffset) / cellWidth);\n\n    if (this._isRTL()) {\n      leftIndex = cellCount - leftIndex - 1;\n    }\n\n    return cellCount * topIndex + leftIndex;\n  };\n\n  _proto2.getStartViewDate = function () {\n    return this._firstViewDate;\n  };\n\n  _proto2.getEndViewDate = function () {\n    var dateOfLastViewCell = this.getDateOfLastViewCell();\n    var endDateOfLastViewCell = this.calculateEndViewDate(dateOfLastViewCell);\n    return this._adjustEndViewDateByDaylightDiff(dateOfLastViewCell, endDateOfLastViewCell);\n  };\n\n  _proto2.getEndViewDateByEndDayHour = function () {\n    var dateOfLastViewCell = this.getDateOfLastViewCell();\n\n    var endTime = _date.default.dateTimeFromDecimal(this.option(\"endDayHour\"));\n\n    var endDateOfLastViewCell = new Date(dateOfLastViewCell.setHours(endTime.hours, endTime.minutes));\n    return this._adjustEndViewDateByDaylightDiff(dateOfLastViewCell, endDateOfLastViewCell);\n  };\n\n  _proto2.calculateEndViewDate = function (dateOfLastViewCell) {\n    return new Date(dateOfLastViewCell.getTime() + this.getCellDuration());\n  };\n\n  _proto2._adjustEndViewDateByDaylightDiff = function (startDate, endDate) {\n    var daylightDiff = _utils.default.getDaylightOffsetInMs(startDate, endDate);\n\n    var endDateOfLastViewCell = new Date(endDate.getTime() - daylightDiff);\n    return new Date(endDateOfLastViewCell.getTime() - this._getEndViewDateTimeDiff());\n  };\n\n  _proto2._getEndViewDateTimeDiff = function () {\n    return toMs(\"minute\");\n  };\n\n  _proto2.getDateOfLastViewCell = function () {\n    var rowIndex = this._getRowCount() - 1;\n\n    var cellIndex = this._getCellCount();\n\n    if (this.isGroupedByDate()) {\n      cellIndex = cellIndex * this._getGroupCount() - 1;\n    } else {\n      cellIndex -= 1;\n    }\n\n    return this._getDateByCellIndexes(rowIndex, cellIndex, true);\n  };\n\n  _proto2.getCellDuration = function () {\n    return 36e5 * this.option(\"hoursInterval\");\n  };\n\n  _proto2.getIntervalDuration = function (allDay) {\n    return allDay ? toMs(\"day\") : this.getCellDuration();\n  };\n\n  _proto2.getVisibleDayDuration = function () {\n    return this.option(\"hoursInterval\") * this._getCellCountInDay() * HOUR_MS;\n  };\n\n  _proto2.getGroupBounds = function (coordinates) {\n    var cellCount = this._getCellCount();\n\n    var $cells = this._getCells();\n\n    var cellWidth = this.getCellWidth();\n\n    var result = this._groupedStrategy.getGroupBoundsOffset(cellCount, $cells, cellWidth, coordinates);\n\n    if (this._isRTL()) {\n      var startOffset = result.left;\n      result.left = result.right - 2 * cellWidth;\n      result.right = startOffset + 2 * cellWidth;\n    }\n\n    return result;\n  };\n\n  _proto2.needRecalculateResizableArea = function () {\n    return this._isVerticalGroupedWorkSpace() && 0 !== this.getScrollable().scrollTop();\n  };\n\n  _proto2.getCellDataByCoordinates = function (coordinates, allDay) {\n    var _this15 = this;\n\n    var key = JSON.stringify({\n      top: coordinates.top,\n      left: coordinates.left\n    });\n    return this.cache.get(key, function () {\n      var $cells = _this15._getCells(allDay);\n\n      var cellIndex = _this15.getCellIndexByCoordinates(coordinates, allDay);\n\n      var $cell = $cells.eq(cellIndex);\n      return _this15.getCellData($cell);\n    });\n  };\n\n  _proto2.getVisibleBounds = function () {\n    var result = {};\n    var $scrollable = this.getScrollable().$element();\n    var cellHeight = this.getCellHeight();\n    var scrolledCellCount = this.getScrollableScrollTop() / cellHeight;\n    var totalCellCount = scrolledCellCount + $scrollable.height() / cellHeight;\n    result.top = {\n      hours: Math.floor(scrolledCellCount * this.option(\"hoursInterval\")) + this.option(\"startDayHour\"),\n      minutes: scrolledCellCount % 2 ? 30 : 0\n    };\n    result.bottom = {\n      hours: Math.floor(totalCellCount * this.option(\"hoursInterval\")) + this.option(\"startDayHour\"),\n      minutes: Math.floor(totalCellCount) % 2 ? 30 : 0\n    };\n    return result;\n  };\n\n  _proto2.updateScrollPosition = function (date, groups) {\n    var allDay = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : false;\n    var scheduler = this.option(\"observer\");\n    var newDate = scheduler.timeZoneCalculator.createDate(date, {\n      path: \"toGrid\"\n    });\n\n    var inAllDayRow = allDay && this.supportAllDayRow() && this._isShowAllDayPanel();\n\n    if (this.needUpdateScrollPosition(newDate, groups, inAllDayRow)) {\n      this.scrollTo(newDate, groups, inAllDayRow, false);\n    }\n  };\n\n  _proto2.needUpdateScrollPosition = function (date, groups, inAllDayRow) {\n    var _this16 = this;\n\n    var cells = this._getCellsInViewport(inAllDayRow);\n\n    var groupIndex = this._isGroupsSpecified(groups) ? this._getGroupIndexByResourceId(groups) : 0;\n    var time = date.getTime();\n\n    var trimmedTime = _date.default.trimTime(date).getTime();\n\n    return cells.reduce(function (currentResult, cell) {\n      var _this16$getCellData = _this16.getCellData(cell),\n          cellStartDate = _this16$getCellData.startDate,\n          cellEndDate = _this16$getCellData.endDate,\n          cellGroupIndex = _this16$getCellData.groupIndex;\n\n      var cellStartTime = cellStartDate.getTime();\n      var cellEndTime = cellEndDate.getTime();\n\n      if ((!inAllDayRow && cellStartTime <= time && time < cellEndTime || inAllDayRow && trimmedTime === cellStartTime) && groupIndex === cellGroupIndex) {\n        return false;\n      }\n\n      return currentResult;\n    }, true);\n  };\n\n  _proto2._getCellsInViewport = function (inAllDayRow) {\n    var $scrollable = this.getScrollable().$element();\n    var cellHeight = this.getCellHeight();\n    var cellWidth = this.getCellWidth();\n\n    var totalColumnCount = this._getTotalCellCount(this._getGroupCount());\n\n    var scrollableScrollTop = this.getScrollableScrollTop();\n    var scrollableScrollLeft = this.getScrollableScrollLeft();\n    var fullScrolledRowCount = scrollableScrollTop / cellHeight;\n\n    if (this.isVirtualScrolling()) {\n      fullScrolledRowCount -= this.virtualScrollingDispatcher.topVirtualRowsCount;\n    }\n\n    var scrolledRowCount = Math.floor(fullScrolledRowCount);\n\n    if (scrollableScrollTop % cellHeight !== 0) {\n      scrolledRowCount += 1;\n    }\n\n    var fullScrolledColumnCount = scrollableScrollLeft / cellWidth;\n    var scrolledColumnCount = Math.floor(fullScrolledColumnCount);\n\n    if (scrollableScrollLeft % cellWidth !== 0) {\n      scrolledColumnCount += 1;\n    }\n\n    var rowCount = Math.floor(fullScrolledRowCount + $scrollable.height() / cellHeight);\n    var columnCount = Math.floor(fullScrolledColumnCount + $scrollable.width() / cellWidth);\n\n    var $cells = this._getAllCells(inAllDayRow);\n\n    var result = [];\n    $cells.each(function (index) {\n      var $cell = (0, _renderer.default)(this);\n      var columnIndex = index % totalColumnCount;\n      var rowIndex = index / totalColumnCount;\n\n      if (scrolledColumnCount <= columnIndex && columnIndex < columnCount && scrolledRowCount <= rowIndex && rowIndex < rowCount) {\n        result.push($cell);\n      }\n    });\n    return result;\n  };\n\n  _proto2.getGroupWidth = function (groupIndex) {\n    var result = this._getCellCount() * this.getCellWidth();\n    var position = this.getMaxAllowedPosition();\n    var currentPosition = position[groupIndex];\n\n    if (position.length && currentPosition) {\n      if (this._isRTL()) {\n        result = currentPosition - position[groupIndex + 1];\n      } else {\n        if (0 === groupIndex) {\n          result = currentPosition;\n        } else {\n          result = currentPosition - position[groupIndex - 1];\n        }\n      }\n    }\n\n    return result;\n  };\n\n  _proto2.scrollToTime = function (hours, minutes, date) {\n    if (!this._isValidScrollDate(date)) {\n      return;\n    }\n\n    var coordinates = this._getScrollCoordinates(hours, minutes, date);\n\n    var scrollable = this.getScrollable();\n    scrollable.scrollBy({\n      top: coordinates.top - scrollable.scrollTop(),\n      left: 0\n    });\n  };\n\n  _proto2.scrollTo = function (date, groups) {\n    var allDay = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : false;\n    var throwWarning = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : true;\n\n    if (!this._isValidScrollDate(date, throwWarning)) {\n      return;\n    }\n\n    var groupIndex = this._getGroupCount() && groups ? this._getGroupIndexByResourceId(groups) : 0;\n\n    var isScrollToAllDay = allDay && this.supportAllDayRow() && this._isShowAllDayPanel();\n\n    var coordinates = this._getScrollCoordinates(date.getHours(), date.getMinutes(), date, groupIndex, isScrollToAllDay);\n\n    var scrollable = this.getScrollable();\n    var $scrollable = scrollable.$element();\n    var offset = this.option(\"rtlEnabled\") ? this.getCellWidth() : 0;\n    var scrollableHeight = $scrollable.height();\n    var scrollableWidth = $scrollable.width();\n    var cellWidth = this.getCellWidth();\n    var cellHeight = this.getCellHeight();\n    var xShift = (scrollableWidth - cellWidth) / 2;\n    var yShift = (scrollableHeight - cellHeight) / 2;\n    var left = coordinates.left - scrollable.scrollLeft() - xShift - offset;\n    var top = coordinates.top - scrollable.scrollTop() - yShift;\n\n    if (isScrollToAllDay && !this._isVerticalGroupedWorkSpace()) {\n      top = 0;\n    }\n\n    if (this.option(\"templatesRenderAsynchronously\")) {\n      setTimeout(function () {\n        scrollable.scrollBy({\n          left: left,\n          top: top\n        });\n      });\n    } else {\n      scrollable.scrollBy({\n        left: left,\n        top: top\n      });\n    }\n  };\n\n  _proto2._isValidScrollDate = function (date) {\n    var throwWarning = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : true;\n    var min = this.getStartViewDate();\n    var max = this.getEndViewDate();\n\n    if (date < min || date > max) {\n      throwWarning && _ui.default.log(\"W1008\", date);\n      return false;\n    }\n\n    return true;\n  };\n\n  _proto2.getDistanceBetweenCells = function (startIndex, endIndex) {\n    var result = 0;\n    this.$element().find(\".\" + this._getDateTableRowClass()).first().find(\".\" + DATE_TABLE_CELL_CLASS).each(function (index) {\n      if (index < startIndex || index > endIndex) {\n        return true;\n      }\n\n      result += (0, _position.getBoundingRect)(this).width;\n    });\n    return result;\n  };\n\n  _proto2.needApplyCollectorOffset = function () {\n    return false;\n  };\n\n  _proto2.initDragBehavior = function (scheduler) {\n    if (!this.dragBehavior && scheduler) {\n      this.dragBehavior = new _appointmentDragBehavior.default(scheduler);\n\n      this._createDragBehavior(this.getWorkArea());\n\n      this._createDragBehavior(this.getAllDayContainer());\n\n      this._createDragBehavior(this._$allDayPanel);\n    }\n  };\n\n  _proto2._createDragBehavior = function ($element) {\n    var getItemData = function getItemData(itemElement, appointments) {\n      return appointments._getItemData(itemElement);\n    };\n\n    var getItemSettings = function getItemSettings($itemElement) {\n      return $itemElement.data(_constants.APPOINTMENT_SETTINGS_KEY);\n    };\n\n    this._createDragBehaviorBase($element, getItemData, getItemSettings);\n  };\n\n  _proto2._createDragBehaviorBase = function ($element, getItemData, getItemSettings) {\n    var _this17 = this;\n\n    var _ref3 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {},\n        isSetCursorOffset = _ref3.isSetCursorOffset,\n        restOptions = _objectWithoutProperties(_ref3, [\"isSetCursorOffset\"]);\n\n    var dragElement;\n    var dragBehavior = this.dragBehavior;\n    var itemData;\n    dragBehavior.addTo($element, _objectSpread({\n      container: this.$element().find(\".\".concat(_constants.FIXED_CONTAINER_CLASS)),\n      dragTemplate: function dragTemplate() {\n        return dragElement;\n      },\n      onDragStart: function onDragStart(e) {\n        var canceled = e.cancel;\n        var event = e.event;\n        var $itemElement = (0, _renderer.default)(e.itemElement);\n        var appointments = e.component._appointments;\n        itemData = getItemData(e.itemElement, appointments);\n        var settings = getItemSettings($itemElement, e);\n\n        if (itemData && !itemData.disabled) {\n          event.data = event.data || {};\n\n          if (!canceled) {\n            if (!settings.isCompact) {\n              dragBehavior.updateDragSource(itemData, settings);\n            }\n\n            dragElement = _this17._createDragAppointment(itemData, settings, appointments);\n            event.data.itemElement = dragElement;\n            event.data.initialPosition = (0, _translator.locate)((0, _renderer.default)(dragElement));\n            event.data.itemData = itemData;\n            event.data.itemSettings = settings;\n            dragBehavior.onDragStart(event.data);\n            (0, _translator.resetPosition)((0, _renderer.default)(dragElement));\n          }\n        }\n      },\n      onDragEnd: function onDragEnd(e) {\n        var _dragElement;\n\n        if (itemData && !itemData.disabled) {\n          dragBehavior.onDragEnd(e);\n        }\n\n        null === (_dragElement = dragElement) || void 0 === _dragElement ? void 0 : _dragElement.remove();\n      },\n      cursorOffset: isSetCursorOffset ? function () {\n        var $dragElement = (0, _renderer.default)(dragElement);\n        return {\n          x: $dragElement.width() / 2,\n          y: $dragElement.height() / 2\n        };\n      } : void 0\n    }, restOptions));\n  };\n\n  _proto2._createDragAppointment = function (itemData, settings, appointments) {\n    var appointmentIndex = appointments.option(\"items\").length;\n    settings.isCompact = false;\n    settings.virtual = false;\n\n    var items = appointments._renderItem(appointmentIndex, {\n      itemData: itemData,\n      settings: [settings]\n    });\n\n    return items[0];\n  };\n\n  _proto2._isApplyCompactAppointmentOffset = function () {\n    return this._supportCompactDropDownAppointments();\n  };\n\n  _proto2._supportCompactDropDownAppointments = function () {\n    return true;\n  };\n\n  _proto2._formatWeekday = function (date) {\n    return formatWeekday(date);\n  };\n\n  _proto2._formatWeekdayAndDay = function (date) {\n    return formatWeekday(date) + \" \" + _date2.default.format(date, \"day\");\n  };\n\n  _proto2.removeDroppableCellClass = function ($cellElement) {\n    ($cellElement || this._getDroppableCell()).removeClass(DATE_TABLE_DROPPABLE_CELL_CLASS);\n  };\n\n  _proto2._getCoordinatesByCell = function ($cell) {\n    var columnIndex = $cell.index();\n    var rowIndex = $cell.parent().index();\n\n    var isAllDayCell = this._hasAllDayClass($cell);\n\n    var isVerticalGrouping = this._isVerticalGroupedWorkSpace();\n\n    if (this.isVirtualScrolling() && !(isAllDayCell && !isVerticalGrouping)) {\n      rowIndex -= this.virtualScrollingDispatcher.topVirtualRowsCount;\n    }\n\n    return {\n      rowIndex: rowIndex,\n      columnIndex: columnIndex\n    };\n  };\n\n  _proto2._isShowAllDayPanel = function () {\n    return this.option(\"showAllDayPanel\");\n  };\n\n  _proto2.updateAppointments = function () {\n    var _this$dragBehavior;\n\n    this.invoke(\"renderAppointments\");\n    null === (_this$dragBehavior = this.dragBehavior) || void 0 === _this$dragBehavior ? void 0 : _this$dragBehavior.updateDragSource();\n  };\n\n  _createClass(SchedulerWorkSpace, [{\n    key: \"viewDataProvider\",\n    get: function get() {\n      if (!this._viewDataProvider) {\n        this._viewDataProvider = new _view_data_provider.default(this);\n      }\n\n      return this._viewDataProvider;\n    }\n  }, {\n    key: \"cache\",\n    get: function get() {\n      return _cache.cache;\n    }\n  }, {\n    key: \"virtualSelectionState\",\n    get: function get() {\n      if (!this._virtualSelectionState) {\n        this._virtualSelectionState = new _virtual_selection_state.default(this.viewDataProvider);\n      }\n\n      return this._virtualSelectionState;\n    }\n  }]);\n\n  return SchedulerWorkSpace;\n}(_widgetObserver.default);\n\nvar _default = SchedulerWorkSpace;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["/home/emma/node_modules/devextreme/ui/scheduler/workspaces/ui.scheduler.work_space.js"],"names":["exports","default","_renderer","_interopRequireDefault","require","_dom_adapter","_events_engine","_element_data","_date","_window","_element","_extend","_iterator","_position","_message","_date2","_common","_type","_index","_pointer","_ui","_click","_contextmenu","_drag","_ui2","_uiSchedulerWork_spaceGroupedStrategy","_uiSchedulerWork_spaceGroupedStrategy2","_uiScheduler","_uiSchedulerCurrent_time_shader","_appointmentDragBehavior","_constants","_utils","_widgetObserver","_translator","_uiScheduler2","_view_data_provider","_layout","_title","_layout2","_virtual_selection_state","_cache","obj","__esModule","_objectWithoutProperties","source","excluded","target","_objectWithoutPropertiesLoose","key","i","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","sourceKeys","keys","ownKeys","object","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","value","configurable","writable","_defineProperties","props","descriptor","_createClass","Constructor","protoProps","staticProps","_inheritsLoose","subClass","superClass","create","constructor","_setPrototypeOf","o","p","setPrototypeOf","__proto__","tableCreator","abstract","toMs","dateToMilliseconds","COMPONENT_CLASS","GROUPED_WORKSPACE_CLASS","VERTICAL_GROUPED_WORKSPACE_CLASS","WORKSPACE_VERTICAL_GROUP_TABLE_CLASS","WORKSPACE_WITH_BOTH_SCROLLS_CLASS","WORKSPACE_WITH_COUNT_CLASS","WORKSPACE_WITH_GROUP_BY_DATE_CLASS","WORKSPACE_WITH_ODD_CELLS_CLASS","TIME_PANEL_CLASS","TIME_PANEL_CELL_CLASS","TIME_PANEL_ROW_CLASS","ALL_DAY_PANEL_CLASS","ALL_DAY_TABLE_CLASS","ALL_DAY_CONTAINER_CLASS","ALL_DAY_TITLE_CLASS","ALL_DAY_TITLE_HIDDEN_CLASS","ALL_DAY_TABLE_CELL_CLASS","ALL_DAY_TABLE_ROW_CLASS","WORKSPACE_WITH_ALL_DAY_CLASS","WORKSPACE_WITH_COLLAPSED_ALL_DAY_CLASS","WORKSPACE_WITH_MOUSE_SELECTION_CLASS","HORIZONTAL_SIZES_CLASS","VERTICAL_SIZES_CLASS","HEADER_PANEL_CLASS","HEADER_PANEL_CELL_CLASS","HEADER_ROW_CLASS","GROUP_ROW_CLASS","GROUP_HEADER_CLASS","GROUP_HEADER_CONTENT_CLASS","DATE_TABLE_CLASS","DATE_TABLE_CELL_CLASS","DATE_TABLE_ROW_CLASS","DATE_TABLE_FOCUSED_CELL_CLASS","VIRTUAL_ROW_CLASS","VIRTUAL_CELL_CLASS","DATE_TABLE_DROPPABLE_CELL_CLASS","SCHEDULER_HEADER_SCROLLABLE_CLASS","SCHEDULER_SIDEBAR_SCROLLABLE_CLASS","SCHEDULER_DATE_TABLE_SCROLLABLE_CLASS","SCHEDULER_WORKSPACE_DXPOINTERDOWN_EVENT_NAME","addNamespace","down","SCHEDULER_CELL_DXDRAGENTER_EVENT_NAME","enter","SCHEDULER_CELL_DXDROP_EVENT_NAME","drop","SCHEDULER_CELL_DXDRAGLEAVE_EVENT_NAME","leave","SCHEDULER_CELL_DXCLICK_EVENT_NAME","name","SCHEDULER_CELL_DXPOINTERDOWN_EVENT_NAME","SCHEDULER_CELL_DXPOINTERUP_EVENT_NAME","up","SCHEDULER_CELL_DXPOINTERMOVE_EVENT_NAME","move","CELL_DATA","DATE_TABLE_CELL_BORDER","DATE_TABLE_MIN_CELL_WIDTH","DAY_MS","HOUR_MS","SCHEDULER_DRAG_AND_DROP_SELECTOR","concat","CELL_SELECTOR","ScrollSemaphore","counter","_proto","isFree","take","release","formatWeekday","date","getDayNames","getDay","SchedulerWorkSpace","_WidgetObserver","_proto2","_supportedKeys","clickHandler","e","preventDefault","stopPropagation","_selectedCells","$itemElement","option","$cellElement","_showPopup","_cellClickAction","event","cellElement","cellData","getCellData","arrowPressHandler","cell","_moveToCell","shiftKey","extend","space","downArrow","$cell","_getCellFromNextRow","upArrow","rightArrow","$rightCell","_getCellFromNextColumn","leftArrow","$leftCell","_dispose","_this$virtualScrollin","virtualScrollingDispatcher","dispose","_disposeRenovatedComponents","_isRTL","_getFocusedCell","_$focusedCell","_$dateTable","find","eq","_getAllFocusedCells","direction","$currentCell","isDefined","cellIndex","index","$row","parent","children","_checkForViewBounds","$item","isMultiSelection","$focusedCell","$nextCell","nextColumnDirection","isDirectionNext","previousColumnDirection","isRTL","groupCount","_getGroupCount","isHorizontalGrouping","_isHorizontalGroupedWorkSpace","isGroupedByDate","totalCellCount","_getTotalCellCount","rowCellCount","_getCellCount","lastIndexInRow","currentIndex","step","isEdgeCell","_isEdgeCell","sign","directionSign","resultingSign","_isGroupEndCell","nextIndex","rowDirection","rightEdgeCellIndex","leftEdgeCellIndex","edgeCellIndex","isNextCellGreaterThanEdge","isNextCellLessThanEdge","isRightEdgeCell","isLeftEdgeCell","cellsInRow","currentCellIndex","result","endCell","startCell","_setSelectedAndFocusedCells","_dateTableScrollable","scrollToElement","updateViewData","isVirtualScrolling","$correctedCell","_correctCellForGroup","hasClass","_setSelectedCells","_setFocusedCell","_releaseFocusedCell","_this$_getCoordinates","_getCoordinatesByCell","rowIndex","columnIndex","isAllDayCell","_hasAllDayClass","virtualSelectionState","setFocusedCell","focusedCell","getFocusedCell","_isVerticalGroupedWorkSpace","coordinates","allDay","_dom_getAllDayPanelCell","_dom_getDateCell","_toggleFocusedCellClass","$firstCell","_releaseSelectedCells","_setSelectedCellsInVirtualMode","_setSelectedCellsInStandardMode","$selectedCells","_toggleFocusClass","setAria","selectedCellData","getSelectedCellData","map","_ref","startDate","endDate","groups","groupIndex","_selectionChangedAction","$previousCell","_$prevCell","orientation","$targetCells","_getCellsBetween","toArray","get","_this$_getCoordinates2","firstRow","firstColumn","isFirstAllDay","firstCell","setSelectedCells","_this$_getCoordinates3","_firstCell","_setSelectedCellsByCellData","getSelectedCells","isValidFocusedCell","cellGroupIndex","_getGroupIndexByCell","focusedCellGroupIndex","isDifferentTables","$first","$last","isAllDayTable","$cells","_getCells","firstIndex","lastIndex","buffer","slice","focusedGroupIndex","each","_","bind","_this$_getCoordinates4","viewDataProvider","_groupedStrategy","getGroupIndexByCell","isFocused","$element","$focusTarget","_focusTarget","toggleClass","_releaseSelectedAndFocusedCells","_focusInHandler","is","_isCellClick","_contextMenuHandled","_focusOutHandler","_this$virtualSelectio","releaseSelectedAndFocusedCells","_getDefaultOptions","currentDate","Date","intervalCount","firstDayOfWeek","startDayHour","endDayHour","hoursInterval","activeStateEnabled","hoverStateEnabled","showAllDayPanel","allDayExpanded","onCellClick","crossScrollingEnabled","dataCellTemplate","timeCellTemplate","resourceCellTemplate","dateCellTemplate","allowMultipleCellSelection","indicatorTime","indicatorUpdateInterval","shadeUntilCurrentTime","groupOrientation","groupByDate","scrolling","mode","renovateRender","height","_optionChanged","args","invoke","_cleanWorkSpace","_cleanView","_removeAllDayElements","_initGrouping","repaint","_initGroupedStrategy","_createAllDayPanelElements","_toggleGroupByDateClass","_toggleAllDayVisibility","_changeAllDayVisibility","_attachTablesEvents","headerPanelOffsetRecalculate","_updateScrollable","_createSelectionChangedAction","_createCellClickAction","_attachContextMenuEvent","_toggleWorkSpaceCountClass","_toggleFixedScrollableClass","_toggleHorizontalScrollClass","_dateTableScrollableConfig","_dimensionChanged","_isVirtualModeOn","_toggleGroupedClass","_toggleWorkSpaceWithOddCells","_renderView","_init","_headerSemaphore","_sideBarSemaphore","_dataTableSemaphore","_viewDataProvider","_virtualSelectionState","_activeStateUnit","_maxAllowedVerticalPosition","_maxAllowedPosition","addClass","_getElementClass","_toggleGroupingDirectionClass","strategyName","_getDefaultGroupStrategy","Strategy","_isWorkSpaceWithCount","_isWorkspaceWithOddCells","_getRealGroupOrientation","_getTimePanelClass","_getDateTableClass","_getDateTableRowClass","_getDateTableCellClass","j","cellClass","_needApplyLastGroupCellClass","addAdditionalGroupCellClasses","_getGroupRowClass","_getGroupHeaderClass","_getGroupHeaderContentClass","_initWorkSpaceUnits","_$headerPanel","_$thead","appendTo","_$fixedContainer","FIXED_CONTAINER_CLASS","_$allDayContainer","_initAllDayPanelElements","isRenovatedRender","createRAllDayPanelElements","_$timePanel","_$groupTable","_allDayTitles","_allDayTables","_allDayPanels","_$allDayPanel","_$allDayTitle","$allDayTitle","text","format","_$allDayTable","append","_initDateTableScrollable","$dateTableScrollable","_createComponent","config","useKeyboard","bounceEnabled","updateManually","pushBackValue","_needCreateCrossScrolling","_createCrossScrollingConfig","_this","onScroll","_sidebarScrollable","scrollTo","top","scrollOffset","_headerScrollable","left","onEnd","notifyObserver","_createWorkSpaceElements","_createWorkSpaceScrollableElements","_createWorkSpaceStaticElements","$content","_createHeaderScrollable","_createSidebarScrollable","prepend","$headerScrollable","_headerScrollableConfig","_this2","showScrollbar","useNative","_this3","$timePanelScrollable","_visibilityChanged","visible","cache","clear","_setHorizontalGroupHeaderCellsHeight","_setTableSizes","_attachTableClasses","_addTableClass","_attachHeaderTableClasses","$el","className","cellWidth","getCellWidth","getCellMinWidth","minWidth","getWorkSpaceMinWidth","$headerCells","last","width","_cleanAllowedPositions","noop","_getRowCount","_getRowCountWithAllDayRows","allDayRowCount","_isShowAllDayPanel","_initMarkup","_initVirtualScrolling","_attachEvents","_setFocusOnCellByOption","renovatedRenderSupported","_render","_renderDateTimeIndication","_setIndicationUpdateInterval","_setFirstViewDate","_applyCellTemplates","_renderGroupHeader","_renderDateHeader","renderRWorkspace","_renderTimePanel","_renderGroupAllDayPanel","_renderDateTable","_renderAllDayPanel","_updateGroupTableHeight","_shader","isGroupedAllDayPanel","generateRenderOptions","verticalGroupCount","horizontalGroupCount","allDayElements","_insertAllDayRowsIntoDateTable","rowCountInGroup","cellCount","options","cellCountInGroupRow","cellDataGetters","_getCellData","startRowIndex","nonVirtualRowCount","renderState","rowCount","_getTotalRowCount","_this$virtualScrollin2","isGenerateNewViewData","update","renderRAllDayPanel","renderRTimeTable","renderRDateTable","updateRSelection","updateDimensions","viewData","renderRComponent","renovatedAllDayPanel","parentElement","componentClass","componentName","viewModel","component","container","getPublicElement","getOwnPropertyNames","optionName","isVerticalGrouping","selectedCells","hasWindow","_refreshDateTimeIndication","data","_data$","_this4","cells","_getAllCells","_isGroupsSpecified","_getGroupIndexByResourceId","findCellPositionInMap","getCoordinatesByDate","resources","id","resourceTree","_getGroupIndexRecursively","_this5","currentKey","currentValue","reduce","prevIndex","_ref2","leafIndex","areValuesEqual","_getCalculatedFirstDayOfWeek","firstDayOfWeekOption","_firstDayOfWeek","firstDayOfWeekIndex","_firstViewDate","getFirstWeekDate","_getViewStartByOptions","_setStartDayHour","trimTime","_getStartViewDate","diff","getTime","_getIntervalDuration","_dateInRange","_getHeaderDate","getStartViewDate","dateInRange","setHours","_attachClickEvent","that","pointerDownAction","_createAction","_pointerDownHandler","cellSelector","off","on","isMouseEvent","which","_this6","_createActionByOption","afterExecute","_cellClickHandler","$target","_hasFocusClass","_showAddAppointmentPopup","firstCellData","first","lastCellData","_createContextMenuAction","eventName","NAME","_contextMenuHandler","_contextMenuAction","_getGroupHeaderContainer","_getDateHeaderContainer","$container","cellTemplates","groupRows","_makeGroupRows","_attachGroupCountAttr","elements","_detachGroupCountAttr","templates","template","groupedAttr","getGroupCountAttr","removeAttr","attr","groupRowCount","count","headerPanelHeight","getHeaderPanelHeight","headerHeight","allDayPanelHeight","supportAllDayRow","getAllDayTableHeight","css","paddingBottom","marginBottom","parseInt","tableCreatorStrategy","VERTICAL","HORIZONTAL","makeGroupedTable","groupHeaderRowClass","groupRowClass","groupHeaderClass","groupHeaderContentClass","_getDateHeaderTemplate","$headerRow","cellTemplate","repeatCount","_getCalculateHeaderCellRepeatCount","templateCallbacks","templateIndex","_renderDateHeaderTemplate","colSpan","_cellIndex","_templateIndex","panelCellIndex","_getHeaderText","_getHeaderPanelCellClass","render","model","_getDateByIndex","calculateHeaderCellRepeatCount","_renderTableBody","_getAllDayPanelCellClass","rowClass","_getAllDayCellData","_getDateByCellIndexes","_getGroupIndex","_getCellGroups","toggle","_this7","calculateTimeCellRepeatCount","startViewDate","getDateWithoutTimezoneChange","_getTimeText","_getTimeCellDateCore","_getTimePanelRowCount","_getTimeCellClass","getCellText","getCellDate","_getTimeCellDate","_getCellCountInDay","skipRound","_calculateDayDuration","Math","ceil","timeCellDuration","round","getCellDuration","cellCountInDay","setMilliseconds","getMilliseconds","insertAllDayRowsIntoDateTable","getTotalCellCount","includeAllDayPanelRows","getTotalRowCount","_prepareCellData","calculateEndDate","_getTableAllDay","getGroupIndex","_getInterval","len","items","_getPathToLeaf","tree","findLeafByIndex","_leaf","makeBranch","leaf","reverse","path","_this8","isPointerDown","cellHeight","itemSizeFunc","getBoundingRect","checkDropTarget","_isOutsideScrollable","_$currentTableTarget","removeDroppableCellClass","draggingElement","getDocument","removeClass","_getDateTables","add","_getDateTable","_getAllDayTable","_interval","headerIndex","_getDateForHeaderText","_getFormat","_calculateCellIndex","calculateCellIndex","delayCellTemplateRendering","makeTable","remove","_this$virtualSelectio2","empty","clean","_hiddenInterval","_clean","_this$renovatedAllDay","_this$renovatedDateTa","_this$renovatedTimePa","renovatedDateTable","renovatedTimePanel","getWorkArea","getScrollable","getScrollableScrollTop","scrollTop","getGroupedScrollableScrollTop","getScrollableScrollLeft","scrollLeft","getScrollableOuterWidth","scrollWidth","getScrollableContainer","_container","outerHeight","getTimePanelWidth","getGroupTableWidth","outerWidth","getWorkSpaceLeftOffset","getLeftOffset","getGroupedStrategy","_getCellCoordinatesByIndex","floor","patchedIndexes","_patchCellIndex","firstViewDate","_getMillisecondsOffset","_getOffsetByCount","setTime","getTimezonesDifference","_calculateHiddenInterval","dayCount","_getHiddenInterval","getVisibleDayDuration","_getIntervalBetween","startDayTime","timeZoneOffset","fullInterval","days","_getDaysOfInterval","weekendsCount","_getWeekendsCount","_getGroupIndexes","appointmentResources","_updateIndex","_getDroppableCell","_getWorkSpaceWidth","_this9","_getCellPositionByIndex","inAllDayRow","cellCoordinates","_getCellByCoordinates","_getCellPositionWithCache","_getCellPosition","setCellDataCache","position","indexes","prepareCellIndexes","_getDateTableBorder","_getDateTableBorderOffset","_getGroupHeaderCellsContent","_getGroupHeaderCells","_getScrollCoordinates","hours","minutes","findGlobalCellPosition","calculateCoordinatesByDataAndPosition","$dateTableScrollableElement","scrollableSize","window","getWindow","isTargetInAllDayPanel","closest","isOutsideHorizontalScrollable","pageX","scrollX","isOutsideVerticalScrollable","pageY","scrollY","JSON","stringify","set","setCellDataCacheAlias","appointment","geometry","aliasKey","keepOriginalHours","$focusedCells","_getMultipleCellsData","currentCell","_getCellDataInRenovatedView","_getVirtualRowOffset","verticalScrollingState","virtualItemSizeBefore","topVirtualRowsCount","_getHorizontalMax","getHorizontalMax","shouldFindPositionByViewData","positionByMap","calculateCellPositionByView","shift","getPositionShift","getTimeShift","horizontalHMax","Error","cellPosition","hMax","vMax","getVerticalMax","getCellIndexByDate","_getOffsetByAllDayPanel","_getGroupTop","timeInterval","dateTimeStamp","timeShift","isAllDay","getCellHeight","currentDayStart","cellDuration","currentDayEndHour","timeZoneDifference","currentDateTime","currentDayStartTime","minTime","_isSkippedData","getCoordinatesByDateInGroup","_this10","groupIndices","getDroppableCellIndex","$droppableCell","getDataByDroppableCell","getDateRange","getEndViewDateByEndDayHour","_this11","getRoundedCellWidth","startIndex","_this12","useCache","callbackResult","getAllDayHeight","getAllDayOffset","getMaxAllowedPosition","isRtl","maxPosition","getMaxAllowedVerticalPosition","getMaxAllowedVerticalPositionVirtual","getMaxAllowedVerticalPositionStandard","_this13","row","_this14","getMaxPosition","_this$viewDataProvide","getLasGroupCellPosition","getFixedContainer","getAllDayContainer","getCellIndexByCoordinates","leftOffset","topIndex","leftIndex","getEndViewDate","dateOfLastViewCell","getDateOfLastViewCell","endDateOfLastViewCell","calculateEndViewDate","_adjustEndViewDateByDaylightDiff","endTime","dateTimeFromDecimal","daylightDiff","getDaylightOffsetInMs","_getEndViewDateTimeDiff","getIntervalDuration","getGroupBounds","getGroupBoundsOffset","startOffset","right","needRecalculateResizableArea","getCellDataByCoordinates","_this15","getVisibleBounds","$scrollable","scrolledCellCount","bottom","updateScrollPosition","scheduler","newDate","timeZoneCalculator","createDate","needUpdateScrollPosition","_this16","_getCellsInViewport","time","trimmedTime","currentResult","_this16$getCellData","cellStartDate","cellEndDate","cellStartTime","cellEndTime","totalColumnCount","scrollableScrollTop","scrollableScrollLeft","fullScrolledRowCount","scrolledRowCount","fullScrolledColumnCount","scrolledColumnCount","columnCount","getGroupWidth","currentPosition","scrollToTime","_isValidScrollDate","scrollable","scrollBy","throwWarning","isScrollToAllDay","getHours","getMinutes","offset","scrollableHeight","scrollableWidth","xShift","yShift","setTimeout","min","max","log","getDistanceBetweenCells","endIndex","needApplyCollectorOffset","initDragBehavior","dragBehavior","_createDragBehavior","getItemData","itemElement","appointments","_getItemData","getItemSettings","APPOINTMENT_SETTINGS_KEY","_createDragBehaviorBase","_this17","_ref3","isSetCursorOffset","restOptions","dragElement","itemData","addTo","dragTemplate","onDragStart","canceled","cancel","_appointments","settings","disabled","isCompact","updateDragSource","_createDragAppointment","initialPosition","locate","itemSettings","resetPosition","onDragEnd","_dragElement","cursorOffset","$dragElement","x","y","appointmentIndex","virtual","_renderItem","_isApplyCompactAppointmentOffset","_supportCompactDropDownAppointments","_formatWeekday","_formatWeekdayAndDay","updateAppointments","_this$dragBehavior","_default","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/scheduler/workspaces/ui.scheduler.work_space.js)\r\n * Version: 20.2.7\r\n * Build date: Thu Apr 22 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../../core/renderer\"));\r\nvar _dom_adapter = _interopRequireDefault(require(\"../../../core/dom_adapter\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../../events/core/events_engine\"));\r\nvar _element_data = require(\"../../../core/element_data\");\r\nvar _date = _interopRequireDefault(require(\"../../../core/utils/date\"));\r\nvar _window = require(\"../../../core/utils/window\");\r\nvar _element = require(\"../../../core/element\");\r\nvar _extend = require(\"../../../core/utils/extend\");\r\nvar _iterator = require(\"../../../core/utils/iterator\");\r\nvar _position = require(\"../../../core/utils/position\");\r\nvar _message = _interopRequireDefault(require(\"../../../localization/message\"));\r\nvar _date2 = _interopRequireDefault(require(\"../../../localization/date\"));\r\nvar _common = require(\"../../../core/utils/common\");\r\nvar _type = require(\"../../../core/utils/type\");\r\nvar _index = require(\"../../../events/utils/index\");\r\nvar _pointer = _interopRequireDefault(require(\"../../../events/pointer\"));\r\nvar _ui = _interopRequireDefault(require(\"../../widget/ui.errors\"));\r\nvar _click = require(\"../../../events/click\");\r\nvar _contextmenu = require(\"../../../events/contextmenu\");\r\nvar _drag = require(\"../../../events/drag\");\r\nvar _ui2 = _interopRequireDefault(require(\"../../scroll_view/ui.scrollable\"));\r\nvar _uiSchedulerWork_spaceGroupedStrategy = _interopRequireDefault(require(\"./ui.scheduler.work_space.grouped.strategy.horizontal\"));\r\nvar _uiSchedulerWork_spaceGroupedStrategy2 = _interopRequireDefault(require(\"./ui.scheduler.work_space.grouped.strategy.vertical\"));\r\nvar _uiScheduler = _interopRequireDefault(require(\"../ui.scheduler.table_creator\"));\r\nvar _uiSchedulerCurrent_time_shader = _interopRequireDefault(require(\"../shaders/ui.scheduler.current_time_shader.vertical\"));\r\nvar _appointmentDragBehavior = _interopRequireDefault(require(\"../appointmentDragBehavior\"));\r\nvar _constants = require(\"../constants\");\r\nvar _utils = _interopRequireDefault(require(\"../utils.timeZone\"));\r\nvar _widgetObserver = _interopRequireDefault(require(\"../base/widgetObserver\"));\r\nvar _translator = require(\"../../../animation/translator\");\r\nvar _uiScheduler2 = _interopRequireDefault(require(\"./ui.scheduler.virtual_scrolling\"));\r\nvar _view_data_provider = _interopRequireDefault(require(\"./view_data_provider\"));\r\nvar _layout = _interopRequireDefault(require(\"../../../renovation/ui/scheduler/workspaces/base/date_table/all_day_panel/layout.j\"));\r\nvar _title = _interopRequireDefault(require(\"../../../renovation/ui/scheduler/workspaces/base/date_table/all_day_panel/title.j\"));\r\nvar _layout2 = _interopRequireDefault(require(\"../../../renovation/ui/scheduler/workspaces/base/time_panel/layout.j\"));\r\nvar _virtual_selection_state = _interopRequireDefault(require(\"./virtual_selection_state\"));\r\nvar _cache = require(\"./cache\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _objectWithoutProperties(source, excluded) {\r\n    if (null == source) {\r\n        return {}\r\n    }\r\n    var target = _objectWithoutPropertiesLoose(source, excluded);\r\n    var key, i;\r\n    if (Object.getOwnPropertySymbols) {\r\n        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\r\n        for (i = 0; i < sourceSymbolKeys.length; i++) {\r\n            key = sourceSymbolKeys[i];\r\n            if (excluded.indexOf(key) >= 0) {\r\n                continue\r\n            }\r\n            if (!Object.prototype.propertyIsEnumerable.call(source, key)) {\r\n                continue\r\n            }\r\n            target[key] = source[key]\r\n        }\r\n    }\r\n    return target\r\n}\r\n\r\nfunction _objectWithoutPropertiesLoose(source, excluded) {\r\n    if (null == source) {\r\n        return {}\r\n    }\r\n    var target = {};\r\n    var sourceKeys = Object.keys(source);\r\n    var key, i;\r\n    for (i = 0; i < sourceKeys.length; i++) {\r\n        key = sourceKeys[i];\r\n        if (excluded.indexOf(key) >= 0) {\r\n            continue\r\n        }\r\n        target[key] = source[key]\r\n    }\r\n    return target\r\n}\r\n\r\nfunction ownKeys(object, enumerableOnly) {\r\n    var keys = Object.keys(object);\r\n    if (Object.getOwnPropertySymbols) {\r\n        var symbols = Object.getOwnPropertySymbols(object);\r\n        if (enumerableOnly) {\r\n            symbols = symbols.filter(function(sym) {\r\n                return Object.getOwnPropertyDescriptor(object, sym).enumerable\r\n            })\r\n        }\r\n        keys.push.apply(keys, symbols)\r\n    }\r\n    return keys\r\n}\r\n\r\nfunction _objectSpread(target) {\r\n    for (var i = 1; i < arguments.length; i++) {\r\n        var source = null != arguments[i] ? arguments[i] : {};\r\n        if (i % 2) {\r\n            ownKeys(Object(source), true).forEach(function(key) {\r\n                _defineProperty(target, key, source[key])\r\n            })\r\n        } else {\r\n            if (Object.getOwnPropertyDescriptors) {\r\n                Object.defineProperties(target, Object.getOwnPropertyDescriptors(source))\r\n            } else {\r\n                ownKeys(Object(source)).forEach(function(key) {\r\n                    Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key))\r\n                })\r\n            }\r\n        }\r\n    }\r\n    return target\r\n}\r\n\r\nfunction _defineProperty(obj, key, value) {\r\n    if (key in obj) {\r\n        Object.defineProperty(obj, key, {\r\n            value: value,\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true\r\n        })\r\n    } else {\r\n        obj[key] = value\r\n    }\r\n    return obj\r\n}\r\n\r\nfunction _defineProperties(target, props) {\r\n    for (var i = 0; i < props.length; i++) {\r\n        var descriptor = props[i];\r\n        descriptor.enumerable = descriptor.enumerable || false;\r\n        descriptor.configurable = true;\r\n        if (\"value\" in descriptor) {\r\n            descriptor.writable = true\r\n        }\r\n        Object.defineProperty(target, descriptor.key, descriptor)\r\n    }\r\n}\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) {\r\n    if (protoProps) {\r\n        _defineProperties(Constructor.prototype, protoProps)\r\n    }\r\n    if (staticProps) {\r\n        _defineProperties(Constructor, staticProps)\r\n    }\r\n    return Constructor\r\n}\r\n\r\nfunction _inheritsLoose(subClass, superClass) {\r\n    subClass.prototype = Object.create(superClass.prototype);\r\n    subClass.prototype.constructor = subClass;\r\n    _setPrototypeOf(subClass, superClass)\r\n}\r\n\r\nfunction _setPrototypeOf(o, p) {\r\n    _setPrototypeOf = Object.setPrototypeOf || function(o, p) {\r\n        o.__proto__ = p;\r\n        return o\r\n    };\r\n    return _setPrototypeOf(o, p)\r\n}\r\nvar tableCreator = _uiScheduler.default.tableCreator;\r\nvar abstract = _widgetObserver.default.abstract;\r\nvar toMs = _date.default.dateToMilliseconds;\r\nvar COMPONENT_CLASS = \"dx-scheduler-work-space\";\r\nvar GROUPED_WORKSPACE_CLASS = \"dx-scheduler-work-space-grouped\";\r\nvar VERTICAL_GROUPED_WORKSPACE_CLASS = \"dx-scheduler-work-space-vertical-grouped\";\r\nvar WORKSPACE_VERTICAL_GROUP_TABLE_CLASS = \"dx-scheduler-work-space-vertical-group-table\";\r\nvar WORKSPACE_WITH_BOTH_SCROLLS_CLASS = \"dx-scheduler-work-space-both-scrollbar\";\r\nvar WORKSPACE_WITH_COUNT_CLASS = \"dx-scheduler-work-space-count\";\r\nvar WORKSPACE_WITH_GROUP_BY_DATE_CLASS = \"dx-scheduler-work-space-group-by-date\";\r\nvar WORKSPACE_WITH_ODD_CELLS_CLASS = \"dx-scheduler-work-space-odd-cells\";\r\nvar TIME_PANEL_CLASS = \"dx-scheduler-time-panel\";\r\nvar TIME_PANEL_CELL_CLASS = \"dx-scheduler-time-panel-cell\";\r\nvar TIME_PANEL_ROW_CLASS = \"dx-scheduler-time-panel-row\";\r\nvar ALL_DAY_PANEL_CLASS = \"dx-scheduler-all-day-panel\";\r\nvar ALL_DAY_TABLE_CLASS = \"dx-scheduler-all-day-table\";\r\nvar ALL_DAY_CONTAINER_CLASS = \"dx-scheduler-all-day-appointments\";\r\nvar ALL_DAY_TITLE_CLASS = \"dx-scheduler-all-day-title\";\r\nvar ALL_DAY_TITLE_HIDDEN_CLASS = \"dx-scheduler-all-day-title-hidden\";\r\nvar ALL_DAY_TABLE_CELL_CLASS = \"dx-scheduler-all-day-table-cell\";\r\nvar ALL_DAY_TABLE_ROW_CLASS = \"dx-scheduler-all-day-table-row\";\r\nvar WORKSPACE_WITH_ALL_DAY_CLASS = \"dx-scheduler-work-space-all-day\";\r\nvar WORKSPACE_WITH_COLLAPSED_ALL_DAY_CLASS = \"dx-scheduler-work-space-all-day-collapsed\";\r\nvar WORKSPACE_WITH_MOUSE_SELECTION_CLASS = \"dx-scheduler-work-space-mouse-selection\";\r\nvar HORIZONTAL_SIZES_CLASS = \"dx-scheduler-cell-sizes-horizontal\";\r\nvar VERTICAL_SIZES_CLASS = \"dx-scheduler-cell-sizes-vertical\";\r\nvar HEADER_PANEL_CLASS = \"dx-scheduler-header-panel\";\r\nvar HEADER_PANEL_CELL_CLASS = \"dx-scheduler-header-panel-cell\";\r\nvar HEADER_ROW_CLASS = \"dx-scheduler-header-row\";\r\nvar GROUP_ROW_CLASS = \"dx-scheduler-group-row\";\r\nvar GROUP_HEADER_CLASS = \"dx-scheduler-group-header\";\r\nvar GROUP_HEADER_CONTENT_CLASS = \"dx-scheduler-group-header-content\";\r\nvar DATE_TABLE_CLASS = \"dx-scheduler-date-table\";\r\nvar DATE_TABLE_CELL_CLASS = \"dx-scheduler-date-table-cell\";\r\nvar DATE_TABLE_ROW_CLASS = \"dx-scheduler-date-table-row\";\r\nvar DATE_TABLE_FOCUSED_CELL_CLASS = \"dx-scheduler-focused-cell\";\r\nvar VIRTUAL_ROW_CLASS = \"dx-scheduler-virtual-row\";\r\nvar VIRTUAL_CELL_CLASS = \"dx-scheduler-virtual-cell\";\r\nvar DATE_TABLE_DROPPABLE_CELL_CLASS = \"dx-scheduler-date-table-droppable-cell\";\r\nvar SCHEDULER_HEADER_SCROLLABLE_CLASS = \"dx-scheduler-header-scrollable\";\r\nvar SCHEDULER_SIDEBAR_SCROLLABLE_CLASS = \"dx-scheduler-sidebar-scrollable\";\r\nvar SCHEDULER_DATE_TABLE_SCROLLABLE_CLASS = \"dx-scheduler-date-table-scrollable\";\r\nvar SCHEDULER_WORKSPACE_DXPOINTERDOWN_EVENT_NAME = (0, _index.addNamespace)(_pointer.default.down, \"dxSchedulerWorkSpace\");\r\nvar SCHEDULER_CELL_DXDRAGENTER_EVENT_NAME = (0, _index.addNamespace)(_drag.enter, \"dxSchedulerDateTable\");\r\nvar SCHEDULER_CELL_DXDROP_EVENT_NAME = (0, _index.addNamespace)(_drag.drop, \"dxSchedulerDateTable\");\r\nvar SCHEDULER_CELL_DXDRAGLEAVE_EVENT_NAME = (0, _index.addNamespace)(_drag.leave, \"dxSchedulerDateTable\");\r\nvar SCHEDULER_CELL_DXCLICK_EVENT_NAME = (0, _index.addNamespace)(_click.name, \"dxSchedulerDateTable\");\r\nvar SCHEDULER_CELL_DXPOINTERDOWN_EVENT_NAME = (0, _index.addNamespace)(_pointer.default.down, \"dxSchedulerDateTable\");\r\nvar SCHEDULER_CELL_DXPOINTERUP_EVENT_NAME = (0, _index.addNamespace)(_pointer.default.up, \"dxSchedulerDateTable\");\r\nvar SCHEDULER_CELL_DXPOINTERMOVE_EVENT_NAME = (0, _index.addNamespace)(_pointer.default.move, \"dxSchedulerDateTable\");\r\nvar CELL_DATA = \"dxCellData\";\r\nvar DATE_TABLE_CELL_BORDER = 1;\r\nvar DATE_TABLE_MIN_CELL_WIDTH = 75;\r\nvar DAY_MS = toMs(\"day\");\r\nvar HOUR_MS = toMs(\"hour\");\r\nvar SCHEDULER_DRAG_AND_DROP_SELECTOR = \".\".concat(DATE_TABLE_CLASS, \" td, .\").concat(ALL_DAY_TABLE_CLASS, \" td\");\r\nvar CELL_SELECTOR = \".\".concat(DATE_TABLE_CELL_CLASS, \", .\").concat(ALL_DAY_TABLE_CELL_CLASS);\r\nvar ScrollSemaphore = function() {\r\n    function ScrollSemaphore() {\r\n        this.counter = 0\r\n    }\r\n    var _proto = ScrollSemaphore.prototype;\r\n    _proto.isFree = function() {\r\n        return 0 === this.counter\r\n    };\r\n    _proto.take = function() {\r\n        this.counter++\r\n    };\r\n    _proto.release = function() {\r\n        this.counter--;\r\n        if (this.counter < 0) {\r\n            this.counter = 0\r\n        }\r\n    };\r\n    return ScrollSemaphore\r\n}();\r\nvar formatWeekday = function(date) {\r\n    return _date2.default.getDayNames(\"abbreviated\")[date.getDay()]\r\n};\r\nvar SchedulerWorkSpace = function(_WidgetObserver) {\r\n    _inheritsLoose(SchedulerWorkSpace, _WidgetObserver);\r\n\r\n    function SchedulerWorkSpace() {\r\n        return _WidgetObserver.apply(this, arguments) || this\r\n    }\r\n    var _proto2 = SchedulerWorkSpace.prototype;\r\n    _proto2._supportedKeys = function() {\r\n        var clickHandler = function(e) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            if (this._selectedCells && this._selectedCells.length) {\r\n                var $itemElement = (0, _renderer.default)(this.option(\"focusedElement\"));\r\n                var $cellElement = (0, _renderer.default)($itemElement.length ? $itemElement : this._selectedCells);\r\n                e.target = this._selectedCells;\r\n                this._showPopup = true;\r\n                this._cellClickAction({\r\n                    event: e,\r\n                    cellElement: (0, _renderer.default)(this._selectedCells),\r\n                    cellData: this.getCellData($cellElement)\r\n                })\r\n            }\r\n        };\r\n        var arrowPressHandler = function(e, cell) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            this._moveToCell(cell, e.shiftKey)\r\n        };\r\n        return (0, _extend.extend)(_WidgetObserver.prototype._supportedKeys.call(this), {\r\n            enter: clickHandler,\r\n            space: clickHandler,\r\n            downArrow: function(e) {\r\n                var $cell = this._getCellFromNextRow(\"next\", e.shiftKey);\r\n                arrowPressHandler.call(this, e, $cell)\r\n            },\r\n            upArrow: function(e) {\r\n                var $cell = this._getCellFromNextRow(\"prev\", e.shiftKey);\r\n                arrowPressHandler.call(this, e, $cell)\r\n            },\r\n            rightArrow: function(e) {\r\n                var $rightCell = this._getCellFromNextColumn(\"next\", e.shiftKey);\r\n                arrowPressHandler.call(this, e, $rightCell)\r\n            },\r\n            leftArrow: function(e) {\r\n                var $leftCell = this._getCellFromNextColumn(\"prev\", e.shiftKey);\r\n                arrowPressHandler.call(this, e, $leftCell)\r\n            }\r\n        })\r\n    };\r\n    _proto2._dispose = function() {\r\n        var _this$virtualScrollin;\r\n        _WidgetObserver.prototype._dispose.call(this);\r\n        null === (_this$virtualScrollin = this.virtualScrollingDispatcher) || void 0 === _this$virtualScrollin ? void 0 : _this$virtualScrollin.dispose();\r\n        this._disposeRenovatedComponents()\r\n    };\r\n    _proto2._isRTL = function() {\r\n        return this.option(\"rtlEnabled\")\r\n    };\r\n    _proto2._getFocusedCell = function() {\r\n        return this._$focusedCell || this._$dateTable.find(\".\" + DATE_TABLE_CELL_CLASS).eq(0)\r\n    };\r\n    _proto2._getAllFocusedCells = function() {\r\n        return this._selectedCells || this._$dateTable.find(\".\" + DATE_TABLE_CELL_CLASS).eq(0)\r\n    };\r\n    _proto2._getCellFromNextRow = function(direction) {\r\n        var $currentCell = this._$focusedCell;\r\n        if ((0, _type.isDefined)($currentCell)) {\r\n            var cellIndex = $currentCell.index();\r\n            var $row = $currentCell.parent();\r\n            var $cell = $row[direction]().children().eq(cellIndex);\r\n            $cell = this._checkForViewBounds($cell);\r\n            return $cell\r\n        }\r\n    };\r\n    _proto2._checkForViewBounds = function($item) {\r\n        if (!$item.length) {\r\n            $item = this._$focusedCell\r\n        }\r\n        return $item\r\n    };\r\n    _proto2._getCellFromNextColumn = function(direction, isMultiSelection) {\r\n        var $focusedCell = this._$focusedCell;\r\n        if (!(0, _type.isDefined)($focusedCell)) {\r\n            return\r\n        }\r\n        var $nextCell;\r\n        var $row = $focusedCell.parent();\r\n        var nextColumnDirection = direction;\r\n        var isDirectionNext = \"next\" === direction;\r\n        var previousColumnDirection = isDirectionNext ? \"prev\" : \"next\";\r\n        var isRTL = this._isRTL();\r\n        var groupCount = this._getGroupCount();\r\n        var isHorizontalGrouping = this._isHorizontalGroupedWorkSpace();\r\n        var isGroupedByDate = this.isGroupedByDate();\r\n        var totalCellCount = this._getTotalCellCount(groupCount);\r\n        var rowCellCount = isMultiSelection && !isGroupedByDate ? this._getCellCount() : totalCellCount;\r\n        var lastIndexInRow = rowCellCount - 1;\r\n        var currentIndex = $focusedCell.index();\r\n        var step = isGroupedByDate && isMultiSelection ? groupCount : 1;\r\n        var isEdgeCell = this._isEdgeCell(isHorizontalGrouping ? totalCellCount - 1 : lastIndexInRow, currentIndex, step, direction);\r\n        var sign = isRTL ? 1 : -1;\r\n        var directionSign = isDirectionNext ? 1 : -1;\r\n        var resultingSign = sign * directionSign;\r\n        if (isEdgeCell || isMultiSelection && this._isGroupEndCell($focusedCell, direction)) {\r\n            var nextIndex = currentIndex - resultingSign * step + resultingSign * rowCellCount;\r\n            var rowDirection = isRTL ? previousColumnDirection : nextColumnDirection;\r\n            $nextCell = $row[rowDirection]().children().eq(nextIndex);\r\n            $nextCell = this._checkForViewBounds($nextCell)\r\n        } else {\r\n            $nextCell = $row.children().eq(currentIndex - resultingSign * step)\r\n        }\r\n        return $nextCell\r\n    };\r\n    _proto2._isEdgeCell = function(lastIndexInRow, cellIndex, step, direction) {\r\n        var isRTL = this._isRTL();\r\n        var isDirectionNext = \"next\" === direction;\r\n        var rightEdgeCellIndex = isRTL ? 0 : lastIndexInRow;\r\n        var leftEdgeCellIndex = isRTL ? lastIndexInRow : 0;\r\n        var edgeCellIndex = isDirectionNext ? rightEdgeCellIndex : leftEdgeCellIndex;\r\n        var isNextCellGreaterThanEdge = cellIndex + step > edgeCellIndex;\r\n        var isNextCellLessThanEdge = cellIndex - step < edgeCellIndex;\r\n        var isRightEdgeCell = isRTL ? isNextCellLessThanEdge : isNextCellGreaterThanEdge;\r\n        var isLeftEdgeCell = isRTL ? isNextCellGreaterThanEdge : isNextCellLessThanEdge;\r\n        return isDirectionNext ? isRightEdgeCell : isLeftEdgeCell\r\n    };\r\n    _proto2._isGroupEndCell = function($cell, direction) {\r\n        if (this.isGroupedByDate()) {\r\n            return false\r\n        }\r\n        var isDirectionNext = \"next\" === direction;\r\n        var cellsInRow = this._getCellCount();\r\n        var currentCellIndex = $cell.index();\r\n        var result = currentCellIndex % cellsInRow;\r\n        var endCell = isDirectionNext ? cellsInRow - 1 : 0;\r\n        var startCell = isDirectionNext ? 0 : cellsInRow - 1;\r\n        return this._isRTL() ? result === startCell : result === endCell\r\n    };\r\n    _proto2._moveToCell = function($cell, isMultiSelection) {\r\n        isMultiSelection = isMultiSelection && this.option(\"allowMultipleCellSelection\");\r\n        this._setSelectedAndFocusedCells($cell, isMultiSelection);\r\n        this._dateTableScrollable.scrollToElement($cell)\r\n    };\r\n    _proto2._setSelectedAndFocusedCells = function($cell, isMultiSelection) {\r\n        if (!(0, _type.isDefined)($cell) || !$cell.length) {\r\n            return\r\n        }\r\n        var updateViewData = this.isVirtualScrolling();\r\n        var $correctedCell = $cell;\r\n        if (isMultiSelection) {\r\n            $correctedCell = this._correctCellForGroup($cell)\r\n        }\r\n        if ($correctedCell.hasClass(DATE_TABLE_FOCUSED_CELL_CLASS)) {\r\n            return\r\n        }\r\n        this._setSelectedCells($correctedCell, isMultiSelection);\r\n        this._setFocusedCell($correctedCell, updateViewData)\r\n    };\r\n    _proto2._setFocusedCell = function($cell) {\r\n        var updateViewData = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : false;\r\n        this._releaseFocusedCell();\r\n        var $correctedCell = $cell;\r\n        if (updateViewData) {\r\n            var _this$_getCoordinates = this._getCoordinatesByCell($cell),\r\n                rowIndex = _this$_getCoordinates.rowIndex,\r\n                columnIndex = _this$_getCoordinates.columnIndex;\r\n            var isAllDayCell = this._hasAllDayClass($cell);\r\n            this.virtualSelectionState.setFocusedCell(rowIndex, columnIndex, isAllDayCell);\r\n            var focusedCell = this.virtualSelectionState.getFocusedCell(this._isVerticalGroupedWorkSpace());\r\n            var cellData = focusedCell.cellData,\r\n                coordinates = focusedCell.coordinates;\r\n            var allDay = cellData.allDay;\r\n            $correctedCell = allDay && !this._isVerticalGroupedWorkSpace() ? this._dom_getAllDayPanelCell(coordinates.cellIndex) : this._dom_getDateCell(coordinates)\r\n        }\r\n        this._toggleFocusedCellClass(true, $correctedCell);\r\n        this._$focusedCell = $correctedCell\r\n    };\r\n    _proto2._setSelectedCells = function($firstCell, isMultiSelection) {\r\n        this._releaseSelectedCells();\r\n        this._selectedCells = [];\r\n        if (this.isVirtualScrolling()) {\r\n            this._setSelectedCellsInVirtualMode($firstCell, isMultiSelection)\r\n        } else {\r\n            this._setSelectedCellsInStandardMode($firstCell, isMultiSelection)\r\n        }\r\n        var $selectedCells = (0, _renderer.default)(this._selectedCells);\r\n        this._toggleFocusClass(true, $selectedCells);\r\n        this.setAria(\"label\", \"Add appointment\", $selectedCells);\r\n        var selectedCellData = this.getSelectedCellData().map(function(_ref) {\r\n            var startDate = _ref.startDate,\r\n                endDate = _ref.endDate,\r\n                allDay = _ref.allDay,\r\n                groups = _ref.groups,\r\n                groupIndex = _ref.groupIndex;\r\n            return {\r\n                startDate: startDate,\r\n                endDate: endDate,\r\n                allDay: allDay,\r\n                groups: groups,\r\n                groupIndex: groupIndex || 0\r\n            }\r\n        });\r\n        this.option(\"selectedCellData\", selectedCellData);\r\n        this._selectionChangedAction({\r\n            selectedCellData: selectedCellData\r\n        })\r\n    };\r\n    _proto2._setSelectedCellsInStandardMode = function($firstCell, isMultiSelection) {\r\n        if (isMultiSelection) {\r\n            var $previousCell = this._$prevCell;\r\n            var orientation = \"day\" === this.option(\"type\") && (!this.option(\"groups\").length || \"vertical\" === this.option(\"groupOrientation\")) ? \"vertical\" : \"horizontal\";\r\n            var $targetCells = this._getCellsBetween($firstCell, $previousCell, orientation);\r\n            this._selectedCells = $targetCells.toArray()\r\n        } else {\r\n            this._selectedCells = [$firstCell.get(0)];\r\n            this._$prevCell = $firstCell\r\n        }\r\n    };\r\n    _proto2._setSelectedCellsInVirtualMode = function($firstCell, isMultiSelection) {\r\n        if (isMultiSelection) {\r\n            var _this$_getCoordinates2 = this._getCoordinatesByCell($firstCell),\r\n                firstRow = _this$_getCoordinates2.rowIndex,\r\n                firstColumn = _this$_getCoordinates2.columnIndex;\r\n            var isFirstAllDay = this._hasAllDayClass($firstCell);\r\n            var firstCell = {\r\n                rowIndex: firstRow,\r\n                columnIndex: firstColumn,\r\n                allDay: isFirstAllDay\r\n            };\r\n            this.virtualSelectionState.setSelectedCells(firstCell)\r\n        } else {\r\n            this._selectedCells = [$firstCell.get(0)];\r\n            this._$prevCell = $firstCell;\r\n            var _this$_getCoordinates3 = this._getCoordinatesByCell($firstCell),\r\n                rowIndex = _this$_getCoordinates3.rowIndex,\r\n                columnIndex = _this$_getCoordinates3.columnIndex;\r\n            var isAllDayCell = this._hasAllDayClass($firstCell);\r\n            var _firstCell = {\r\n                rowIndex: rowIndex,\r\n                columnIndex: columnIndex,\r\n                allDay: isAllDayCell\r\n            };\r\n            this.virtualSelectionState.setSelectedCells(_firstCell, _firstCell)\r\n        }\r\n        this._setSelectedCellsByCellData(this.virtualSelectionState.getSelectedCells())\r\n    };\r\n    _proto2._correctCellForGroup = function($cell) {\r\n        if (this.isVirtualScrolling()) {\r\n            var cellData = this.getCellData($cell);\r\n            var isValidFocusedCell = this.virtualSelectionState.isValidFocusedCell(cellData);\r\n            return isValidFocusedCell ? $cell : this._$focusedCell\r\n        }\r\n        var $focusedCell = this._$focusedCell;\r\n        var cellGroupIndex = this._getGroupIndexByCell($cell);\r\n        var focusedCellGroupIndex = this._getGroupIndexByCell($focusedCell);\r\n        var isDifferentTables = this._hasAllDayClass($cell) !== this._hasAllDayClass($focusedCell);\r\n        return focusedCellGroupIndex !== cellGroupIndex || isDifferentTables ? $focusedCell : $cell\r\n    };\r\n    _proto2._getCellsBetween = function($first, $last, direction) {\r\n        var isAllDayTable = this._hasAllDayClass($last);\r\n        var $cells = this._getCells(isAllDayTable, direction);\r\n        var firstIndex = $cells.index($first);\r\n        var lastIndex = $cells.index($last);\r\n        if (firstIndex > lastIndex) {\r\n            var buffer = firstIndex;\r\n            firstIndex = lastIndex;\r\n            lastIndex = buffer\r\n        }\r\n        $cells = $cells.slice(firstIndex, lastIndex + 1);\r\n        if (this._getGroupCount() > 1) {\r\n            var result = [];\r\n            var focusedGroupIndex = this._getGroupIndexByCell($first);\r\n            (0, _iterator.each)($cells, function(_, cell) {\r\n                var groupIndex = this._getGroupIndexByCell((0, _renderer.default)(cell));\r\n                if (focusedGroupIndex === groupIndex) {\r\n                    result.push(cell)\r\n                }\r\n            }.bind(this));\r\n            $cells = (0, _renderer.default)(result)\r\n        }\r\n        return $cells\r\n    };\r\n    _proto2._hasAllDayClass = function($cell) {\r\n        return $cell.hasClass(ALL_DAY_TABLE_CELL_CLASS)\r\n    };\r\n    _proto2._getGroupIndexByCell = function($cell) {\r\n        if (this.isVirtualScrolling()) {\r\n            var _this$_getCoordinates4 = this._getCoordinatesByCell($cell),\r\n                rowIndex = _this$_getCoordinates4.rowIndex,\r\n                columnIndex = _this$_getCoordinates4.columnIndex;\r\n            var isAllDayCell = $cell.hasClass(ALL_DAY_TABLE_CELL_CLASS);\r\n            return this.viewDataProvider.getCellData(rowIndex, columnIndex, isAllDayCell).groupIndex\r\n        }\r\n        return this._groupedStrategy.getGroupIndexByCell($cell)\r\n    };\r\n    _proto2._toggleFocusedCellClass = function(isFocused, $element) {\r\n        var $focusTarget = $element && $element.length ? $element : this._focusTarget();\r\n        $focusTarget.toggleClass(DATE_TABLE_FOCUSED_CELL_CLASS, isFocused)\r\n    };\r\n    _proto2._releaseSelectedAndFocusedCells = function() {\r\n        this._releaseFocusedCell();\r\n        this._releaseSelectedCells();\r\n        this.option(\"selectedCellData\", [])\r\n    };\r\n    _proto2._releaseFocusedCell = function() {\r\n        var $cell = this._$focusedCell;\r\n        if ((0, _type.isDefined)($cell) && $cell.length) {\r\n            this._toggleFocusedCellClass(false, $cell);\r\n            this.setAria(\"label\", void 0, $cell)\r\n        }\r\n    };\r\n    _proto2._releaseSelectedCells = function() {\r\n        var $cells = (0, _renderer.default)(this._selectedCells);\r\n        if ((0, _type.isDefined)($cells) && $cells.length) {\r\n            this._toggleFocusClass(false, $cells);\r\n            this.setAria(\"label\", void 0, $cells)\r\n        }\r\n    };\r\n    _proto2._focusInHandler = function(e) {\r\n        if ((0, _renderer.default)(e.target).is(this._focusTarget()) && false !== this._isCellClick) {\r\n            delete this._isCellClick;\r\n            delete this._contextMenuHandled;\r\n            _WidgetObserver.prototype._focusInHandler.apply(this, arguments);\r\n            var $cell = this._getFocusedCell();\r\n            this._setSelectedAndFocusedCells($cell)\r\n        }\r\n    };\r\n    _proto2._focusOutHandler = function() {\r\n        _WidgetObserver.prototype._focusOutHandler.apply(this, arguments);\r\n        if (!this._contextMenuHandled) {\r\n            var _this$virtualSelectio;\r\n            this._releaseSelectedAndFocusedCells();\r\n            null === (_this$virtualSelectio = this.virtualSelectionState) || void 0 === _this$virtualSelectio ? void 0 : _this$virtualSelectio.releaseSelectedAndFocusedCells()\r\n        }\r\n    };\r\n    _proto2._focusTarget = function() {\r\n        return this.$element()\r\n    };\r\n    _proto2._getDefaultOptions = function() {\r\n        return (0, _extend.extend)(_WidgetObserver.prototype._getDefaultOptions.call(this), {\r\n            currentDate: new Date,\r\n            intervalCount: 1,\r\n            startDate: null,\r\n            firstDayOfWeek: void 0,\r\n            startDayHour: 0,\r\n            endDayHour: 24,\r\n            hoursInterval: .5,\r\n            activeStateEnabled: true,\r\n            hoverStateEnabled: true,\r\n            groups: [],\r\n            showAllDayPanel: true,\r\n            allDayExpanded: false,\r\n            onCellClick: null,\r\n            crossScrollingEnabled: false,\r\n            dataCellTemplate: null,\r\n            timeCellTemplate: null,\r\n            resourceCellTemplate: null,\r\n            dateCellTemplate: null,\r\n            allowMultipleCellSelection: true,\r\n            indicatorTime: new Date,\r\n            indicatorUpdateInterval: 5 * toMs(\"minute\"),\r\n            shadeUntilCurrentTime: true,\r\n            groupOrientation: \"horizontal\",\r\n            selectedCellData: [],\r\n            groupByDate: false,\r\n            scrolling: {\r\n                mode: \"standard\"\r\n            },\r\n            renovateRender: false,\r\n            height: void 0\r\n        })\r\n    };\r\n    _proto2._optionChanged = function(args) {\r\n        switch (args.name) {\r\n            case \"startDayHour\":\r\n            case \"endDayHour\":\r\n                this.invoke(\"validateDayHours\");\r\n                this._cleanWorkSpace();\r\n                break;\r\n            case \"dateCellTemplate\":\r\n            case \"resourceCellTemplate\":\r\n            case \"dataCellTemplate\":\r\n            case \"timeCellTemplate\":\r\n            case \"hoursInterval\":\r\n            case \"firstDayOfWeek\":\r\n            case \"currentDate\":\r\n            case \"startDate\":\r\n                this._cleanWorkSpace();\r\n                break;\r\n            case \"groups\":\r\n                this._cleanView();\r\n                this._disposeRenovatedComponents();\r\n                this._removeAllDayElements();\r\n                this._initGrouping();\r\n                this.repaint();\r\n                break;\r\n            case \"groupOrientation\":\r\n                this._initGroupedStrategy();\r\n                this._createAllDayPanelElements();\r\n                this._removeAllDayElements();\r\n                this._cleanWorkSpace();\r\n                this._toggleGroupByDateClass();\r\n                break;\r\n            case \"showAllDayPanel\":\r\n                if (this._isVerticalGroupedWorkSpace()) {\r\n                    this._cleanView();\r\n                    this._disposeRenovatedComponents();\r\n                    this._removeAllDayElements();\r\n                    this._initGrouping();\r\n                    this.repaint()\r\n                } else {\r\n                    this._toggleAllDayVisibility()\r\n                }\r\n                break;\r\n            case \"allDayExpanded\":\r\n                this._changeAllDayVisibility();\r\n                this._attachTablesEvents();\r\n                this.headerPanelOffsetRecalculate();\r\n                this._updateScrollable();\r\n                break;\r\n            case \"onSelectionChanged\":\r\n                this._createSelectionChangedAction();\r\n                break;\r\n            case \"onCellClick\":\r\n                this._createCellClickAction();\r\n                break;\r\n            case \"onCellContextMenu\":\r\n                this._attachContextMenuEvent();\r\n                break;\r\n            case \"intervalCount\":\r\n                this._cleanWorkSpace();\r\n                this._toggleWorkSpaceCountClass();\r\n                this._toggleFixedScrollableClass();\r\n                break;\r\n            case \"groupByDate\":\r\n                this._cleanWorkSpace();\r\n                this._toggleGroupByDateClass();\r\n                break;\r\n            case \"crossScrollingEnabled\":\r\n                this._toggleHorizontalScrollClass();\r\n                this._dateTableScrollable.option(this._dateTableScrollableConfig());\r\n                break;\r\n            case \"width\":\r\n                _WidgetObserver.prototype._optionChanged.call(this, args);\r\n                this._dimensionChanged();\r\n                break;\r\n            case \"allowMultipleCellSelection\":\r\n                break;\r\n            case \"selectedCellData\":\r\n                break;\r\n            case \"scrolling\":\r\n                this.option(\"renovateRender\", this._isVirtualModeOn());\r\n                break;\r\n            case \"renovateRender\":\r\n                this._disposeRenovatedComponents();\r\n                this.repaint();\r\n                break;\r\n            default:\r\n                _WidgetObserver.prototype._optionChanged.call(this, args)\r\n        }\r\n    };\r\n    _proto2._cleanWorkSpace = function() {\r\n        this._cleanView();\r\n        this._toggleGroupedClass();\r\n        this._toggleWorkSpaceWithOddCells();\r\n        this._renderView()\r\n    };\r\n    _proto2._init = function() {\r\n        this._headerSemaphore = new ScrollSemaphore;\r\n        this._sideBarSemaphore = new ScrollSemaphore;\r\n        this._dataTableSemaphore = new ScrollSemaphore;\r\n        this._viewDataProvider = null;\r\n        this._virtualSelectionState = null;\r\n        this._activeStateUnit = CELL_SELECTOR;\r\n        this._maxAllowedVerticalPosition = [];\r\n        this._maxAllowedPosition = [];\r\n        _WidgetObserver.prototype._init.call(this);\r\n        this._initGrouping();\r\n        this._toggleHorizontalScrollClass();\r\n        this._toggleWorkSpaceCountClass();\r\n        this._toggleGroupByDateClass();\r\n        this._toggleWorkSpaceWithOddCells();\r\n        this.$element().addClass(COMPONENT_CLASS).addClass(this._getElementClass())\r\n    };\r\n    _proto2._initGrouping = function() {\r\n        this._initGroupedStrategy();\r\n        this._toggleGroupingDirectionClass();\r\n        this._toggleGroupByDateClass()\r\n    };\r\n    _proto2._initGroupedStrategy = function() {\r\n        var strategyName = this.option(\"groups\").length ? this.option(\"groupOrientation\") : this._getDefaultGroupStrategy();\r\n        var Strategy = \"vertical\" === strategyName ? _uiSchedulerWork_spaceGroupedStrategy2.default : _uiSchedulerWork_spaceGroupedStrategy.default;\r\n        this._groupedStrategy = new Strategy(this)\r\n    };\r\n    _proto2._getDefaultGroupStrategy = function() {\r\n        return \"horizontal\"\r\n    };\r\n    _proto2._isVerticalGroupedWorkSpace = function() {\r\n        return !!this.option(\"groups\").length && \"vertical\" === this.option(\"groupOrientation\")\r\n    };\r\n    _proto2._isHorizontalGroupedWorkSpace = function() {\r\n        return !!this.option(\"groups\").length && \"horizontal\" === this.option(\"groupOrientation\")\r\n    };\r\n    _proto2._toggleHorizontalScrollClass = function() {\r\n        this.$element().toggleClass(WORKSPACE_WITH_BOTH_SCROLLS_CLASS, this.option(\"crossScrollingEnabled\"))\r\n    };\r\n    _proto2._toggleGroupByDateClass = function() {\r\n        this.$element().toggleClass(WORKSPACE_WITH_GROUP_BY_DATE_CLASS, this.isGroupedByDate())\r\n    };\r\n    _proto2._toggleWorkSpaceCountClass = function() {\r\n        this.$element().toggleClass(WORKSPACE_WITH_COUNT_CLASS, this._isWorkSpaceWithCount())\r\n    };\r\n    _proto2._isWorkSpaceWithCount = function() {\r\n        return this.option(\"intervalCount\") > 1\r\n    };\r\n    _proto2._toggleWorkSpaceWithOddCells = function() {\r\n        this.$element().toggleClass(WORKSPACE_WITH_ODD_CELLS_CLASS, this._isWorkspaceWithOddCells())\r\n    };\r\n    _proto2._isWorkspaceWithOddCells = function() {\r\n        return .5 === this.option(\"hoursInterval\") && !this.isVirtualScrolling()\r\n    };\r\n    _proto2._toggleGroupingDirectionClass = function() {\r\n        this.$element().toggleClass(VERTICAL_GROUPED_WORKSPACE_CLASS, this._isVerticalGroupedWorkSpace())\r\n    };\r\n    _proto2._getRealGroupOrientation = function() {\r\n        return this._isVerticalGroupedWorkSpace() ? \"vertical\" : \"horizontal\"\r\n    };\r\n    _proto2._getTimePanelClass = function() {\r\n        return TIME_PANEL_CLASS\r\n    };\r\n    _proto2._getDateTableClass = function() {\r\n        return DATE_TABLE_CLASS\r\n    };\r\n    _proto2._getDateTableRowClass = function() {\r\n        return DATE_TABLE_ROW_CLASS\r\n    };\r\n    _proto2._getDateTableCellClass = function(i, j) {\r\n        var cellClass = DATE_TABLE_CELL_CLASS + \" \" + HORIZONTAL_SIZES_CLASS + \" \" + VERTICAL_SIZES_CLASS;\r\n        return this._needApplyLastGroupCellClass() ? this._groupedStrategy.addAdditionalGroupCellClasses(cellClass, j + 1, i, j) : cellClass\r\n    };\r\n    _proto2._needApplyLastGroupCellClass = function() {\r\n        return true\r\n    };\r\n    _proto2._getGroupRowClass = function() {\r\n        return GROUP_ROW_CLASS\r\n    };\r\n    _proto2._getGroupHeaderClass = function(i) {\r\n        var cellClass = GROUP_HEADER_CLASS;\r\n        return this._groupedStrategy.addAdditionalGroupCellClasses(cellClass, i + 1)\r\n    };\r\n    _proto2._getGroupHeaderContentClass = function() {\r\n        return GROUP_HEADER_CONTENT_CLASS\r\n    };\r\n    _proto2._initWorkSpaceUnits = function() {\r\n        this._$headerPanel = (0, _renderer.default)(\"<table>\");\r\n        this._$thead = (0, _renderer.default)(\"<thead>\").appendTo(this._$headerPanel);\r\n        this._$fixedContainer = (0, _renderer.default)(\"<div>\").addClass(_constants.FIXED_CONTAINER_CLASS);\r\n        this._$allDayContainer = (0, _renderer.default)(\"<div>\").addClass(ALL_DAY_CONTAINER_CLASS);\r\n        this._initAllDayPanelElements();\r\n        if (this.isRenovatedRender()) {\r\n            this.createRAllDayPanelElements()\r\n        } else {\r\n            this._createAllDayPanelElements()\r\n        }\r\n        this._$timePanel = (0, _renderer.default)(\"<table>\").addClass(this._getTimePanelClass());\r\n        this._$dateTable = (0, _renderer.default)(\"<table>\");\r\n        this._$groupTable = (0, _renderer.default)(\"<div>\").addClass(WORKSPACE_VERTICAL_GROUP_TABLE_CLASS)\r\n    };\r\n    _proto2._initAllDayPanelElements = function() {\r\n        this._allDayTitles = [];\r\n        this._allDayTables = [];\r\n        this._allDayPanels = []\r\n    };\r\n    _proto2.createRAllDayPanelElements = function() {\r\n        this._$allDayPanel = (0, _renderer.default)(\"<div>\");\r\n        this._$allDayTitle = (0, _renderer.default)(\"<div>\").appendTo(this.$element())\r\n    };\r\n    _proto2._createAllDayPanelElements = function() {\r\n        var groupCount = this._getGroupCount();\r\n        if (this._isVerticalGroupedWorkSpace() && 0 !== groupCount) {\r\n            for (var i = 0; i < groupCount; i++) {\r\n                var $allDayTitle = (0, _renderer.default)(\"<div>\").addClass(ALL_DAY_TITLE_CLASS).text(_message.default.format(\"dxScheduler-allDay\"));\r\n                this._allDayTitles.push($allDayTitle);\r\n                this._$allDayTable = (0, _renderer.default)(\"<table>\");\r\n                this._allDayTables.push(this._$allDayTable);\r\n                this._$allDayPanel = (0, _renderer.default)(\"<div>\").addClass(ALL_DAY_PANEL_CLASS).append(this._$allDayTable);\r\n                this._allDayPanels.push(this._$allDayPanel)\r\n            }\r\n        } else {\r\n            this._$allDayTitle = (0, _renderer.default)(\"<div>\").addClass(ALL_DAY_TITLE_CLASS).text(_message.default.format(\"dxScheduler-allDay\")).appendTo(this.$element());\r\n            this._$allDayTable = (0, _renderer.default)(\"<table>\");\r\n            this._$allDayPanel = (0, _renderer.default)(\"<div>\").addClass(ALL_DAY_PANEL_CLASS).append(this._$allDayTable)\r\n        }\r\n    };\r\n    _proto2._initDateTableScrollable = function() {\r\n        var $dateTableScrollable = (0, _renderer.default)(\"<div>\").addClass(SCHEDULER_DATE_TABLE_SCROLLABLE_CLASS);\r\n        this._dateTableScrollable = this._createComponent($dateTableScrollable, _ui2.default, this._dateTableScrollableConfig())\r\n    };\r\n    _proto2._dateTableScrollableConfig = function() {\r\n        var config = {\r\n            useKeyboard: false,\r\n            bounceEnabled: false,\r\n            updateManually: true,\r\n            pushBackValue: 0\r\n        };\r\n        if (this._needCreateCrossScrolling()) {\r\n            config = (0, _extend.extend)(config, this._createCrossScrollingConfig())\r\n        }\r\n        return config\r\n    };\r\n    _proto2._createCrossScrollingConfig = function() {\r\n        var _this = this;\r\n        var config = {};\r\n        config.direction = \"both\";\r\n        config.onScroll = function(e) {\r\n            _this._dataTableSemaphore.take();\r\n            _this._sideBarSemaphore.isFree() && _this._sidebarScrollable && _this._sidebarScrollable.scrollTo({\r\n                top: e.scrollOffset.top\r\n            });\r\n            _this._headerSemaphore.isFree() && _this._headerScrollable && _this._headerScrollable.scrollTo({\r\n                left: e.scrollOffset.left\r\n            });\r\n            _this._dataTableSemaphore.release()\r\n        };\r\n        config.onEnd = function() {\r\n            _this.notifyObserver(\"updateResizableArea\", {})\r\n        };\r\n        return config\r\n    };\r\n    _proto2._createWorkSpaceElements = function() {\r\n        if (this.option(\"crossScrollingEnabled\")) {\r\n            this._createWorkSpaceScrollableElements()\r\n        } else {\r\n            this._createWorkSpaceStaticElements()\r\n        }\r\n    };\r\n    _proto2._createWorkSpaceStaticElements = function() {\r\n        if (this._isVerticalGroupedWorkSpace()) {\r\n            this._dateTableScrollable.$content().append(this._$allDayContainer, this._$groupTable, this._$timePanel, this._$dateTable);\r\n            this.$element().append(this._$fixedContainer, this._$headerPanel, this._dateTableScrollable.$element())\r\n        } else {\r\n            this._dateTableScrollable.$content().append(this._$timePanel, this._$dateTable);\r\n            this.$element().append(this._$fixedContainer, this._$headerPanel, this._$allDayContainer, this._$allDayPanel, this._dateTableScrollable.$element())\r\n        }\r\n    };\r\n    _proto2._createWorkSpaceScrollableElements = function() {\r\n        this.$element().append(this._$fixedContainer);\r\n        this._createHeaderScrollable();\r\n        this._createSidebarScrollable();\r\n        this.$element().append(this._dateTableScrollable.$element());\r\n        this._headerScrollable.$content().append(this._$headerPanel);\r\n        this._dateTableScrollable.$content().append(this._$dateTable);\r\n        if (this._isVerticalGroupedWorkSpace()) {\r\n            this._dateTableScrollable.$content().prepend(this._$allDayContainer);\r\n            this._sidebarScrollable.$content().append(this._$groupTable, this._$timePanel)\r\n        } else {\r\n            this._headerScrollable.$content().append(this._$allDayContainer, this._$allDayPanel)\r\n        }\r\n        this._sidebarScrollable.$content().append(this._$timePanel)\r\n    };\r\n    _proto2._createHeaderScrollable = function() {\r\n        var $headerScrollable = (0, _renderer.default)(\"<div>\").addClass(SCHEDULER_HEADER_SCROLLABLE_CLASS).appendTo(this.$element());\r\n        this._headerScrollable = this._createComponent($headerScrollable, _ui2.default, this._headerScrollableConfig())\r\n    };\r\n    _proto2._headerScrollableConfig = function() {\r\n        var _this2 = this;\r\n        var config = {\r\n            useKeyboard: false,\r\n            showScrollbar: false,\r\n            direction: \"horizontal\",\r\n            useNative: false,\r\n            updateManually: true,\r\n            bounceEnabled: false,\r\n            pushBackValue: 0,\r\n            onScroll: function(e) {\r\n                _this2._headerSemaphore.take();\r\n                _this2._dataTableSemaphore.isFree() && _this2._dateTableScrollable.scrollTo({\r\n                    left: e.scrollOffset.left\r\n                });\r\n                _this2._headerSemaphore.release()\r\n            }\r\n        };\r\n        return config\r\n    };\r\n    _proto2._createSidebarScrollable = function() {\r\n        var _this3 = this;\r\n        var $timePanelScrollable = (0, _renderer.default)(\"<div>\").addClass(SCHEDULER_SIDEBAR_SCROLLABLE_CLASS).appendTo(this.$element());\r\n        this._sidebarScrollable = this._createComponent($timePanelScrollable, _ui2.default, {\r\n            useKeyboard: false,\r\n            showScrollbar: false,\r\n            direction: \"vertical\",\r\n            useNative: false,\r\n            updateManually: true,\r\n            bounceEnabled: false,\r\n            pushBackValue: 0,\r\n            onScroll: function(e) {\r\n                _this3._sideBarSemaphore.take();\r\n                _this3._dataTableSemaphore.isFree() && _this3._dateTableScrollable.scrollTo({\r\n                    top: e.scrollOffset.top\r\n                });\r\n                _this3._sideBarSemaphore.release()\r\n            }\r\n        })\r\n    };\r\n    _proto2._visibilityChanged = function(visible) {\r\n        this.cache.clear();\r\n        if (visible && this._isVerticalGroupedWorkSpace()) {\r\n            this._setHorizontalGroupHeaderCellsHeight()\r\n        }\r\n        if (visible && this._needCreateCrossScrolling()) {\r\n            this._setTableSizes()\r\n        }\r\n    };\r\n    _proto2._attachTableClasses = function() {\r\n        this._addTableClass(this._$dateTable, this._getDateTableClass());\r\n        if (this._isVerticalGroupedWorkSpace()) {\r\n            var groupCount = this._getGroupCount();\r\n            for (var i = 0; i < groupCount; i++) {\r\n                this._addTableClass(this._allDayTables[i], ALL_DAY_TABLE_CLASS)\r\n            }\r\n        } else {\r\n            this._addTableClass(this._$allDayTable, ALL_DAY_TABLE_CLASS)\r\n        }\r\n    };\r\n    _proto2._attachHeaderTableClasses = function() {\r\n        this._addTableClass(this._$headerPanel, HEADER_PANEL_CLASS)\r\n    };\r\n    _proto2._addTableClass = function($el, className) {\r\n        $el && !$el.hasClass(className) && $el.addClass(className)\r\n    };\r\n    _proto2._setTableSizes = function() {\r\n        this._attachTableClasses();\r\n        var cellWidth = this.getCellWidth();\r\n        if (cellWidth < this.getCellMinWidth()) {\r\n            cellWidth = this.getCellMinWidth()\r\n        }\r\n        var minWidth = this.getWorkSpaceMinWidth();\r\n        var $headerCells = this._$headerPanel.find(\"tr\").last().find(\"th\");\r\n        var width = cellWidth * $headerCells.length;\r\n        if (width < minWidth) {\r\n            width = minWidth\r\n        }\r\n        this._$headerPanel.width(width);\r\n        this._$dateTable.width(width);\r\n        this._$allDayTable && this._$allDayTable.width(width);\r\n        this._attachHeaderTableClasses();\r\n        if (this._isVerticalGroupedWorkSpace()) {\r\n            this._setHorizontalGroupHeaderCellsHeight()\r\n        }\r\n    };\r\n    _proto2.getWorkSpaceMinWidth = function() {\r\n        return this._groupedStrategy.getWorkSpaceMinWidth()\r\n    };\r\n    _proto2._dimensionChanged = function() {\r\n        if (this.option(\"crossScrollingEnabled\")) {\r\n            this._setTableSizes()\r\n        }\r\n        this.headerPanelOffsetRecalculate();\r\n        this.cache.clear();\r\n        this._cleanAllowedPositions()\r\n    };\r\n    _proto2._needCreateCrossScrolling = function() {\r\n        return this.option(\"crossScrollingEnabled\")\r\n    };\r\n    _proto2._getElementClass = function() {\r\n        return (0, _common.noop)()\r\n    };\r\n    _proto2._getRowCount = function() {\r\n        return (0, _common.noop)()\r\n    };\r\n    _proto2._getRowCountWithAllDayRows = function() {\r\n        var allDayRowCount = this._isShowAllDayPanel() ? 1 : 0;\r\n        return this._getRowCount() + allDayRowCount\r\n    };\r\n    _proto2._getCellCount = function() {\r\n        return (0, _common.noop)()\r\n    };\r\n    _proto2._initMarkup = function() {\r\n        this.cache.clear();\r\n        this._initWorkSpaceUnits();\r\n        this._initDateTableScrollable();\r\n        this._createWorkSpaceElements();\r\n        this._initVirtualScrolling();\r\n        _WidgetObserver.prototype._initMarkup.call(this);\r\n        if (!this.option(\"crossScrollingEnabled\")) {\r\n            this._attachTableClasses();\r\n            this._attachHeaderTableClasses()\r\n        }\r\n        this._toggleGroupedClass();\r\n        this._toggleFixedScrollableClass();\r\n        this._renderView();\r\n        this._attachEvents();\r\n        this._setFocusOnCellByOption(this.option(\"selectedCellData\"))\r\n    };\r\n    _proto2.isRenovatedRender = function() {\r\n        return this.renovatedRenderSupported() && this.option(\"renovateRender\")\r\n    };\r\n    _proto2._isVirtualModeOn = function() {\r\n        return \"virtual\" === this.option(\"scrolling.mode\")\r\n    };\r\n    _proto2.isVirtualScrolling = function() {\r\n        return this.isRenovatedRender() && this._isVirtualModeOn()\r\n    };\r\n    _proto2._initVirtualScrolling = function() {\r\n        if (this.virtualScrollingDispatcher) {\r\n            this.virtualScrollingDispatcher.dispose();\r\n            this.virtualScrollingDispatcher = null\r\n        }\r\n        if (this.isVirtualScrolling()) {\r\n            this.virtualScrollingDispatcher = new _uiScheduler2.default(this)\r\n        }\r\n    };\r\n    _proto2._render = function() {\r\n        _WidgetObserver.prototype._render.call(this);\r\n        this._renderDateTimeIndication();\r\n        this._setIndicationUpdateInterval()\r\n    };\r\n    _proto2._toggleGroupedClass = function() {\r\n        this.$element().toggleClass(GROUPED_WORKSPACE_CLASS, this._getGroupCount() > 0)\r\n    };\r\n    _proto2._toggleFixedScrollableClass = function() {\r\n        return (0, _common.noop)()\r\n    };\r\n    _proto2._renderView = function() {\r\n        this._setFirstViewDate();\r\n        this._applyCellTemplates(this._renderGroupHeader());\r\n        this._renderDateHeader();\r\n        if (this.isRenovatedRender()) {\r\n            this.renderRWorkspace()\r\n        } else {\r\n            this._renderTimePanel();\r\n            this._renderGroupAllDayPanel();\r\n            this._renderDateTable();\r\n            this._renderAllDayPanel()\r\n        }\r\n        this._updateGroupTableHeight();\r\n        this._shader = new _uiSchedulerCurrent_time_shader.default(this)\r\n    };\r\n    _proto2.isGroupedAllDayPanel = function() {\r\n        return this._isShowAllDayPanel() && this._isVerticalGroupedWorkSpace()\r\n    };\r\n    _proto2.generateRenderOptions = function() {\r\n        var groupCount = this._getGroupCount();\r\n        var verticalGroupCount = !this._isVerticalGroupedWorkSpace() ? 1 : groupCount;\r\n        var horizontalGroupCount = this._isVerticalGroupedWorkSpace() ? 1 : groupCount;\r\n        var allDayElements = this._insertAllDayRowsIntoDateTable() ? this._allDayTitles : void 0;\r\n        var rowCountInGroup = this._getRowCount();\r\n        var cellCount = this._getTotalCellCount(groupCount);\r\n        var options = {\r\n            horizontalGroupCount: horizontalGroupCount,\r\n            verticalGroupCount: verticalGroupCount,\r\n            rowCountInGroup: rowCountInGroup,\r\n            cellCount: cellCount,\r\n            cellCountInGroupRow: this._getCellCount(),\r\n            cellDataGetters: [this._getCellData.bind(this)],\r\n            allDayElements: allDayElements,\r\n            startRowIndex: 0,\r\n            groupOrientation: this.option(\"groupOrientation\"),\r\n            nonVirtualRowCount: this._getRowCount(),\r\n            groupCount: groupCount\r\n        };\r\n        if (this.isVirtualScrolling()) {\r\n            (0, _extend.extend)(options, this.virtualScrollingDispatcher.renderState)\r\n        } else {\r\n            options.rowCount = this._getTotalRowCount(groupCount, this._isVerticalGroupedWorkSpace())\r\n        }\r\n        return options\r\n    };\r\n    _proto2.renovatedRenderSupported = function() {\r\n        return false\r\n    };\r\n    _proto2.renderRWorkspace = function() {\r\n        var _this$virtualScrollin2;\r\n        var isGenerateNewViewData = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : true;\r\n        this._cleanAllowedPositions();\r\n        this.viewDataProvider.update(isGenerateNewViewData);\r\n        this.renderRAllDayPanel();\r\n        this.renderRTimeTable();\r\n        this.renderRDateTable();\r\n        this.updateRSelection();\r\n        null === (_this$virtualScrollin2 = this.virtualScrollingDispatcher) || void 0 === _this$virtualScrollin2 ? void 0 : _this$virtualScrollin2.updateDimensions()\r\n    };\r\n    _proto2.renderRAllDayPanel = function() {\r\n        var visible = this._isShowAllDayPanel() && !this.isGroupedAllDayPanel();\r\n        if (visible) {\r\n            var options = {\r\n                viewData: this.viewDataProvider.viewData,\r\n                visible: visible,\r\n                dataCellTemplate: this.option(\"dataCellTemplate\")\r\n            };\r\n            this.renderRComponent(this._$allDayPanel, _layout.default, \"renovatedAllDayPanel\", options);\r\n            this.renderRComponent(this._$allDayTitle, _title.default, \"renovatedAllDayPanelTitle\", {\r\n                visible: visible\r\n            });\r\n            this._$allDayTable = this.renovatedAllDayPanel.$element().find(\".\".concat(ALL_DAY_TABLE_CLASS))\r\n        }\r\n        this._toggleAllDayVisibility()\r\n    };\r\n    _proto2.renderRTimeTable = function() {\r\n        this.renderRComponent(this._$timePanel, _layout2.default, \"renovatedTimePanel\", {\r\n            viewData: this.viewDataProvider.viewData,\r\n            timeCellTemplate: this.option(\"timeCellTemplate\")\r\n        })\r\n    };\r\n    _proto2.renderRDateTable = function() {};\r\n    _proto2.renderRComponent = function(parentElement, componentClass, componentName, viewModel) {\r\n        var component = this[componentName];\r\n        if (!component) {\r\n            var container = (0, _element.getPublicElement)(parentElement);\r\n            component = this._createComponent(container, componentClass, _objectSpread(_objectSpread({}, viewModel), {}, {\r\n                groupOrientation: this.option(\"groupOrientation\")\r\n            }));\r\n            this[componentName] = component\r\n        } else {\r\n            Object.getOwnPropertyNames(viewModel).forEach(function(optionName) {\r\n                component.option(optionName, viewModel[optionName])\r\n            })\r\n        }\r\n    };\r\n    _proto2.updateRSelection = function() {\r\n        var isVerticalGrouping = this._isVerticalGroupedWorkSpace();\r\n        var focusedCell = this.virtualSelectionState.getFocusedCell(isVerticalGrouping);\r\n        var selectedCells = this.virtualSelectionState.getSelectedCells();\r\n        if (focusedCell) {\r\n            var coordinates = focusedCell.coordinates,\r\n                cellData = focusedCell.cellData;\r\n            var $cell = !isVerticalGrouping && cellData.allDay ? this._dom_getAllDayPanelCell(coordinates.cellIndex) : this._dom_getDateCell(coordinates);\r\n            $cell && this._setFocusedCell($cell)\r\n        }\r\n        selectedCells && this._setSelectedCellsByCellData(selectedCells)\r\n    };\r\n    _proto2._updateGroupTableHeight = function() {\r\n        if (this._isVerticalGroupedWorkSpace() && (0, _window.hasWindow)()) {\r\n            this._setHorizontalGroupHeaderCellsHeight()\r\n        }\r\n    };\r\n    _proto2._renderDateTimeIndication = function() {\r\n        return (0, _common.noop)()\r\n    };\r\n    _proto2._setIndicationUpdateInterval = function() {\r\n        return (0, _common.noop)()\r\n    };\r\n    _proto2._refreshDateTimeIndication = function() {\r\n        return (0, _common.noop)()\r\n    };\r\n    _proto2._setFocusOnCellByOption = function(data) {\r\n        this._releaseSelectedAndFocusedCells();\r\n        this._setSelectedCellsByCellData(data)\r\n    };\r\n    _proto2._setSelectedCellsByCellData = function(data) {\r\n        var _data$, _this4 = this;\r\n        var cells = [];\r\n        var $cells = this._getAllCells(null === data || void 0 === data ? void 0 : null === (_data$ = data[0]) || void 0 === _data$ ? void 0 : _data$.allDay);\r\n        var cellsInRow = this._getTotalCellCount(this._getGroupCount());\r\n        data.forEach(function(cellData) {\r\n            var groups = cellData.groups,\r\n                startDate = cellData.startDate,\r\n                allDay = cellData.allDay;\r\n            var groupIndex = cellData.groupIndex;\r\n            if (!groupIndex) {\r\n                groupIndex = _this4._isGroupsSpecified(groups) ? _this4._getGroupIndexByResourceId(groups) : 0\r\n            }\r\n            var coordinates = _this4.isVirtualScrolling() ? _this4.viewDataProvider.findCellPositionInMap(groupIndex, startDate, allDay) : _this4.getCoordinatesByDate(startDate, groupIndex, allDay);\r\n            if (coordinates) {\r\n                var rowIndex = coordinates.rowIndex,\r\n                    cellIndex = coordinates.cellIndex;\r\n                var index = rowIndex * cellsInRow + cellIndex;\r\n                var $cell = $cells[index];\r\n                if ((0, _type.isDefined)($cell)) {\r\n                    _this4._toggleFocusClass(true, (0, _renderer.default)($cell));\r\n                    cells.push($cell)\r\n                }\r\n            }\r\n        });\r\n        this._selectedCells = cells\r\n    };\r\n    _proto2._isGroupsSpecified = function(resources) {\r\n        return this.option(\"groups\").length && resources\r\n    };\r\n    _proto2._getGroupIndexByResourceId = function(id) {\r\n        var groups = this.option(\"groups\");\r\n        var resourceTree = this.invoke(\"createResourcesTree\", groups);\r\n        if (!resourceTree.length) {\r\n            return 0\r\n        }\r\n        return this._getGroupIndexRecursively(resourceTree, id)\r\n    };\r\n    _proto2._getGroupIndexRecursively = function(resourceTree, id) {\r\n        var _this5 = this;\r\n        var currentKey = resourceTree[0].name;\r\n        var currentValue = id[currentKey];\r\n        return resourceTree.reduce(function(prevIndex, _ref2) {\r\n            var leafIndex = _ref2.leafIndex,\r\n                value = _ref2.value,\r\n                children = _ref2.children;\r\n            var areValuesEqual = currentValue === value;\r\n            if (areValuesEqual && void 0 !== leafIndex) {\r\n                return leafIndex\r\n            }\r\n            if (areValuesEqual) {\r\n                return _this5._getGroupIndexRecursively(children, id)\r\n            }\r\n            return prevIndex\r\n        }, 0)\r\n    };\r\n    _proto2._getCalculatedFirstDayOfWeek = function() {\r\n        var firstDayOfWeekOption = this._firstDayOfWeek();\r\n        var firstDayOfWeek = (0, _type.isDefined)(firstDayOfWeekOption) ? firstDayOfWeekOption : _date2.default.firstDayOfWeekIndex();\r\n        return firstDayOfWeek\r\n    };\r\n    _proto2._setFirstViewDate = function() {\r\n        var firstDayOfWeek = this._getCalculatedFirstDayOfWeek();\r\n        this._firstViewDate = _date.default.getFirstWeekDate(this._getViewStartByOptions(), firstDayOfWeek);\r\n        this._setStartDayHour(this._firstViewDate)\r\n    };\r\n    _proto2._getViewStartByOptions = function() {\r\n        if (!this.option(\"startDate\")) {\r\n            return this.option(\"currentDate\")\r\n        } else {\r\n            var startDate = _date.default.trimTime(this._getStartViewDate());\r\n            var currentDate = this.option(\"currentDate\");\r\n            var diff = startDate.getTime() <= currentDate.getTime() ? 1 : -1;\r\n            var endDate = new Date(startDate.getTime() + this._getIntervalDuration() * diff);\r\n            while (!this._dateInRange(currentDate, startDate, endDate, diff)) {\r\n                startDate = endDate;\r\n                endDate = new Date(startDate.getTime() + this._getIntervalDuration() * diff)\r\n            }\r\n            return diff > 0 ? startDate : endDate\r\n        }\r\n    };\r\n    _proto2._getHeaderDate = function() {\r\n        return this.getStartViewDate()\r\n    };\r\n    _proto2._getStartViewDate = function() {\r\n        return this.option(\"startDate\")\r\n    };\r\n    _proto2._dateInRange = function(date, startDate, endDate, diff) {\r\n        return diff > 0 ? _date.default.dateInRange(date, startDate, new Date(endDate.getTime() - 1)) : _date.default.dateInRange(date, endDate, startDate, \"date\")\r\n    };\r\n    _proto2._getIntervalDuration = function() {\r\n        return toMs(\"day\") * this.option(\"intervalCount\")\r\n    };\r\n    _proto2._setStartDayHour = function(date) {\r\n        var startDayHour = this.option(\"startDayHour\");\r\n        if ((0, _type.isDefined)(startDayHour)) {\r\n            date.setHours(startDayHour, startDayHour % 1 * 60, 0, 0)\r\n        }\r\n    };\r\n    _proto2._firstDayOfWeek = function() {\r\n        return this.option(\"firstDayOfWeek\")\r\n    };\r\n    _proto2._attachEvents = function() {\r\n        this._createSelectionChangedAction();\r\n        this._attachClickEvent();\r\n        this._attachContextMenuEvent()\r\n    };\r\n    _proto2._attachClickEvent = function() {\r\n        var that = this;\r\n        var pointerDownAction = this._createAction(function(e) {\r\n            that._pointerDownHandler(e.event)\r\n        });\r\n        this._createCellClickAction();\r\n        var cellSelector = \".\" + DATE_TABLE_CELL_CLASS + \",.\" + ALL_DAY_TABLE_CELL_CLASS;\r\n        var $element = this.$element();\r\n        _events_engine.default.off($element, SCHEDULER_WORKSPACE_DXPOINTERDOWN_EVENT_NAME);\r\n        _events_engine.default.off($element, SCHEDULER_CELL_DXCLICK_EVENT_NAME);\r\n        _events_engine.default.on($element, SCHEDULER_WORKSPACE_DXPOINTERDOWN_EVENT_NAME, function(e) {\r\n            if ((0, _index.isMouseEvent)(e) && e.which > 1) {\r\n                e.preventDefault();\r\n                return\r\n            }\r\n            pointerDownAction({\r\n                event: e\r\n            })\r\n        });\r\n        _events_engine.default.on($element, SCHEDULER_CELL_DXCLICK_EVENT_NAME, cellSelector, function(e) {\r\n            var $cell = (0, _renderer.default)(e.target);\r\n            that._cellClickAction({\r\n                event: e,\r\n                cellElement: (0, _element.getPublicElement)($cell),\r\n                cellData: that.getCellData($cell)\r\n            })\r\n        })\r\n    };\r\n    _proto2._createCellClickAction = function() {\r\n        var _this6 = this;\r\n        this._cellClickAction = this._createActionByOption(\"onCellClick\", {\r\n            afterExecute: function(e) {\r\n                return _this6._cellClickHandler(e.args[0].event)\r\n            }\r\n        })\r\n    };\r\n    _proto2._createSelectionChangedAction = function() {\r\n        this._selectionChangedAction = this._createActionByOption(\"onSelectionChanged\")\r\n    };\r\n    _proto2._cellClickHandler = function(e) {\r\n        var $target = (0, _renderer.default)(e.target);\r\n        if (this._showPopup && this._hasFocusClass($target)) {\r\n            delete this._showPopup;\r\n            this._showAddAppointmentPopup($target)\r\n        }\r\n    };\r\n    _proto2._pointerDownHandler = function(e) {\r\n        var $target = (0, _renderer.default)(e.target);\r\n        if (!$target.hasClass(DATE_TABLE_CELL_CLASS) && !$target.hasClass(ALL_DAY_TABLE_CELL_CLASS)) {\r\n            this._isCellClick = false;\r\n            return\r\n        }\r\n        this._isCellClick = true;\r\n        if ($target.hasClass(DATE_TABLE_FOCUSED_CELL_CLASS)) {\r\n            this._showPopup = true\r\n        } else {\r\n            this._setSelectedAndFocusedCells($target)\r\n        }\r\n    };\r\n    _proto2._showAddAppointmentPopup = function($cell) {\r\n        var firstCellData = this.getCellData($cell.first());\r\n        var lastCellData = this.getCellData($cell.last());\r\n        if (this.isVirtualScrolling()) {\r\n            var selectedCells = this.virtualSelectionState.getSelectedCells();\r\n            firstCellData = selectedCells[0];\r\n            lastCellData = selectedCells[selectedCells.length - 1]\r\n        }\r\n        var result = {\r\n            startDate: firstCellData.startDate,\r\n            endDate: lastCellData.endDate\r\n        };\r\n        if (void 0 !== lastCellData.allDay) {\r\n            result.allDay = lastCellData.allDay\r\n        }\r\n        this.invoke(\"showAddAppointmentPopup\", result, lastCellData.groups)\r\n    };\r\n    _proto2._attachContextMenuEvent = function() {\r\n        this._createContextMenuAction();\r\n        var cellSelector = \".\" + DATE_TABLE_CELL_CLASS + \",.\" + ALL_DAY_TABLE_CELL_CLASS;\r\n        var $element = this.$element();\r\n        var eventName = (0, _index.addNamespace)(_contextmenu.name, this.NAME);\r\n        _events_engine.default.off($element, eventName, cellSelector);\r\n        _events_engine.default.on($element, eventName, cellSelector, this._contextMenuHandler.bind(this))\r\n    };\r\n    _proto2._contextMenuHandler = function(e) {\r\n        var $cell = (0, _renderer.default)(e.target);\r\n        this._contextMenuAction({\r\n            event: e,\r\n            cellElement: (0, _element.getPublicElement)($cell),\r\n            cellData: this.getCellData($cell)\r\n        });\r\n        this._contextMenuHandled = true\r\n    };\r\n    _proto2._createContextMenuAction = function() {\r\n        this._contextMenuAction = this._createActionByOption(\"onCellContextMenu\")\r\n    };\r\n    _proto2._getGroupHeaderContainer = function() {\r\n        if (this._isVerticalGroupedWorkSpace()) {\r\n            return this._$groupTable\r\n        }\r\n        return this._$thead\r\n    };\r\n    _proto2._getDateHeaderContainer = function() {\r\n        return this._$thead\r\n    };\r\n    _proto2._renderGroupHeader = function() {\r\n        var $container = this._getGroupHeaderContainer();\r\n        var groupCount = this._getGroupCount();\r\n        var cellTemplates = [];\r\n        if (groupCount) {\r\n            var groupRows = this._makeGroupRows(this.option(\"groups\"), this.option(\"groupByDate\"));\r\n            this._attachGroupCountAttr(groupCount, groupRows);\r\n            $container.append(groupRows.elements);\r\n            cellTemplates = groupRows.cellTemplates\r\n        } else {\r\n            this._detachGroupCountAttr()\r\n        }\r\n        return cellTemplates\r\n    };\r\n    _proto2._applyCellTemplates = function(templates) {\r\n        templates.forEach(function(template) {\r\n            template()\r\n        })\r\n    };\r\n    _proto2._detachGroupCountAttr = function() {\r\n        var groupedAttr = this._groupedStrategy.getGroupCountAttr();\r\n        this.$element().removeAttr(groupedAttr.attr)\r\n    };\r\n    _proto2._attachGroupCountAttr = function(groupRowCount, groupRows) {\r\n        var groupedAttr = this._groupedStrategy.getGroupCountAttr(groupRowCount, groupRows);\r\n        this.$element().attr(groupedAttr.attr, groupedAttr.count)\r\n    };\r\n    _proto2.headerPanelOffsetRecalculate = function() {\r\n        if (!this.option(\"resourceCellTemplate\") && !this.option(\"dateCellTemplate\")) {\r\n            return\r\n        }\r\n        var headerPanelHeight = this.getHeaderPanelHeight();\r\n        var headerHeight = this.invoke(\"getHeaderHeight\");\r\n        var allDayPanelHeight = this.supportAllDayRow() && this._isShowAllDayPanel() ? this._groupedStrategy.getAllDayTableHeight() : 0;\r\n        headerPanelHeight && this._headerScrollable && this._headerScrollable.$element().height(headerPanelHeight + allDayPanelHeight);\r\n        headerPanelHeight && this._dateTableScrollable.$element().css({\r\n            paddingBottom: allDayPanelHeight + headerPanelHeight + \"px\",\r\n            marginBottom: -1 * (parseInt(headerPanelHeight, 10) + allDayPanelHeight) + \"px\"\r\n        });\r\n        headerPanelHeight && this._sidebarScrollable && this._sidebarScrollable.$element().css({\r\n            paddingBottom: allDayPanelHeight + headerPanelHeight + \"px\",\r\n            marginBottom: -1 * (parseInt(headerPanelHeight, 10) + allDayPanelHeight) + \"px\"\r\n        });\r\n        this._$allDayTitle && this._$allDayTitle.css(\"top\", headerHeight + headerPanelHeight + \"px\")\r\n    };\r\n    _proto2._makeGroupRows = function(groups, groupByDate) {\r\n        var tableCreatorStrategy = this._isVerticalGroupedWorkSpace() ? tableCreator.VERTICAL : tableCreator.HORIZONTAL;\r\n        return tableCreator.makeGroupedTable(tableCreatorStrategy, groups, {\r\n            groupHeaderRowClass: this._getGroupRowClass(),\r\n            groupRowClass: this._getGroupRowClass(),\r\n            groupHeaderClass: this._getGroupHeaderClass.bind(this),\r\n            groupHeaderContentClass: this._getGroupHeaderContentClass()\r\n        }, this._getCellCount() || 1, this.option(\"resourceCellTemplate\"), this._getGroupCount(), groupByDate)\r\n    };\r\n    _proto2._getDateHeaderTemplate = function() {\r\n        return this.option(\"dateCellTemplate\")\r\n    };\r\n    _proto2._renderDateHeader = function() {\r\n        var container = this._getDateHeaderContainer();\r\n        var $headerRow = (0, _renderer.default)(\"<tr>\").addClass(HEADER_ROW_CLASS);\r\n        var count = this._getCellCount();\r\n        var cellTemplate = this._getDateHeaderTemplate();\r\n        var repeatCount = this._getCalculateHeaderCellRepeatCount();\r\n        var templateCallbacks = [];\r\n        var groupByDate = this.isGroupedByDate();\r\n        if (!groupByDate) {\r\n            for (var rowIndex = 0; rowIndex < repeatCount; rowIndex++) {\r\n                for (var cellIndex = 0; cellIndex < count; cellIndex++) {\r\n                    var templateIndex = rowIndex * repeatCount + cellIndex;\r\n                    this._renderDateHeaderTemplate($headerRow, cellIndex, templateIndex, cellTemplate, templateCallbacks)\r\n                }\r\n            }\r\n            container.append($headerRow)\r\n        } else {\r\n            var colSpan = groupByDate ? this._getGroupCount() : 1;\r\n            for (var _cellIndex = 0; _cellIndex < count; _cellIndex++) {\r\n                var _templateIndex = _cellIndex * repeatCount;\r\n                var cellElement = this._renderDateHeaderTemplate($headerRow, _cellIndex, _templateIndex, cellTemplate, templateCallbacks);\r\n                cellElement.attr(\"colSpan\", colSpan)\r\n            }\r\n            container.prepend($headerRow)\r\n        }\r\n        this._applyCellTemplates(templateCallbacks);\r\n        return $headerRow\r\n    };\r\n    _proto2._renderDateHeaderTemplate = function(container, panelCellIndex, templateIndex, cellTemplate, templateCallbacks) {\r\n        var text = this._getHeaderText(panelCellIndex);\r\n        var $cell = (0, _renderer.default)(\"<th>\").addClass(this._getHeaderPanelCellClass(panelCellIndex)).attr(\"title\", text);\r\n        if (null !== cellTemplate && void 0 !== cellTemplate && cellTemplate.render) {\r\n            templateCallbacks.push(cellTemplate.render.bind(cellTemplate, {\r\n                model: {\r\n                    text: text,\r\n                    date: this._getDateByIndex(panelCellIndex)\r\n                },\r\n                index: templateIndex,\r\n                container: (0, _element.getPublicElement)($cell)\r\n            }))\r\n        } else {\r\n            $cell.text(text)\r\n        }\r\n        container.append($cell);\r\n        return $cell\r\n    };\r\n    _proto2._getHeaderPanelCellClass = function(i) {\r\n        var cellClass = HEADER_PANEL_CELL_CLASS + \" \" + HORIZONTAL_SIZES_CLASS;\r\n        return this._groupedStrategy.addAdditionalGroupCellClasses(cellClass, i + 1, void 0, void 0, this.isGroupedByDate())\r\n    };\r\n    _proto2._getCalculateHeaderCellRepeatCount = function() {\r\n        return this._groupedStrategy.calculateHeaderCellRepeatCount()\r\n    };\r\n    _proto2._renderAllDayPanel = function(index) {\r\n        var cellCount = this._getCellCount();\r\n        if (!this._isVerticalGroupedWorkSpace()) {\r\n            cellCount *= this._getGroupCount() || 1\r\n        }\r\n        var cellTemplates = this._renderTableBody({\r\n            container: this._allDayPanels.length ? (0, _element.getPublicElement)(this._allDayTables[index]) : (0, _element.getPublicElement)(this._$allDayTable),\r\n            rowCount: 1,\r\n            cellCount: cellCount,\r\n            cellClass: this._getAllDayPanelCellClass.bind(this),\r\n            rowClass: ALL_DAY_TABLE_ROW_CLASS,\r\n            cellTemplate: this.option(\"dataCellTemplate\"),\r\n            getCellData: this._getAllDayCellData.bind(this),\r\n            groupIndex: index\r\n        }, true);\r\n        this._toggleAllDayVisibility();\r\n        this._applyCellTemplates(cellTemplates)\r\n    };\r\n    _proto2._renderGroupAllDayPanel = function() {\r\n        if (this._isVerticalGroupedWorkSpace()) {\r\n            var groupCount = this._getGroupCount();\r\n            for (var i = 0; i < groupCount; i++) {\r\n                this._renderAllDayPanel(i)\r\n            }\r\n        }\r\n    };\r\n    _proto2._getAllDayPanelCellClass = function(i, j) {\r\n        var cellClass = ALL_DAY_TABLE_CELL_CLASS + \" \" + HORIZONTAL_SIZES_CLASS;\r\n        return this._groupedStrategy.addAdditionalGroupCellClasses(cellClass, j + 1)\r\n    };\r\n    _proto2._getAllDayCellData = function(cell, rowIndex, cellIndex, groupIndex) {\r\n        var startDate = this._getDateByCellIndexes(rowIndex, cellIndex);\r\n        var cellGroupIndex = groupIndex || this._getGroupIndex(rowIndex, cellIndex);\r\n        startDate = _date.default.trimTime(startDate);\r\n        var data = {\r\n            startDate: startDate,\r\n            endDate: startDate,\r\n            allDay: true,\r\n            groupIndex: cellGroupIndex\r\n        };\r\n        var groups = this._getCellGroups(cellGroupIndex);\r\n        if (groups.length) {\r\n            data.groups = {}\r\n        }\r\n        for (var i = 0; i < groups.length; i++) {\r\n            data.groups[groups[i].name] = groups[i].id\r\n        }\r\n        return {\r\n            key: CELL_DATA,\r\n            value: data\r\n        }\r\n    };\r\n    _proto2._toggleAllDayVisibility = function() {\r\n        var showAllDayPanel = this._isShowAllDayPanel();\r\n        this._$allDayPanel.toggle(showAllDayPanel);\r\n        this._$allDayTitle && this._$allDayTitle.toggleClass(ALL_DAY_TITLE_HIDDEN_CLASS, !showAllDayPanel);\r\n        this.$element().toggleClass(WORKSPACE_WITH_ALL_DAY_CLASS, showAllDayPanel);\r\n        this._changeAllDayVisibility();\r\n        this._updateScrollable()\r\n    };\r\n    _proto2._changeAllDayVisibility = function() {\r\n        this.$element().toggleClass(WORKSPACE_WITH_COLLAPSED_ALL_DAY_CLASS, !this.option(\"allDayExpanded\") && this._isShowAllDayPanel())\r\n    };\r\n    _proto2._updateScrollable = function() {\r\n        this._dateTableScrollable.update();\r\n        this._headerScrollable && this._headerScrollable.update();\r\n        this._sidebarScrollable && this._sidebarScrollable.update()\r\n    };\r\n    _proto2._renderTimePanel = function() {\r\n        var _this7 = this;\r\n        var repeatCount = this._groupedStrategy.calculateTimeCellRepeatCount();\r\n        var startViewDate = _utils.default.getDateWithoutTimezoneChange(this.getStartViewDate());\r\n        var _getTimeText = function(i) {\r\n            var index = i % _this7._getRowCount();\r\n            if (index % 2 === 0) {\r\n                return _date2.default.format(_this7._getTimeCellDateCore(startViewDate, i), \"shorttime\")\r\n            }\r\n            return \"\"\r\n        };\r\n        this._renderTableBody({\r\n            container: (0, _element.getPublicElement)(this._$timePanel),\r\n            rowCount: this._getTimePanelRowCount() * repeatCount,\r\n            cellCount: 1,\r\n            cellClass: this._getTimeCellClass.bind(this),\r\n            rowClass: TIME_PANEL_ROW_CLASS,\r\n            cellTemplate: this.option(\"timeCellTemplate\"),\r\n            getCellText: _getTimeText.bind(this),\r\n            getCellDate: this._getTimeCellDate.bind(this),\r\n            groupCount: this._getGroupCount(),\r\n            allDayElements: this._insertAllDayRowsIntoDateTable() ? this._allDayTitles : void 0\r\n        })\r\n    };\r\n    _proto2._getTimePanelRowCount = function() {\r\n        return this._getCellCountInDay()\r\n    };\r\n    _proto2._getCellCountInDay = function(skipRound) {\r\n        var result = this._calculateDayDuration() / this.option(\"hoursInterval\");\r\n        return skipRound ? result : Math.ceil(result)\r\n    };\r\n    _proto2._calculateDayDuration = function() {\r\n        return this.option(\"endDayHour\") - this.option(\"startDayHour\")\r\n    };\r\n    _proto2._getTimeCellClass = function(i) {\r\n        var cellClass = TIME_PANEL_CELL_CLASS + \" \" + VERTICAL_SIZES_CLASS;\r\n        return this._isVerticalGroupedWorkSpace() ? this._groupedStrategy.addAdditionalGroupCellClasses(cellClass, i, i) : cellClass\r\n    };\r\n    _proto2._getTimeCellDate = function(i) {\r\n        return this._getTimeCellDateCore(this.getStartViewDate(), i)\r\n    };\r\n    _proto2._getTimeCellDateCore = function(startViewDate, i) {\r\n        var result = new Date(startViewDate);\r\n        var timeCellDuration = Math.round(this.getCellDuration());\r\n        var cellCountInDay = this._getCellCountInDay(true);\r\n        result.setMilliseconds(result.getMilliseconds() + timeCellDuration * (i % cellCountInDay));\r\n        return result\r\n    };\r\n    _proto2._renderDateTable = function() {\r\n        var groupCount = this._getGroupCount();\r\n        this._renderTableBody({\r\n            container: (0, _element.getPublicElement)(this._$dateTable),\r\n            rowCount: this._getTotalRowCount(groupCount),\r\n            cellCount: this._getTotalCellCount(groupCount),\r\n            cellClass: this._getDateTableCellClass.bind(this),\r\n            rowClass: this._getDateTableRowClass(),\r\n            cellTemplate: this.option(\"dataCellTemplate\"),\r\n            getCellData: this._getCellData.bind(this),\r\n            allDayElements: this._insertAllDayRowsIntoDateTable() ? this._allDayPanels : void 0,\r\n            groupCount: groupCount,\r\n            groupByDate: this.option(\"groupByDate\")\r\n        })\r\n    };\r\n    _proto2._insertAllDayRowsIntoDateTable = function() {\r\n        return this._groupedStrategy.insertAllDayRowsIntoDateTable()\r\n    };\r\n    _proto2._getTotalCellCount = function(groupCount) {\r\n        return this._groupedStrategy.getTotalCellCount(groupCount)\r\n    };\r\n    _proto2._getTotalRowCount = function(groupCount, includeAllDayPanelRows) {\r\n        var result = this._groupedStrategy.getTotalRowCount(groupCount);\r\n        if (includeAllDayPanelRows && groupCount > 1 && this._isShowAllDayPanel()) {\r\n            result += groupCount\r\n        }\r\n        return result\r\n    };\r\n    _proto2._getCellData = function(cell, rowIndex, cellIndex) {\r\n        var data = this._prepareCellData(rowIndex, cellIndex, cell);\r\n        return {\r\n            key: CELL_DATA,\r\n            value: data\r\n        }\r\n    };\r\n    _proto2._prepareCellData = function(rowIndex, cellIndex) {\r\n        var startDate = this._getDateByCellIndexes(rowIndex, cellIndex);\r\n        var endDate = this.calculateEndDate(startDate);\r\n        var groupIndex = this._getGroupIndex(rowIndex, cellIndex);\r\n        var data = {\r\n            startDate: startDate,\r\n            endDate: endDate,\r\n            allDay: this._getTableAllDay(),\r\n            groupIndex: groupIndex\r\n        };\r\n        var groups = this._getCellGroups(groupIndex);\r\n        if (groups.length) {\r\n            data.groups = {}\r\n        }\r\n        for (var i = 0; i < groups.length; i++) {\r\n            data.groups[groups[i].name] = groups[i].id\r\n        }\r\n        return data\r\n    };\r\n    _proto2._getGroupIndex = function(rowIndex, cellIndex) {\r\n        return this._groupedStrategy.getGroupIndex(rowIndex, cellIndex)\r\n    };\r\n    _proto2._getTableAllDay = function() {\r\n        return false\r\n    };\r\n    _proto2.calculateEndDate = function(startDate) {\r\n        var result = new Date(startDate);\r\n        result.setMilliseconds(result.getMilliseconds() + Math.round(this._getInterval()));\r\n        return result\r\n    };\r\n    _proto2._getGroupCount = function() {\r\n        var groups = this.option(\"groups\");\r\n        var result = 0;\r\n        for (var i = 0, len = groups.length; i < len; i++) {\r\n            if (!i) {\r\n                result = groups[i].items.length\r\n            } else {\r\n                result *= groups[i].items.length\r\n            }\r\n        }\r\n        return result\r\n    };\r\n    _proto2._getPathToLeaf = function(leafIndex) {\r\n        var tree = this.invoke(\"createResourcesTree\", this.option(\"groups\"));\r\n\r\n        function findLeafByIndex(data, index) {\r\n            for (var i = 0; i < data.length; i++) {\r\n                if (data[i].leafIndex === index) {\r\n                    return data[i]\r\n                } else {\r\n                    var _leaf = findLeafByIndex(data[i].children, index);\r\n                    if (_leaf) {\r\n                        return _leaf\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function makeBranch(leaf, result) {\r\n            result = result || [];\r\n            result.push(leaf.value);\r\n            if (leaf.parent) {\r\n                makeBranch(leaf.parent, result)\r\n            }\r\n            return result\r\n        }\r\n        var leaf = findLeafByIndex(tree, leafIndex);\r\n        return makeBranch(leaf).reverse()\r\n    };\r\n    _proto2._getCellGroups = function(groupIndex) {\r\n        var result = [];\r\n        if (this._getGroupCount()) {\r\n            var groups = this.option(\"groups\");\r\n            if (groupIndex < 0) {\r\n                return\r\n            }\r\n            var path = this._getPathToLeaf(groupIndex);\r\n            for (var i = 0; i < groups.length; i++) {\r\n                result.push({\r\n                    name: groups[i].name,\r\n                    id: path[i]\r\n                })\r\n            }\r\n        }\r\n        return result\r\n    };\r\n    _proto2._attachTablesEvents = function() {\r\n        var _this8 = this;\r\n        var that = this;\r\n        var isPointerDown = false;\r\n        var cellHeight;\r\n        var cellWidth;\r\n        var $element = this.$element();\r\n        _events_engine.default.off($element, SCHEDULER_CELL_DXDRAGENTER_EVENT_NAME);\r\n        _events_engine.default.off($element, SCHEDULER_CELL_DXDRAGLEAVE_EVENT_NAME);\r\n        _events_engine.default.off($element, SCHEDULER_CELL_DXDROP_EVENT_NAME);\r\n        _events_engine.default.off($element, SCHEDULER_CELL_DXPOINTERMOVE_EVENT_NAME);\r\n        _events_engine.default.off($element, SCHEDULER_CELL_DXPOINTERDOWN_EVENT_NAME);\r\n        _events_engine.default.on($element, SCHEDULER_CELL_DXDRAGENTER_EVENT_NAME, SCHEDULER_DRAG_AND_DROP_SELECTOR, {\r\n            itemSizeFunc: function($element) {\r\n                if (!cellHeight) {\r\n                    cellHeight = (0, _position.getBoundingRect)($element.get(0)).height\r\n                }\r\n                if (!cellWidth) {\r\n                    cellWidth = (0, _position.getBoundingRect)($element.get(0)).width\r\n                }\r\n                return {\r\n                    width: cellWidth,\r\n                    height: cellHeight\r\n                }\r\n            },\r\n            checkDropTarget: function(target, event) {\r\n                return !_this8._isOutsideScrollable(target, event)\r\n            }\r\n        }, function(e) {\r\n            if (that._$currentTableTarget) {\r\n                that.removeDroppableCellClass(that._$currentTableTarget)\r\n            }\r\n            that._$currentTableTarget = (0, _renderer.default)(e.target);\r\n            that._$currentTableTarget.addClass(DATE_TABLE_DROPPABLE_CELL_CLASS)\r\n        });\r\n        _events_engine.default.on($element, SCHEDULER_CELL_DXDRAGLEAVE_EVENT_NAME, function(e) {\r\n            if (!$element.find((0, _renderer.default)(e.draggingElement)).length) {\r\n                that.removeDroppableCellClass()\r\n            }\r\n        });\r\n        _events_engine.default.on($element, SCHEDULER_CELL_DXDROP_EVENT_NAME, SCHEDULER_DRAG_AND_DROP_SELECTOR, function(e) {\r\n            that.removeDroppableCellClass((0, _renderer.default)(e.target));\r\n            cellHeight = 0;\r\n            cellWidth = 0\r\n        });\r\n        _events_engine.default.on($element, SCHEDULER_CELL_DXPOINTERDOWN_EVENT_NAME, SCHEDULER_DRAG_AND_DROP_SELECTOR, function(e) {\r\n            if ((0, _index.isMouseEvent)(e) && 1 === e.which) {\r\n                isPointerDown = true;\r\n                that.$element().addClass(WORKSPACE_WITH_MOUSE_SELECTION_CLASS);\r\n                _events_engine.default.off(_dom_adapter.default.getDocument(), SCHEDULER_CELL_DXPOINTERUP_EVENT_NAME);\r\n                _events_engine.default.on(_dom_adapter.default.getDocument(), SCHEDULER_CELL_DXPOINTERUP_EVENT_NAME, function() {\r\n                    isPointerDown = false;\r\n                    that.$element().removeClass(WORKSPACE_WITH_MOUSE_SELECTION_CLASS)\r\n                })\r\n            }\r\n        });\r\n        _events_engine.default.on($element, SCHEDULER_CELL_DXPOINTERMOVE_EVENT_NAME, SCHEDULER_DRAG_AND_DROP_SELECTOR, function(e) {\r\n            if (isPointerDown && that._dateTableScrollable && !that._dateTableScrollable.option(\"scrollByContent\")) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                that._moveToCell((0, _renderer.default)(e.target), true)\r\n            }\r\n        })\r\n    };\r\n    _proto2._getDateTables = function() {\r\n        return this._$dateTable.add(this._$allDayTable)\r\n    };\r\n    _proto2._getDateTable = function() {\r\n        return this._$dateTable\r\n    };\r\n    _proto2._getAllDayTable = function() {\r\n        return this._$allDayTable\r\n    };\r\n    _proto2._getInterval = function() {\r\n        if (void 0 === this._interval) {\r\n            this._interval = this.option(\"hoursInterval\") * HOUR_MS\r\n        }\r\n        return this._interval\r\n    };\r\n    _proto2._getHeaderText = function(headerIndex) {\r\n        return _date2.default.format(this._getDateForHeaderText(headerIndex), this._getFormat())\r\n    };\r\n    _proto2._getDateForHeaderText = function(index) {\r\n        return this._getDateByIndex(index)\r\n    };\r\n    _proto2._getDateByIndex = function() {\r\n        return abstract()\r\n    };\r\n    _proto2._getFormat = function() {\r\n        return abstract()\r\n    };\r\n    _proto2._calculateCellIndex = function(rowIndex, cellIndex) {\r\n        return this._groupedStrategy.calculateCellIndex(rowIndex, cellIndex)\r\n    };\r\n    _proto2._renderTableBody = function(options, delayCellTemplateRendering) {\r\n        var result = [];\r\n        if (!delayCellTemplateRendering) {\r\n            this._applyCellTemplates(tableCreator.makeTable(options))\r\n        } else {\r\n            result = tableCreator.makeTable(options)\r\n        }\r\n        return result\r\n    };\r\n    _proto2._removeAllDayElements = function() {\r\n        this._$allDayTable && this._$allDayTable.remove();\r\n        this._$allDayTitle && this._$allDayTitle.remove()\r\n    };\r\n    _proto2._cleanView = function() {\r\n        var _this$virtualSelectio2;\r\n        this.cache.clear();\r\n        this._cleanAllowedPositions();\r\n        null === (_this$virtualSelectio2 = this.virtualSelectionState) || void 0 === _this$virtualSelectio2 ? void 0 : _this$virtualSelectio2.releaseSelectedAndFocusedCells();\r\n        this._$thead.empty();\r\n        this._$dateTable.empty();\r\n        this._shader && this._shader.clean();\r\n        this._$timePanel.empty();\r\n        this._$allDayTable && this._$allDayTable.empty();\r\n        this._$groupTable.empty();\r\n        delete this._hiddenInterval;\r\n        delete this._interval\r\n    };\r\n    _proto2._clean = function() {\r\n        _events_engine.default.off(_dom_adapter.default.getDocument(), SCHEDULER_CELL_DXPOINTERUP_EVENT_NAME);\r\n        _WidgetObserver.prototype._clean.call(this)\r\n    };\r\n    _proto2._disposeRenovatedComponents = function() {\r\n        var _this$renovatedAllDay, _this$renovatedDateTa, _this$renovatedTimePa;\r\n        null === (_this$renovatedAllDay = this.renovatedAllDayPanel) || void 0 === _this$renovatedAllDay ? void 0 : _this$renovatedAllDay.dispose();\r\n        this.renovatedAllDayPanel = void 0;\r\n        null === (_this$renovatedDateTa = this.renovatedDateTable) || void 0 === _this$renovatedDateTa ? void 0 : _this$renovatedDateTa.dispose();\r\n        this.renovatedDateTable = void 0;\r\n        null === (_this$renovatedTimePa = this.renovatedTimePanel) || void 0 === _this$renovatedTimePa ? void 0 : _this$renovatedTimePa.dispose();\r\n        this.renovatedTimePanel = void 0\r\n    };\r\n    _proto2.getWorkArea = function() {\r\n        return this._dateTableScrollable.$content()\r\n    };\r\n    _proto2.getScrollable = function() {\r\n        return this._dateTableScrollable\r\n    };\r\n    _proto2.getScrollableScrollTop = function() {\r\n        return this._dateTableScrollable.scrollTop();\r\n    };\r\n    _proto2.getGroupedScrollableScrollTop = function(allDay) {\r\n        return this._groupedStrategy.getScrollableScrollTop(allDay)\r\n    };\r\n    _proto2.getScrollableScrollLeft = function() {\r\n        return this._dateTableScrollable.scrollLeft()\r\n    };\r\n    _proto2.getScrollableOuterWidth = function() {\r\n        return this._dateTableScrollable.scrollWidth()\r\n    };\r\n    _proto2.getScrollableContainer = function() {\r\n        return this._dateTableScrollable._container()\r\n    };\r\n    _proto2.getHeaderPanelHeight = function() {\r\n        return this._$headerPanel && this._$headerPanel.outerHeight(true)\r\n    };\r\n    _proto2.getTimePanelWidth = function() {\r\n        return this._$timePanel && (0, _position.getBoundingRect)(this._$timePanel.get(0)).width\r\n    };\r\n    _proto2.getGroupTableWidth = function() {\r\n        return this._$groupTable ? this._$groupTable.outerWidth() : 0\r\n    };\r\n    _proto2.getWorkSpaceLeftOffset = function() {\r\n        return this._groupedStrategy.getLeftOffset()\r\n    };\r\n    _proto2.getGroupedStrategy = function() {\r\n        return this._groupedStrategy\r\n    };\r\n    _proto2._getCellCoordinatesByIndex = function(index) {\r\n        var cellIndex = Math.floor(index / this._getRowCount());\r\n        var rowIndex = index - this._getRowCount() * cellIndex;\r\n        return {\r\n            cellIndex: cellIndex,\r\n            rowIndex: rowIndex\r\n        }\r\n    };\r\n    _proto2._getDateByCellIndexes = function(rowIndex, cellIndex, patchedIndexes) {\r\n        cellIndex = !patchedIndexes ? this._patchCellIndex(cellIndex) : cellIndex;\r\n        var firstViewDate = this.getStartViewDate();\r\n        var currentDate = new Date(firstViewDate.getTime() + this._getMillisecondsOffset(rowIndex, cellIndex) + this._getOffsetByCount(cellIndex));\r\n        currentDate.setTime(currentDate.getTime() + _date.default.getTimezonesDifference(firstViewDate, currentDate));\r\n        return currentDate\r\n    };\r\n    _proto2._patchCellIndex = function(cellIndex) {\r\n        if (this.isGroupedByDate()) {\r\n            cellIndex = Math.floor(cellIndex / this._getGroupCount())\r\n        }\r\n        return cellIndex\r\n    };\r\n    _proto2._getOffsetByCount = function() {\r\n        return 0\r\n    };\r\n    _proto2._getMillisecondsOffset = function(rowIndex, cellIndex) {\r\n        return this._getInterval() * this._calculateCellIndex(rowIndex, cellIndex) + this._calculateHiddenInterval(rowIndex, cellIndex)\r\n    };\r\n    _proto2._calculateHiddenInterval = function(rowIndex, cellIndex) {\r\n        var dayCount = cellIndex % this._getCellCount();\r\n        return dayCount * this._getHiddenInterval()\r\n    };\r\n    _proto2._getHiddenInterval = function() {\r\n        if (void 0 === this._hiddenInterval) {\r\n            this._hiddenInterval = DAY_MS - this.getVisibleDayDuration()\r\n        }\r\n        return this._hiddenInterval\r\n    };\r\n    _proto2._getIntervalBetween = function(currentDate, allDay) {\r\n        var firstViewDate = this.getStartViewDate();\r\n        var startDayTime = this.option(\"startDayHour\") * HOUR_MS;\r\n        var timeZoneOffset = _date.default.getTimezonesDifference(firstViewDate, currentDate);\r\n        var fullInterval = currentDate.getTime() - firstViewDate.getTime() - timeZoneOffset;\r\n        var days = this._getDaysOfInterval(fullInterval, startDayTime);\r\n        var weekendsCount = this._getWeekendsCount(days);\r\n        var result = (days - weekendsCount) * DAY_MS;\r\n        if (!allDay) {\r\n            result = fullInterval - days * this._getHiddenInterval() - weekendsCount * this.getVisibleDayDuration()\r\n        }\r\n        return result\r\n    };\r\n    _proto2._getWeekendsCount = function() {\r\n        return 0\r\n    };\r\n    _proto2._getDaysOfInterval = function(fullInterval, startDayTime) {\r\n        return Math.floor((fullInterval + startDayTime) / DAY_MS)\r\n    };\r\n    _proto2._getGroupIndexes = function(appointmentResources) {\r\n        var result = [];\r\n        if (this._isGroupsSpecified(appointmentResources)) {\r\n            var tree = this.invoke(\"createResourcesTree\", this.option(\"groups\"));\r\n            result = this.invoke(\"getResourceTreeLeaves\", tree, appointmentResources)\r\n        }\r\n        return result\r\n    };\r\n    _proto2._updateIndex = function(index) {\r\n        return index * this._getRowCount()\r\n    };\r\n    _proto2._getDroppableCell = function() {\r\n        return this._getDateTables().find(\".\" + DATE_TABLE_DROPPABLE_CELL_CLASS)\r\n    };\r\n    _proto2._getWorkSpaceWidth = function() {\r\n        var _this9 = this;\r\n        return this.cache.get(\"workspaceWidth\", function() {\r\n            if (_this9._needCreateCrossScrolling()) {\r\n                return (0, _position.getBoundingRect)(_this9._$dateTable.get(0)).width\r\n            }\r\n            return (0, _position.getBoundingRect)(_this9.$element().get(0)).width - _this9.getTimePanelWidth()\r\n        })\r\n    };\r\n    _proto2._getCellPositionByIndex = function(index, groupIndex, inAllDayRow) {\r\n        var cellCoordinates = this._getCellCoordinatesByIndex(index);\r\n        var $cell = this._getCellByCoordinates(cellCoordinates, groupIndex, inAllDayRow);\r\n        return this._getCellPositionWithCache($cell, cellCoordinates, groupIndex)\r\n    };\r\n    _proto2._getCellPositionWithCache = function($cell, cellCoordinates, groupIndex) {\r\n        var result = this._getCellPosition($cell);\r\n        this.setCellDataCache(cellCoordinates, groupIndex, $cell);\r\n        if (result) {\r\n            result.rowIndex = cellCoordinates.rowIndex;\r\n            result.cellIndex = cellCoordinates.cellIndex\r\n        }\r\n        return result\r\n    };\r\n    _proto2._getCellPosition = function($cell) {\r\n        var position = $cell.position();\r\n        if (this.option(\"rtlEnabled\")) {\r\n            position.left += (0, _position.getBoundingRect)($cell.get(0)).width\r\n        }\r\n        return position\r\n    };\r\n    _proto2._getCellByCoordinates = function(cellCoordinates, groupIndex, inAllDayRow) {\r\n        var indexes = this._groupedStrategy.prepareCellIndexes(cellCoordinates, groupIndex, inAllDayRow);\r\n        return this._dom_getDateCell(indexes)\r\n    };\r\n    _proto2._dom_getDateCell = function(position) {\r\n        return this._$dateTable.find(\"tr:not(.\".concat(VIRTUAL_ROW_CLASS, \")\")).eq(position.rowIndex).find(\"td\").eq(position.cellIndex)\r\n    };\r\n    _proto2._dom_getAllDayPanelCell = function(cellIndex) {\r\n        return this._$allDayPanel.find(\"tr\").eq(0).find(\"td\").eq(cellIndex)\r\n    };\r\n    _proto2._getCells = function(allDay, direction) {\r\n        var cellClass = allDay ? ALL_DAY_TABLE_CELL_CLASS : DATE_TABLE_CELL_CLASS;\r\n        if (\"vertical\" === direction) {\r\n            var result = [];\r\n            for (var i = 1;; i++) {\r\n                var cells = this.$element().find(\"tr .\".concat(cellClass, \":nth-child(\").concat(i, \")\"));\r\n                if (!cells.length) {\r\n                    break\r\n                }\r\n                result = result.concat(cells.toArray())\r\n            }\r\n            return (0, _renderer.default)(result)\r\n        } else {\r\n            return this.$element().find(\".\" + cellClass)\r\n        }\r\n    };\r\n    _proto2._getAllCells = function(allDay) {\r\n        if (this._isVerticalGroupedWorkSpace()) {\r\n            return this._$dateTable.find(\"td:not(.\".concat(VIRTUAL_CELL_CLASS, \")\"))\r\n        }\r\n        var cellClass = allDay && this.supportAllDayRow() ? ALL_DAY_TABLE_CELL_CLASS : DATE_TABLE_CELL_CLASS;\r\n        return this.$element().find(\".\" + cellClass)\r\n    };\r\n    _proto2._setHorizontalGroupHeaderCellsHeight = function() {\r\n        var height = (0, _position.getBoundingRect)(this._$dateTable.get(0)).height;\r\n        this._$groupTable.outerHeight(height)\r\n    };\r\n    _proto2._getDateTableBorder = function() {\r\n        return DATE_TABLE_CELL_BORDER\r\n    };\r\n    _proto2._getDateTableBorderOffset = function() {\r\n        return 2 * this._getDateTableBorder()\r\n    };\r\n    _proto2._getGroupHeaderCellsContent = function() {\r\n        return this.$element().find(\".\" + GROUP_HEADER_CONTENT_CLASS)\r\n    };\r\n    _proto2._getGroupHeaderCells = function() {\r\n        return this.$element().find(\".\" + GROUP_HEADER_CLASS)\r\n    };\r\n    _proto2._getScrollCoordinates = function(hours, minutes, date, groupIndex, allDay) {\r\n        var currentDate = date || new Date(this.option(\"currentDate\"));\r\n        var startDayHour = this.option(\"startDayHour\");\r\n        var endDayHour = this.option(\"endDayHour\");\r\n        if (hours < startDayHour) {\r\n            hours = startDayHour\r\n        }\r\n        if (hours >= endDayHour) {\r\n            hours = endDayHour - 1\r\n        }\r\n        currentDate.setHours(hours, minutes, 0, 0);\r\n        if (!this.isVirtualScrolling()) {\r\n            return this.getCoordinatesByDate(currentDate, groupIndex, allDay)\r\n        }\r\n        var cell = this.viewDataProvider.findGlobalCellPosition(currentDate, groupIndex, allDay);\r\n        var position = cell.position,\r\n            cellData = cell.cellData;\r\n        return this.virtualScrollingDispatcher.calculateCoordinatesByDataAndPosition(cellData, position, currentDate)\r\n    };\r\n    _proto2._isOutsideScrollable = function(target, event) {\r\n        var $dateTableScrollableElement = this._dateTableScrollable.$element();\r\n        var scrollableSize = (0, _position.getBoundingRect)($dateTableScrollableElement.get(0));\r\n        var window = (0, _window.getWindow)();\r\n        var isTargetInAllDayPanel = !(0, _renderer.default)(target).closest($dateTableScrollableElement).length;\r\n        var isOutsideHorizontalScrollable = event.pageX < scrollableSize.left || event.pageX > scrollableSize.left + scrollableSize.width + (window.scrollX || 0);\r\n        var isOutsideVerticalScrollable = event.pageY < scrollableSize.top || event.pageY > scrollableSize.top + scrollableSize.height + (window.scrollY || 0);\r\n        if (isTargetInAllDayPanel && !isOutsideHorizontalScrollable) {\r\n            return false\r\n        }\r\n        return isOutsideVerticalScrollable || isOutsideHorizontalScrollable\r\n    };\r\n    _proto2.setCellDataCache = function(cellCoordinates, groupIndex, $cell) {\r\n        var key = JSON.stringify({\r\n            rowIndex: cellCoordinates.rowIndex,\r\n            cellIndex: cellCoordinates.cellIndex,\r\n            groupIndex: groupIndex\r\n        });\r\n        this.cache.set(key, this.getCellData($cell))\r\n    };\r\n    _proto2.setCellDataCacheAlias = function(appointment, geometry) {\r\n        var key = JSON.stringify({\r\n            rowIndex: appointment.rowIndex,\r\n            cellIndex: appointment.cellIndex,\r\n            groupIndex: appointment.groupIndex\r\n        });\r\n        var aliasKey = JSON.stringify({\r\n            top: geometry.top,\r\n            left: geometry.left\r\n        });\r\n        this.cache.set(aliasKey, this.cache.get(key))\r\n    };\r\n    _proto2._cleanAllowedPositions = function() {\r\n        this._maxAllowedVerticalPosition = [];\r\n        this._maxAllowedPosition = []\r\n    };\r\n    _proto2.supportAllDayRow = function() {\r\n        return true\r\n    };\r\n    _proto2.keepOriginalHours = function() {\r\n        return false\r\n    };\r\n    _proto2.getSelectedCellData = function() {\r\n        if (this.isVirtualScrolling()) {\r\n            return this.virtualSelectionState.getSelectedCells()\r\n        }\r\n        var $focusedCells = this._getAllFocusedCells();\r\n        var result = [];\r\n        if ($focusedCells.length > 1) {\r\n            result = this._getMultipleCellsData($focusedCells)\r\n        } else {\r\n            var data = this.getCellData((0, _renderer.default)($focusedCells[0]));\r\n            data && result.push(data)\r\n        }\r\n        return result\r\n    };\r\n    _proto2._getMultipleCellsData = function($cells) {\r\n        var data = [];\r\n        for (var i = 0; i < $cells.length; i++) {\r\n            data.push(this.getCellData((0, _renderer.default)($cells[i])))\r\n        }\r\n        return data\r\n    };\r\n    _proto2.getCellData = function($cell) {\r\n        var data;\r\n        var currentCell = $cell[0];\r\n        if (currentCell) {\r\n            if (this.isRenovatedRender()) {\r\n                data = this._getCellDataInRenovatedView($cell)\r\n            } else {\r\n                data = (0, _element_data.data)(currentCell, CELL_DATA)\r\n            }\r\n        }\r\n        return (0, _extend.extend)(true, {}, data)\r\n    };\r\n    _proto2._getVirtualRowOffset = function() {\r\n        return this.isVirtualScrolling() ? this.virtualScrollingDispatcher.verticalScrollingState.virtualItemSizeBefore : 0\r\n    };\r\n    _proto2._getCellDataInRenovatedView = function($cell) {\r\n        var rowIndex = $cell.parent().index();\r\n        if (this.isVirtualScrolling()) {\r\n            rowIndex -= this.virtualScrollingDispatcher.topVirtualRowsCount\r\n        }\r\n        var columnIndex = $cell.index();\r\n        var viewDataProvider = this.viewDataProvider;\r\n        var isAllDayCell = this._hasAllDayClass($cell);\r\n        var cellData = viewDataProvider.getCellData(rowIndex, columnIndex, isAllDayCell);\r\n        return cellData ? {\r\n            startDate: cellData.startDate,\r\n            endDate: cellData.endDate,\r\n            groups: cellData.groups,\r\n            groupIndex: cellData.groupIndex,\r\n            allDay: cellData.allDay,\r\n            text: cellData.text\r\n        } : void 0\r\n    };\r\n    _proto2._getHorizontalMax = function(groupIndex) {\r\n        groupIndex = this.isGroupedByDate() ? this._getGroupCount() - 1 : groupIndex;\r\n        return this._groupedStrategy.getHorizontalMax(groupIndex)\r\n    };\r\n    _proto2.getCoordinatesByDate = function(date, groupIndex, inAllDayRow) {\r\n        groupIndex = groupIndex || 0;\r\n        var position;\r\n        var shouldFindPositionByViewData = this.isVirtualScrolling() && (!inAllDayRow || this._isVerticalGroupedWorkSpace());\r\n        if (shouldFindPositionByViewData) {\r\n            var positionByMap = this.viewDataProvider.findCellPositionInMap(groupIndex, date, inAllDayRow);\r\n            if (!positionByMap) {\r\n                return\r\n            }\r\n            var $cell = this._dom_getDateCell(positionByMap);\r\n            position = this._getCellPositionWithCache($cell, positionByMap, groupIndex)\r\n        } else {\r\n            position = this.calculateCellPositionByView(date, groupIndex, inAllDayRow)\r\n        }\r\n        var shift = this.getPositionShift(inAllDayRow ? 0 : this.getTimeShift(date), inAllDayRow);\r\n        var horizontalHMax = this._getHorizontalMax(groupIndex, date);\r\n        if (!position) {\r\n            throw _ui.default.Error(\"E1039\")\r\n        }\r\n        return {\r\n            cellPosition: position.left + shift.cellPosition,\r\n            top: position.top + shift.top,\r\n            left: position.left + shift.left,\r\n            rowIndex: position.rowIndex,\r\n            cellIndex: position.cellIndex,\r\n            hMax: horizontalHMax,\r\n            vMax: this.getVerticalMax(groupIndex),\r\n            groupIndex: groupIndex\r\n        }\r\n    };\r\n    _proto2.calculateCellPositionByView = function(date, groupIndex, inAllDayRow) {\r\n        var index = this.getCellIndexByDate(date, inAllDayRow);\r\n        var position = this._getCellPositionByIndex(index, groupIndex, inAllDayRow);\r\n        if (position) {\r\n            position.top -= this._getVirtualRowOffset()\r\n        }\r\n        return position\r\n    };\r\n    _proto2.getVerticalMax = function(groupIndex) {\r\n        return this._groupedStrategy.getVerticalMax(groupIndex)\r\n    };\r\n    _proto2._getOffsetByAllDayPanel = function(groupIndex) {\r\n        return this._groupedStrategy._getOffsetByAllDayPanel(groupIndex)\r\n    };\r\n    _proto2._getGroupTop = function(groupIndex) {\r\n        return this._groupedStrategy._getGroupTop(groupIndex)\r\n    };\r\n    _proto2.isGroupedByDate = function() {\r\n        return this.option(\"groupByDate\") && this._isHorizontalGroupedWorkSpace() && this._getGroupCount() > 0\r\n    };\r\n    _proto2.getCellIndexByDate = function(date, inAllDayRow) {\r\n        var timeInterval = inAllDayRow ? 864e5 : this._getInterval();\r\n        var dateTimeStamp = this._getIntervalBetween(date, inAllDayRow);\r\n        var index = Math.floor(dateTimeStamp / timeInterval);\r\n        if (inAllDayRow) {\r\n            index = this._updateIndex(index)\r\n        }\r\n        if (index < 0) {\r\n            index = 0\r\n        }\r\n        return index\r\n    };\r\n    _proto2.getPositionShift = function(timeShift, isAllDay) {\r\n        return {\r\n            top: timeShift * this.getCellHeight(),\r\n            left: 0,\r\n            cellPosition: 0\r\n        }\r\n    };\r\n    _proto2.getTimeShift = function(date) {\r\n        var currentDayStart = new Date(date);\r\n        var cellDuration = this.getCellDuration();\r\n        var currentDayEndHour = new Date(new Date(date).setHours(this.option(\"endDayHour\"), 0, 0));\r\n        if (date.getTime() <= currentDayEndHour.getTime()) {\r\n            currentDayStart.setHours(this.option(\"startDayHour\"), 0, 0, 0)\r\n        }\r\n        var timeZoneDifference = _date.default.getTimezonesDifference(date, currentDayStart);\r\n        var currentDateTime = date.getTime();\r\n        var currentDayStartTime = currentDayStart.getTime();\r\n        var minTime = this._firstViewDate.getTime();\r\n        return currentDateTime > minTime ? (currentDateTime - currentDayStartTime + timeZoneDifference) % cellDuration / cellDuration : 0\r\n    };\r\n    _proto2._isSkippedData = function() {\r\n        return false\r\n    };\r\n    _proto2.getCoordinatesByDateInGroup = function(startDate, appointmentResources, inAllDayRow) {\r\n        var _this10 = this;\r\n        var result = [];\r\n        if (this._isSkippedData(startDate)) {\r\n            return result\r\n        }\r\n        var groupIndices = this._getGroupCount() ? this._getGroupIndexes(appointmentResources) : [0];\r\n        groupIndices.forEach(function(groupIndex) {\r\n            var coordinates = _this10.getCoordinatesByDate(startDate, groupIndex, inAllDayRow);\r\n            coordinates && result.push(coordinates)\r\n        });\r\n        return result\r\n    };\r\n    _proto2.getDroppableCellIndex = function() {\r\n        var $droppableCell = this._getDroppableCell();\r\n        var $row = $droppableCell.parent();\r\n        var rowIndex = $row.index();\r\n        return rowIndex * $row.find(\"td\").length + $droppableCell.index()\r\n    };\r\n    _proto2.getDataByDroppableCell = function() {\r\n        var cellData = this.getCellData((0, _renderer.default)(this._getDroppableCell()));\r\n        var allDay = cellData.allDay;\r\n        var startDate = cellData.startDate;\r\n        var endDate = startDate && this.invoke(\"calculateAppointmentEndDate\", allDay, startDate);\r\n        return {\r\n            startDate: startDate,\r\n            endDate: endDate,\r\n            allDay: allDay,\r\n            groups: cellData.groups\r\n        }\r\n    };\r\n    _proto2.getDateRange = function() {\r\n        return [this.getStartViewDate(), this.getEndViewDateByEndDayHour()]\r\n    };\r\n    _proto2.getCellWidth = function() {\r\n        var _this11 = this;\r\n        return this.cache.get(\"cellWidth\", function() {\r\n            var cell = _this11._getCells().first().get(0);\r\n            return cell && (0, _position.getBoundingRect)(cell).width\r\n        })\r\n    };\r\n    _proto2.getCellMinWidth = function() {\r\n        return DATE_TABLE_MIN_CELL_WIDTH\r\n    };\r\n    _proto2.getRoundedCellWidth = function(groupIndex, startIndex, cellCount) {\r\n        if (groupIndex < 0) {\r\n            return 0\r\n        }\r\n        var $row = this.$element().find(\".\" + this._getDateTableRowClass()).eq(0);\r\n        var width = 0;\r\n        var $cells = $row.find(\".\" + DATE_TABLE_CELL_CLASS);\r\n        var totalCellCount = this._getCellCount() * groupIndex;\r\n        cellCount = cellCount || this._getCellCount();\r\n        if (!(0, _type.isDefined)(startIndex)) {\r\n            startIndex = totalCellCount\r\n        }\r\n        for (var i = startIndex; i < totalCellCount + cellCount; i++) {\r\n            width += (0, _position.getBoundingRect)((0, _renderer.default)($cells).eq(i).get(0)).width\r\n        }\r\n        return width / (totalCellCount + cellCount - startIndex)\r\n    };\r\n    _proto2.getCellHeight = function() {\r\n        var _this12 = this;\r\n        var useCache = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : true;\r\n        var callbackResult = function() {\r\n            var cell = _this12._getCells().first().get(0);\r\n            return cell && (0, _position.getBoundingRect)(cell).height\r\n        };\r\n        return useCache ? this.cache.get(\"cellHeight\", callbackResult) : callbackResult()\r\n    };\r\n    _proto2.getAllDayHeight = function() {\r\n        var cell = this._getCells(true).first().get(0);\r\n        return this._isShowAllDayPanel() ? cell && (0, _position.getBoundingRect)(cell).height || 0 : 0\r\n    };\r\n    _proto2.getAllDayOffset = function() {\r\n        return this._groupedStrategy.getAllDayOffset()\r\n    };\r\n    _proto2.getMaxAllowedPosition = function() {\r\n        if (0 === this._maxAllowedPosition.length) {\r\n            var isRtl = this.option(\"rtlEnabled\");\r\n            this._maxAllowedPosition = [];\r\n            this._$dateTable.find(\"tr:not(.\".concat(VIRTUAL_ROW_CLASS, \")\")).first().find(\"td:nth-child(\".concat(this._getCellCount(), \"n)\")).each(function(_, cell) {\r\n                var maxPosition = (0, _renderer.default)(cell).position().left;\r\n                if (!isRtl) {\r\n                    maxPosition += (0, _position.getBoundingRect)(cell).width\r\n                }\r\n                this._maxAllowedPosition.push(Math.round(maxPosition))\r\n            }.bind(this))\r\n        }\r\n        return this._maxAllowedPosition\r\n    };\r\n    _proto2.getMaxAllowedVerticalPosition = function(groupIndex) {\r\n        if (this.isVirtualScrolling()) {\r\n            return this.getMaxAllowedVerticalPositionVirtual(groupIndex)\r\n        }\r\n        return this.getMaxAllowedVerticalPositionStandard(groupIndex)\r\n    };\r\n    _proto2.getMaxAllowedVerticalPositionStandard = function(groupIndex) {\r\n        var _this13 = this;\r\n        if (0 === this._maxAllowedVerticalPosition.length) {\r\n            var rowCount = this._getRowCount();\r\n            this._$dateTable.find(\"tr:not(.\".concat(VIRTUAL_ROW_CLASS, \"):nth-child(\").concat(rowCount, \"n)\")).each(function(_, row) {\r\n                var maxPosition = (0, _renderer.default)(row).position().top + (0, _position.getBoundingRect)(row).height;\r\n                _this13._maxAllowedVerticalPosition.push(Math.round(maxPosition))\r\n            })\r\n        }\r\n        return this._maxAllowedVerticalPosition[groupIndex]\r\n    };\r\n    _proto2.getMaxAllowedVerticalPositionVirtual = function(groupIndex) {\r\n        var _this14 = this;\r\n        var getMaxPosition = function(rowIndex) {\r\n            var row = _this14._$dateTable.find(\"tr:not(.\".concat(VIRTUAL_ROW_CLASS, \")\")).get(rowIndex);\r\n            var maxPosition = (0, _renderer.default)(row).position().top + (0, _position.getBoundingRect)(row).height;\r\n            if (_this14.isGroupedAllDayPanel()) {\r\n                maxPosition -= (groupIndex + 1) * _this14.getAllDayHeight()\r\n            }\r\n            _this14._maxAllowedVerticalPosition[groupIndex] = Math.round(maxPosition)\r\n        };\r\n        if (!this._maxAllowedVerticalPosition[groupIndex]) {\r\n            var _this$viewDataProvide = this.viewDataProvider.getLasGroupCellPosition(groupIndex),\r\n                rowIndex = _this$viewDataProvide.rowIndex;\r\n            getMaxPosition(rowIndex)\r\n        }\r\n        return this._maxAllowedVerticalPosition[groupIndex]\r\n    };\r\n    _proto2.getFixedContainer = function() {\r\n        return this._$fixedContainer\r\n    };\r\n    _proto2.getAllDayContainer = function() {\r\n        return this._$allDayContainer\r\n    };\r\n    _proto2.getCellIndexByCoordinates = function(coordinates, allDay) {\r\n        var cellCount = this._getTotalCellCount(this._getGroupCount());\r\n        var cellWidth = Math.floor(this._getWorkSpaceWidth() / cellCount);\r\n        var cellHeight = allDay ? this.getAllDayHeight() : this.getCellHeight();\r\n        var leftOffset = this._isRTL() || this.option(\"crossScrollingEnabled\") ? 0 : this.getWorkSpaceLeftOffset();\r\n        var topIndex = Math.floor(Math.floor(coordinates.top) / Math.floor(cellHeight));\r\n        var leftIndex = Math.floor((coordinates.left + 5 - leftOffset) / cellWidth);\r\n        if (this._isRTL()) {\r\n            leftIndex = cellCount - leftIndex - 1\r\n        }\r\n        return cellCount * topIndex + leftIndex\r\n    };\r\n    _proto2.getStartViewDate = function() {\r\n        return this._firstViewDate\r\n    };\r\n    _proto2.getEndViewDate = function() {\r\n        var dateOfLastViewCell = this.getDateOfLastViewCell();\r\n        var endDateOfLastViewCell = this.calculateEndViewDate(dateOfLastViewCell);\r\n        return this._adjustEndViewDateByDaylightDiff(dateOfLastViewCell, endDateOfLastViewCell)\r\n    };\r\n    _proto2.getEndViewDateByEndDayHour = function() {\r\n        var dateOfLastViewCell = this.getDateOfLastViewCell();\r\n        var endTime = _date.default.dateTimeFromDecimal(this.option(\"endDayHour\"));\r\n        var endDateOfLastViewCell = new Date(dateOfLastViewCell.setHours(endTime.hours, endTime.minutes));\r\n        return this._adjustEndViewDateByDaylightDiff(dateOfLastViewCell, endDateOfLastViewCell)\r\n    };\r\n    _proto2.calculateEndViewDate = function(dateOfLastViewCell) {\r\n        return new Date(dateOfLastViewCell.getTime() + this.getCellDuration())\r\n    };\r\n    _proto2._adjustEndViewDateByDaylightDiff = function(startDate, endDate) {\r\n        var daylightDiff = _utils.default.getDaylightOffsetInMs(startDate, endDate);\r\n        var endDateOfLastViewCell = new Date(endDate.getTime() - daylightDiff);\r\n        return new Date(endDateOfLastViewCell.getTime() - this._getEndViewDateTimeDiff())\r\n    };\r\n    _proto2._getEndViewDateTimeDiff = function() {\r\n        return toMs(\"minute\")\r\n    };\r\n    _proto2.getDateOfLastViewCell = function() {\r\n        var rowIndex = this._getRowCount() - 1;\r\n        var cellIndex = this._getCellCount();\r\n        if (this.isGroupedByDate()) {\r\n            cellIndex = cellIndex * this._getGroupCount() - 1\r\n        } else {\r\n            cellIndex -= 1\r\n        }\r\n        return this._getDateByCellIndexes(rowIndex, cellIndex, true)\r\n    };\r\n    _proto2.getCellDuration = function() {\r\n        return 36e5 * this.option(\"hoursInterval\")\r\n    };\r\n    _proto2.getIntervalDuration = function(allDay) {\r\n        return allDay ? toMs(\"day\") : this.getCellDuration()\r\n    };\r\n    _proto2.getVisibleDayDuration = function() {\r\n        return this.option(\"hoursInterval\") * this._getCellCountInDay() * HOUR_MS\r\n    };\r\n    _proto2.getGroupBounds = function(coordinates) {\r\n        var cellCount = this._getCellCount();\r\n        var $cells = this._getCells();\r\n        var cellWidth = this.getCellWidth();\r\n        var result = this._groupedStrategy.getGroupBoundsOffset(cellCount, $cells, cellWidth, coordinates);\r\n        if (this._isRTL()) {\r\n            var startOffset = result.left;\r\n            result.left = result.right - 2 * cellWidth;\r\n            result.right = startOffset + 2 * cellWidth\r\n        }\r\n        return result\r\n    };\r\n    _proto2.needRecalculateResizableArea = function() {\r\n        return this._isVerticalGroupedWorkSpace() && 0 !== this.getScrollable().scrollTop()\r\n    };\r\n    _proto2.getCellDataByCoordinates = function(coordinates, allDay) {\r\n        var _this15 = this;\r\n        var key = JSON.stringify({\r\n            top: coordinates.top,\r\n            left: coordinates.left\r\n        });\r\n        return this.cache.get(key, function() {\r\n            var $cells = _this15._getCells(allDay);\r\n            var cellIndex = _this15.getCellIndexByCoordinates(coordinates, allDay);\r\n            var $cell = $cells.eq(cellIndex);\r\n            return _this15.getCellData($cell)\r\n        })\r\n    };\r\n    _proto2.getVisibleBounds = function() {\r\n        var result = {};\r\n        var $scrollable = this.getScrollable().$element();\r\n        var cellHeight = this.getCellHeight();\r\n        var scrolledCellCount = this.getScrollableScrollTop() / cellHeight;\r\n        var totalCellCount = scrolledCellCount + $scrollable.height() / cellHeight;\r\n        result.top = {\r\n            hours: Math.floor(scrolledCellCount * this.option(\"hoursInterval\")) + this.option(\"startDayHour\"),\r\n            minutes: scrolledCellCount % 2 ? 30 : 0\r\n        };\r\n        result.bottom = {\r\n            hours: Math.floor(totalCellCount * this.option(\"hoursInterval\")) + this.option(\"startDayHour\"),\r\n            minutes: Math.floor(totalCellCount) % 2 ? 30 : 0\r\n        };\r\n        return result\r\n    };\r\n    _proto2.updateScrollPosition = function(date, groups) {\r\n        var allDay = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : false;\r\n        var scheduler = this.option(\"observer\");\r\n        var newDate = scheduler.timeZoneCalculator.createDate(date, {\r\n            path: \"toGrid\"\r\n        });\r\n        var inAllDayRow = allDay && this.supportAllDayRow() && this._isShowAllDayPanel();\r\n        if (this.needUpdateScrollPosition(newDate, groups, inAllDayRow)) {\r\n            this.scrollTo(newDate, groups, inAllDayRow, false)\r\n        }\r\n    };\r\n    _proto2.needUpdateScrollPosition = function(date, groups, inAllDayRow) {\r\n        var _this16 = this;\r\n        var cells = this._getCellsInViewport(inAllDayRow);\r\n        var groupIndex = this._isGroupsSpecified(groups) ? this._getGroupIndexByResourceId(groups) : 0;\r\n        var time = date.getTime();\r\n        var trimmedTime = _date.default.trimTime(date).getTime();\r\n        return cells.reduce(function(currentResult, cell) {\r\n            var _this16$getCellData = _this16.getCellData(cell),\r\n                cellStartDate = _this16$getCellData.startDate,\r\n                cellEndDate = _this16$getCellData.endDate,\r\n                cellGroupIndex = _this16$getCellData.groupIndex;\r\n            var cellStartTime = cellStartDate.getTime();\r\n            var cellEndTime = cellEndDate.getTime();\r\n            if ((!inAllDayRow && cellStartTime <= time && time < cellEndTime || inAllDayRow && trimmedTime === cellStartTime) && groupIndex === cellGroupIndex) {\r\n                return false\r\n            }\r\n            return currentResult\r\n        }, true)\r\n    };\r\n    _proto2._getCellsInViewport = function(inAllDayRow) {\r\n        var $scrollable = this.getScrollable().$element();\r\n        var cellHeight = this.getCellHeight();\r\n        var cellWidth = this.getCellWidth();\r\n        var totalColumnCount = this._getTotalCellCount(this._getGroupCount());\r\n        var scrollableScrollTop = this.getScrollableScrollTop();\r\n        var scrollableScrollLeft = this.getScrollableScrollLeft();\r\n        var fullScrolledRowCount = scrollableScrollTop / cellHeight;\r\n        if (this.isVirtualScrolling()) {\r\n            fullScrolledRowCount -= this.virtualScrollingDispatcher.topVirtualRowsCount\r\n        }\r\n        var scrolledRowCount = Math.floor(fullScrolledRowCount);\r\n        if (scrollableScrollTop % cellHeight !== 0) {\r\n            scrolledRowCount += 1\r\n        }\r\n        var fullScrolledColumnCount = scrollableScrollLeft / cellWidth;\r\n        var scrolledColumnCount = Math.floor(fullScrolledColumnCount);\r\n        if (scrollableScrollLeft % cellWidth !== 0) {\r\n            scrolledColumnCount += 1\r\n        }\r\n        var rowCount = Math.floor(fullScrolledRowCount + $scrollable.height() / cellHeight);\r\n        var columnCount = Math.floor(fullScrolledColumnCount + $scrollable.width() / cellWidth);\r\n        var $cells = this._getAllCells(inAllDayRow);\r\n        var result = [];\r\n        $cells.each(function(index) {\r\n            var $cell = (0, _renderer.default)(this);\r\n            var columnIndex = index % totalColumnCount;\r\n            var rowIndex = index / totalColumnCount;\r\n            if (scrolledColumnCount <= columnIndex && columnIndex < columnCount && scrolledRowCount <= rowIndex && rowIndex < rowCount) {\r\n                result.push($cell)\r\n            }\r\n        });\r\n        return result\r\n    };\r\n    _proto2.getGroupWidth = function(groupIndex) {\r\n        var result = this._getCellCount() * this.getCellWidth();\r\n        var position = this.getMaxAllowedPosition();\r\n        var currentPosition = position[groupIndex];\r\n        if (position.length && currentPosition) {\r\n            if (this._isRTL()) {\r\n                result = currentPosition - position[groupIndex + 1]\r\n            } else {\r\n                if (0 === groupIndex) {\r\n                    result = currentPosition\r\n                } else {\r\n                    result = currentPosition - position[groupIndex - 1]\r\n                }\r\n            }\r\n        }\r\n        return result\r\n    };\r\n    _proto2.scrollToTime = function(hours, minutes, date) {\r\n        if (!this._isValidScrollDate(date)) {\r\n            return\r\n        }\r\n        var coordinates = this._getScrollCoordinates(hours, minutes, date);\r\n        var scrollable = this.getScrollable();\r\n        scrollable.scrollBy({\r\n            top: coordinates.top - scrollable.scrollTop(),\r\n            left: 0\r\n        })\r\n    };\r\n    _proto2.scrollTo = function(date, groups) {\r\n        var allDay = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : false;\r\n        var throwWarning = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : true;\r\n        if (!this._isValidScrollDate(date, throwWarning)) {\r\n            return\r\n        }\r\n        var groupIndex = this._getGroupCount() && groups ? this._getGroupIndexByResourceId(groups) : 0;\r\n        var isScrollToAllDay = allDay && this.supportAllDayRow() && this._isShowAllDayPanel();\r\n        var coordinates = this._getScrollCoordinates(date.getHours(), date.getMinutes(), date, groupIndex, isScrollToAllDay);\r\n        var scrollable = this.getScrollable();\r\n        var $scrollable = scrollable.$element();\r\n        var offset = this.option(\"rtlEnabled\") ? this.getCellWidth() : 0;\r\n        var scrollableHeight = $scrollable.height();\r\n        var scrollableWidth = $scrollable.width();\r\n        var cellWidth = this.getCellWidth();\r\n        var cellHeight = this.getCellHeight();\r\n        var xShift = (scrollableWidth - cellWidth) / 2;\r\n        var yShift = (scrollableHeight - cellHeight) / 2;\r\n        var left = coordinates.left - scrollable.scrollLeft() - xShift - offset;\r\n        var top = coordinates.top - scrollable.scrollTop() - yShift;\r\n        if (isScrollToAllDay && !this._isVerticalGroupedWorkSpace()) {\r\n            top = 0\r\n        }\r\n        if (this.option(\"templatesRenderAsynchronously\")) {\r\n            setTimeout(function() {\r\n                scrollable.scrollBy({\r\n                    left: left,\r\n                    top: top\r\n                })\r\n            })\r\n        } else {\r\n            scrollable.scrollBy({\r\n                left: left,\r\n                top: top\r\n            })\r\n        }\r\n    };\r\n    _proto2._isValidScrollDate = function(date) {\r\n        var throwWarning = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : true;\r\n        var min = this.getStartViewDate();\r\n        var max = this.getEndViewDate();\r\n        if (date < min || date > max) {\r\n            throwWarning && _ui.default.log(\"W1008\", date);\r\n            return false\r\n        }\r\n        return true\r\n    };\r\n    _proto2.getDistanceBetweenCells = function(startIndex, endIndex) {\r\n        var result = 0;\r\n        this.$element().find(\".\" + this._getDateTableRowClass()).first().find(\".\" + DATE_TABLE_CELL_CLASS).each(function(index) {\r\n            if (index < startIndex || index > endIndex) {\r\n                return true\r\n            }\r\n            result += (0, _position.getBoundingRect)(this).width\r\n        });\r\n        return result\r\n    };\r\n    _proto2.needApplyCollectorOffset = function() {\r\n        return false\r\n    };\r\n    _proto2.initDragBehavior = function(scheduler) {\r\n        if (!this.dragBehavior && scheduler) {\r\n            this.dragBehavior = new _appointmentDragBehavior.default(scheduler);\r\n            this._createDragBehavior(this.getWorkArea());\r\n            this._createDragBehavior(this.getAllDayContainer());\r\n            this._createDragBehavior(this._$allDayPanel)\r\n        }\r\n    };\r\n    _proto2._createDragBehavior = function($element) {\r\n        var getItemData = function(itemElement, appointments) {\r\n            return appointments._getItemData(itemElement)\r\n        };\r\n        var getItemSettings = function($itemElement) {\r\n            return $itemElement.data(_constants.APPOINTMENT_SETTINGS_KEY)\r\n        };\r\n        this._createDragBehaviorBase($element, getItemData, getItemSettings)\r\n    };\r\n    _proto2._createDragBehaviorBase = function($element, getItemData, getItemSettings) {\r\n        var _this17 = this;\r\n        var _ref3 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {},\r\n            isSetCursorOffset = _ref3.isSetCursorOffset,\r\n            restOptions = _objectWithoutProperties(_ref3, [\"isSetCursorOffset\"]);\r\n        var dragElement;\r\n        var dragBehavior = this.dragBehavior;\r\n        var itemData;\r\n        dragBehavior.addTo($element, _objectSpread({\r\n            container: this.$element().find(\".\".concat(_constants.FIXED_CONTAINER_CLASS)),\r\n            dragTemplate: function() {\r\n                return dragElement\r\n            },\r\n            onDragStart: function(e) {\r\n                var canceled = e.cancel;\r\n                var event = e.event;\r\n                var $itemElement = (0, _renderer.default)(e.itemElement);\r\n                var appointments = e.component._appointments;\r\n                itemData = getItemData(e.itemElement, appointments);\r\n                var settings = getItemSettings($itemElement, e);\r\n                if (itemData && !itemData.disabled) {\r\n                    event.data = event.data || {};\r\n                    if (!canceled) {\r\n                        if (!settings.isCompact) {\r\n                            dragBehavior.updateDragSource(itemData, settings)\r\n                        }\r\n                        dragElement = _this17._createDragAppointment(itemData, settings, appointments);\r\n                        event.data.itemElement = dragElement;\r\n                        event.data.initialPosition = (0, _translator.locate)((0, _renderer.default)(dragElement));\r\n                        event.data.itemData = itemData;\r\n                        event.data.itemSettings = settings;\r\n                        dragBehavior.onDragStart(event.data);\r\n                        (0, _translator.resetPosition)((0, _renderer.default)(dragElement))\r\n                    }\r\n                }\r\n            },\r\n            onDragEnd: function(e) {\r\n                var _dragElement;\r\n                if (itemData && !itemData.disabled) {\r\n                    dragBehavior.onDragEnd(e)\r\n                }\r\n                null === (_dragElement = dragElement) || void 0 === _dragElement ? void 0 : _dragElement.remove()\r\n            },\r\n            cursorOffset: isSetCursorOffset ? function() {\r\n                var $dragElement = (0, _renderer.default)(dragElement);\r\n                return {\r\n                    x: $dragElement.width() / 2,\r\n                    y: $dragElement.height() / 2\r\n                }\r\n            } : void 0\r\n        }, restOptions))\r\n    };\r\n    _proto2._createDragAppointment = function(itemData, settings, appointments) {\r\n        var appointmentIndex = appointments.option(\"items\").length;\r\n        settings.isCompact = false;\r\n        settings.virtual = false;\r\n        var items = appointments._renderItem(appointmentIndex, {\r\n            itemData: itemData,\r\n            settings: [settings]\r\n        });\r\n        return items[0]\r\n    };\r\n    _proto2._isApplyCompactAppointmentOffset = function() {\r\n        return this._supportCompactDropDownAppointments()\r\n    };\r\n    _proto2._supportCompactDropDownAppointments = function() {\r\n        return true\r\n    };\r\n    _proto2._formatWeekday = function(date) {\r\n        return formatWeekday(date)\r\n    };\r\n    _proto2._formatWeekdayAndDay = function(date) {\r\n        return formatWeekday(date) + \" \" + _date2.default.format(date, \"day\")\r\n    };\r\n    _proto2.removeDroppableCellClass = function($cellElement) {\r\n        ($cellElement || this._getDroppableCell()).removeClass(DATE_TABLE_DROPPABLE_CELL_CLASS)\r\n    };\r\n    _proto2._getCoordinatesByCell = function($cell) {\r\n        var columnIndex = $cell.index();\r\n        var rowIndex = $cell.parent().index();\r\n        var isAllDayCell = this._hasAllDayClass($cell);\r\n        var isVerticalGrouping = this._isVerticalGroupedWorkSpace();\r\n        if (this.isVirtualScrolling() && !(isAllDayCell && !isVerticalGrouping)) {\r\n            rowIndex -= this.virtualScrollingDispatcher.topVirtualRowsCount\r\n        }\r\n        return {\r\n            rowIndex: rowIndex,\r\n            columnIndex: columnIndex\r\n        }\r\n    };\r\n    _proto2._isShowAllDayPanel = function() {\r\n        return this.option(\"showAllDayPanel\")\r\n    };\r\n    _proto2.updateAppointments = function() {\r\n        var _this$dragBehavior;\r\n        this.invoke(\"renderAppointments\");\r\n        null === (_this$dragBehavior = this.dragBehavior) || void 0 === _this$dragBehavior ? void 0 : _this$dragBehavior.updateDragSource()\r\n    };\r\n    _createClass(SchedulerWorkSpace, [{\r\n        key: \"viewDataProvider\",\r\n        get: function() {\r\n            if (!this._viewDataProvider) {\r\n                this._viewDataProvider = new _view_data_provider.default(this)\r\n            }\r\n            return this._viewDataProvider\r\n        }\r\n    }, {\r\n        key: \"cache\",\r\n        get: function() {\r\n            return _cache.cache\r\n        }\r\n    }, {\r\n        key: \"virtualSelectionState\",\r\n        get: function() {\r\n            if (!this._virtualSelectionState) {\r\n                this._virtualSelectionState = new _virtual_selection_state.default(this.viewDataProvider)\r\n            }\r\n            return this._virtualSelectionState\r\n        }\r\n    }]);\r\n    return SchedulerWorkSpace\r\n}(_widgetObserver.default);\r\nvar _default = SchedulerWorkSpace;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}