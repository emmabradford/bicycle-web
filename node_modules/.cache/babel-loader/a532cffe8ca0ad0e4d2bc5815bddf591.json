{"ast":null,"code":"/**\r\n * DevExtreme (ui/scheduler/recurrence.js)\r\n * Version: 20.2.7\r\n * Build date: Thu Apr 22 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.getRecurrenceProcessor = getRecurrenceProcessor;\n\nvar _errors = _interopRequireDefault(require(\"../../core/errors\"));\n\nvar _iterator = require(\"../../core/utils/iterator\");\n\nvar _array = require(\"../../core/utils/array\");\n\nvar _rrule = require(\"rrule\");\n\nvar _date = _interopRequireDefault(require(\"../../core/utils/date\"));\n\nvar _utilsTimeZone = _interopRequireDefault(require(\"./utils.timeZone.js\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) {\n    return;\n  }\n\n  if (\"string\" === typeof o) {\n    return _arrayLikeToArray(o, minLen);\n  }\n\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n\n  if (\"Object\" === n && o.constructor) {\n    n = o.constructor.name;\n  }\n\n  if (\"Map\" === n || \"Set\" === n) {\n    return Array.from(o);\n  }\n\n  if (\"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) {\n    return _arrayLikeToArray(o, minLen);\n  }\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (null == len || len > arr.length) {\n    len = arr.length;\n  }\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr && (\"undefined\" !== typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]);\n\n  if (null == _i) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) {\n        break;\n      }\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && null != _i.return) {\n        _i.return();\n      }\n    } finally {\n      if (_d) {\n        throw _e;\n      }\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) {\n    return arr;\n  }\n}\n\nvar toMs = _date.default.dateToMilliseconds;\nvar ruleNames = [\"freq\", \"interval\", \"byday\", \"byweekno\", \"byyearday\", \"bymonth\", \"bymonthday\", \"count\", \"until\", \"byhour\", \"byminute\", \"bysecond\", \"bysetpos\", \"wkst\"];\nvar freqNames = [\"DAILY\", \"WEEKLY\", \"MONTHLY\", \"YEARLY\", \"SECONDLY\", \"MINUTELY\", \"HOURLY\"];\nvar days = {\n  SU: 0,\n  MO: 1,\n  TU: 2,\n  WE: 3,\n  TH: 4,\n  FR: 5,\n  SA: 6\n};\nvar loggedWarnings = [];\nvar recurrence = null;\n\nfunction getRecurrenceProcessor() {\n  if (!recurrence) {\n    recurrence = new RecurrenceProcessor();\n  }\n\n  return recurrence;\n}\n\nvar RecurrenceProcessor = function () {\n  function RecurrenceProcessor() {\n    this.rRule = null;\n    this.rRuleSet = null;\n    this.validator = new RecurrenceValidator();\n  }\n\n  var _proto = RecurrenceProcessor.prototype;\n\n  _proto.generateDates = function (options) {\n    var result = [];\n    var recurrenceRule = this.evalRecurrenceRule(options.rule);\n    var rule = recurrenceRule.rule;\n\n    if (!recurrenceRule.isValid || !rule.freq) {\n      return result;\n    }\n\n    var startDateUtc = _utilsTimeZone.default.createUTCDateWithLocalOffset(options.start);\n\n    var endDateUtc = _utilsTimeZone.default.createUTCDateWithLocalOffset(options.end);\n\n    var minDateUtc = _utilsTimeZone.default.createUTCDateWithLocalOffset(options.min);\n\n    var maxDateUtc = _utilsTimeZone.default.createUTCDateWithLocalOffset(options.max);\n\n    var duration = endDateUtc ? endDateUtc.getTime() - startDateUtc.getTime() : 0;\n\n    this._initializeRRule(options, startDateUtc);\n\n    var minTime = minDateUtc.getTime();\n\n    var leftBorder = this._getLeftBorder(options, minDateUtc, duration);\n\n    this.rRuleSet.between(leftBorder, maxDateUtc, true).forEach(function (date) {\n      var endAppointmentTime = date.getTime() + duration;\n\n      if (endAppointmentTime >= minTime) {\n        var correctDate = _utilsTimeZone.default.createDateFromUTCWithLocalOffset(date);\n\n        result.push(correctDate);\n      }\n    });\n    return result;\n  };\n\n  _proto.hasRecurrence = function (options) {\n    return !!this.generateDates(options).length;\n  };\n\n  _proto.evalRecurrenceRule = function (rule) {\n    var result = {\n      rule: {},\n      isValid: false\n    };\n\n    if (rule) {\n      result.rule = this._parseRecurrenceRule(rule);\n      result.isValid = this.validator.validateRRule(result.rule, rule);\n    }\n\n    return result;\n  };\n\n  _proto.isValidRecurrenceRule = function (rule) {\n    return this.evalRecurrenceRule(rule).isValid;\n  };\n\n  _proto.daysFromByDayRule = function (rule) {\n    var result = [];\n\n    if (rule.byday) {\n      if (Array.isArray(rule.byday)) {\n        result = rule.byday;\n      } else {\n        result = rule.byday.split(\",\");\n      }\n    }\n\n    return result.map(function (item) {\n      var match = item.match(/[A-Za-z]+/);\n      return !!match && match[0];\n    }).filter(function (item) {\n      return !!item;\n    });\n  };\n\n  _proto.getAsciiStringByDate = function (date) {\n    var currentOffset = date.getTimezoneOffset() * toMs(\"minute\");\n    var offsetDate = new Date(date.getTime() + currentOffset);\n    return offsetDate.getFullYear() + (\"0\" + (offsetDate.getMonth() + 1)).slice(-2) + (\"0\" + offsetDate.getDate()).slice(-2) + \"T\" + (\"0\" + offsetDate.getHours()).slice(-2) + (\"0\" + offsetDate.getMinutes()).slice(-2) + (\"0\" + offsetDate.getSeconds()).slice(-2) + \"Z\";\n  };\n\n  _proto.getRecurrenceString = function (object) {\n    if (!object || !object.freq) {\n      return;\n    }\n\n    var result = \"\";\n\n    for (var field in object) {\n      var value = object[field];\n\n      if (\"interval\" === field && value < 2) {\n        continue;\n      }\n\n      if (\"until\" === field) {\n        value = this.getAsciiStringByDate(value);\n      }\n\n      result += field + \"=\" + value + \";\";\n    }\n\n    result = result.substring(0, result.length - 1);\n    return result.toUpperCase();\n  };\n\n  _proto._parseExceptionToRawArray = function (value) {\n    return value.match(/(\\d{4})(\\d{2})(\\d{2})(T(\\d{2})(\\d{2})(\\d{2}))?(Z)?/);\n  };\n\n  _proto.getDateByAsciiString = function (exceptionText) {\n    if (\"string\" !== typeof exceptionText) {\n      return exceptionText;\n    }\n\n    var result = this._parseExceptionToRawArray(exceptionText);\n\n    if (!result) {\n      return null;\n    }\n\n    var _this$_createDateTupl = this._createDateTuple(result),\n        _this$_createDateTupl2 = _slicedToArray(_this$_createDateTupl, 7),\n        year = _this$_createDateTupl2[0],\n        month = _this$_createDateTupl2[1],\n        date = _this$_createDateTupl2[2],\n        hours = _this$_createDateTupl2[3],\n        minutes = _this$_createDateTupl2[4],\n        seconds = _this$_createDateTupl2[5],\n        isUtc = _this$_createDateTupl2[6];\n\n    if (isUtc) {\n      return new Date(Date.UTC(year, month, date, hours, minutes, seconds));\n    }\n\n    return new Date(year, month, date, hours, minutes, seconds);\n  };\n\n  _proto._dispose = function () {\n    if (this.rRuleSet) {\n      delete this.rRuleSet;\n      this.rRuleSet = null;\n    }\n\n    if (this.rRule) {\n      delete this.rRule;\n      this.rRule = null;\n    }\n  };\n\n  _proto._getTimeZoneOffset = function () {\n    return new Date().getTimezoneOffset();\n  };\n\n  _proto._initializeRRule = function (options, startDateUtc) {\n    var _this = this;\n\n    var ruleOptions = _rrule.RRule.parseString(options.rule);\n\n    var firstDayOfWeek = options.firstDayOfWeek;\n    ruleOptions.dtstart = startDateUtc;\n\n    if (!ruleOptions.wkst && firstDayOfWeek) {\n      var weekDayNumbers = [6, 0, 1, 2, 3, 4, 5];\n      ruleOptions.wkst = weekDayNumbers[firstDayOfWeek];\n    }\n\n    this._createRRule(ruleOptions);\n\n    if (options.exception) {\n      var exceptionStrings = options.exception;\n      var exceptionDates = exceptionStrings.split(\",\").map(function (rule) {\n        return _this.getDateByAsciiString(rule);\n      });\n      exceptionDates.forEach(function (date) {\n        if (options.getPostProcessedException) {\n          date = options.getPostProcessedException(date);\n        }\n\n        var utcDate = _utilsTimeZone.default.createUTCDateWithLocalOffset(date);\n\n        _this.rRuleSet.exdate(utcDate);\n      });\n    }\n  };\n\n  _proto._createRRule = function (ruleOptions) {\n    this._dispose();\n\n    var rRuleSet = new _rrule.RRuleSet();\n    this.rRuleSet = rRuleSet;\n    this.rRule = new _rrule.RRule(ruleOptions);\n    this.rRuleSet.rrule(this.rRule);\n  };\n\n  _proto._getLeftBorder = function (options, minDateUtc, appointmentDuration) {\n    if (options.end && !_utilsTimeZone.default.isSameAppointmentDates(options.start, options.end)) {\n      return new Date(minDateUtc.getTime() - appointmentDuration);\n    }\n\n    return minDateUtc;\n  };\n\n  _proto._parseRecurrenceRule = function (recurrence) {\n    var ruleObject = {};\n    var ruleParts = recurrence.split(\";\");\n\n    for (var i = 0, len = ruleParts.length; i < len; i++) {\n      var rule = ruleParts[i].split(\"=\");\n      var ruleName = rule[0].toLowerCase();\n      var ruleValue = rule[1];\n      ruleObject[ruleName] = ruleValue;\n    }\n\n    var count = parseInt(ruleObject.count);\n\n    if (!isNaN(count)) {\n      ruleObject.count = count;\n    }\n\n    if (ruleObject.interval) {\n      var interval = parseInt(ruleObject.interval);\n\n      if (!isNaN(interval)) {\n        ruleObject.interval = interval;\n      }\n    } else {\n      ruleObject.interval = 1;\n    }\n\n    if (ruleObject.freq && ruleObject.until) {\n      ruleObject.until = this.getDateByAsciiString(ruleObject.until);\n    }\n\n    return ruleObject;\n  };\n\n  _proto._createDateTuple = function (parseResult) {\n    var isUtc = void 0 !== parseResult[8];\n    parseResult.shift();\n\n    if (void 0 === parseResult[3]) {\n      parseResult.splice(3);\n    } else {\n      parseResult.splice(3, 1);\n      parseResult.splice(6);\n    }\n\n    parseResult[1]--;\n    parseResult.unshift(null);\n    return [parseInt(parseResult[1]), parseInt(parseResult[2]), parseInt(parseResult[3]), parseInt(parseResult[4]) || 0, parseInt(parseResult[5]) || 0, parseInt(parseResult[6]) || 0, isUtc];\n  };\n\n  return RecurrenceProcessor;\n}();\n\nvar RecurrenceValidator = function () {\n  function RecurrenceValidator() {}\n\n  var _proto2 = RecurrenceValidator.prototype;\n\n  _proto2.validateRRule = function (rule, recurrence) {\n    if (this._brokenRuleNameExists(rule) || (0, _array.inArray)(rule.freq, freqNames) === -1 || this._wrongCountRule(rule) || this._wrongIntervalRule(rule) || this._wrongDayOfWeek(rule) || this._wrongByMonthDayRule(rule) || this._wrongByMonth(rule) || this._wrongUntilRule(rule)) {\n      this._logBrokenRule(recurrence);\n\n      return false;\n    }\n\n    return true;\n  };\n\n  _proto2._wrongUntilRule = function (rule) {\n    var wrongUntil = false;\n    var until = rule.until;\n\n    if (void 0 !== until && !(until instanceof Date)) {\n      wrongUntil = true;\n    }\n\n    return wrongUntil;\n  };\n\n  _proto2._wrongCountRule = function (rule) {\n    var wrongCount = false;\n    var count = rule.count;\n\n    if (count && \"string\" === typeof count) {\n      wrongCount = true;\n    }\n\n    return wrongCount;\n  };\n\n  _proto2._wrongByMonthDayRule = function (rule) {\n    var wrongByMonthDay = false;\n    var byMonthDay = rule.bymonthday;\n\n    if (byMonthDay && isNaN(parseInt(byMonthDay))) {\n      wrongByMonthDay = true;\n    }\n\n    return wrongByMonthDay;\n  };\n\n  _proto2._wrongByMonth = function (rule) {\n    var wrongByMonth = false;\n    var byMonth = rule.bymonth;\n\n    if (byMonth && isNaN(parseInt(byMonth))) {\n      wrongByMonth = true;\n    }\n\n    return wrongByMonth;\n  };\n\n  _proto2._wrongIntervalRule = function (rule) {\n    var wrongInterval = false;\n    var interval = rule.interval;\n\n    if (interval && \"string\" === typeof interval) {\n      wrongInterval = true;\n    }\n\n    return wrongInterval;\n  };\n\n  _proto2._wrongDayOfWeek = function (rule) {\n    var byDay = rule.byday;\n    var daysByRule = getRecurrenceProcessor().daysFromByDayRule(rule);\n    var brokenDaysExist = false;\n\n    if (\"\" === byDay) {\n      brokenDaysExist = true;\n    }\n\n    (0, _iterator.each)(daysByRule, function (_, day) {\n      if (!Object.prototype.hasOwnProperty.call(days, day)) {\n        brokenDaysExist = true;\n        return false;\n      }\n    });\n    return brokenDaysExist;\n  };\n\n  _proto2._brokenRuleNameExists = function (rule) {\n    var brokenRuleExists = false;\n    (0, _iterator.each)(rule, function (ruleName) {\n      if ((0, _array.inArray)(ruleName, ruleNames) === -1) {\n        brokenRuleExists = true;\n        return false;\n      }\n    });\n    return brokenRuleExists;\n  };\n\n  _proto2._logBrokenRule = function (recurrence) {\n    if ((0, _array.inArray)(recurrence, loggedWarnings) === -1) {\n      _errors.default.log(\"W0006\", recurrence);\n\n      loggedWarnings.push(recurrence);\n    }\n  };\n\n  return RecurrenceValidator;\n}();","map":{"version":3,"sources":["/home/emma/node_modules/devextreme/ui/scheduler/recurrence.js"],"names":["exports","getRecurrenceProcessor","_errors","_interopRequireDefault","require","_iterator","_array","_rrule","_date","_utilsTimeZone","obj","__esModule","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","len","length","arr2","_i","Symbol","iterator","_arr","_n","_d","_s","_e","next","done","push","value","err","return","isArray","toMs","default","dateToMilliseconds","ruleNames","freqNames","days","SU","MO","TU","WE","TH","FR","SA","loggedWarnings","recurrence","RecurrenceProcessor","rRule","rRuleSet","validator","RecurrenceValidator","_proto","generateDates","options","result","recurrenceRule","evalRecurrenceRule","rule","isValid","freq","startDateUtc","createUTCDateWithLocalOffset","start","endDateUtc","end","minDateUtc","min","maxDateUtc","max","duration","getTime","_initializeRRule","minTime","leftBorder","_getLeftBorder","between","forEach","date","endAppointmentTime","correctDate","createDateFromUTCWithLocalOffset","hasRecurrence","_parseRecurrenceRule","validateRRule","isValidRecurrenceRule","daysFromByDayRule","byday","split","map","item","match","filter","getAsciiStringByDate","currentOffset","getTimezoneOffset","offsetDate","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getRecurrenceString","object","field","substring","toUpperCase","_parseExceptionToRawArray","getDateByAsciiString","exceptionText","_this$_createDateTupl","_createDateTuple","_this$_createDateTupl2","year","month","hours","minutes","seconds","isUtc","UTC","_dispose","_getTimeZoneOffset","_this","ruleOptions","RRule","parseString","firstDayOfWeek","dtstart","wkst","weekDayNumbers","_createRRule","exception","exceptionStrings","exceptionDates","getPostProcessedException","utcDate","exdate","RRuleSet","rrule","appointmentDuration","isSameAppointmentDates","ruleObject","ruleParts","ruleName","toLowerCase","ruleValue","count","parseInt","isNaN","interval","until","parseResult","shift","splice","unshift","_proto2","_brokenRuleNameExists","inArray","_wrongCountRule","_wrongIntervalRule","_wrongDayOfWeek","_wrongByMonthDayRule","_wrongByMonth","_wrongUntilRule","_logBrokenRule","wrongUntil","wrongCount","wrongByMonthDay","byMonthDay","bymonthday","wrongByMonth","byMonth","bymonth","wrongInterval","byDay","daysByRule","brokenDaysExist","each","_","day","hasOwnProperty","brokenRuleExists","log"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/scheduler/recurrence.js)\r\n * Version: 20.2.7\r\n * Build date: Thu Apr 22 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.getRecurrenceProcessor = getRecurrenceProcessor;\r\nvar _errors = _interopRequireDefault(require(\"../../core/errors\"));\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _array = require(\"../../core/utils/array\");\r\nvar _rrule = require(\"rrule\");\r\nvar _date = _interopRequireDefault(require(\"../../core/utils/date\"));\r\nvar _utilsTimeZone = _interopRequireDefault(require(\"./utils.timeZone.js\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _slicedToArray(arr, i) {\r\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest()\r\n}\r\n\r\nfunction _nonIterableRest() {\r\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")\r\n}\r\n\r\nfunction _unsupportedIterableToArray(o, minLen) {\r\n    if (!o) {\r\n        return\r\n    }\r\n    if (\"string\" === typeof o) {\r\n        return _arrayLikeToArray(o, minLen)\r\n    }\r\n    var n = Object.prototype.toString.call(o).slice(8, -1);\r\n    if (\"Object\" === n && o.constructor) {\r\n        n = o.constructor.name\r\n    }\r\n    if (\"Map\" === n || \"Set\" === n) {\r\n        return Array.from(o)\r\n    }\r\n    if (\"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) {\r\n        return _arrayLikeToArray(o, minLen)\r\n    }\r\n}\r\n\r\nfunction _arrayLikeToArray(arr, len) {\r\n    if (null == len || len > arr.length) {\r\n        len = arr.length\r\n    }\r\n    for (var i = 0, arr2 = new Array(len); i < len; i++) {\r\n        arr2[i] = arr[i]\r\n    }\r\n    return arr2\r\n}\r\n\r\nfunction _iterableToArrayLimit(arr, i) {\r\n    var _i = arr && (\"undefined\" !== typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]);\r\n    if (null == _i) {\r\n        return\r\n    }\r\n    var _arr = [];\r\n    var _n = true;\r\n    var _d = false;\r\n    var _s, _e;\r\n    try {\r\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\r\n            _arr.push(_s.value);\r\n            if (i && _arr.length === i) {\r\n                break\r\n            }\r\n        }\r\n    } catch (err) {\r\n        _d = true;\r\n        _e = err\r\n    } finally {\r\n        try {\r\n            if (!_n && null != _i.return) {\r\n                _i.return()\r\n            }\r\n        } finally {\r\n            if (_d) {\r\n                throw _e\r\n            }\r\n        }\r\n    }\r\n    return _arr\r\n}\r\n\r\nfunction _arrayWithHoles(arr) {\r\n    if (Array.isArray(arr)) {\r\n        return arr\r\n    }\r\n}\r\nvar toMs = _date.default.dateToMilliseconds;\r\nvar ruleNames = [\"freq\", \"interval\", \"byday\", \"byweekno\", \"byyearday\", \"bymonth\", \"bymonthday\", \"count\", \"until\", \"byhour\", \"byminute\", \"bysecond\", \"bysetpos\", \"wkst\"];\r\nvar freqNames = [\"DAILY\", \"WEEKLY\", \"MONTHLY\", \"YEARLY\", \"SECONDLY\", \"MINUTELY\", \"HOURLY\"];\r\nvar days = {\r\n    SU: 0,\r\n    MO: 1,\r\n    TU: 2,\r\n    WE: 3,\r\n    TH: 4,\r\n    FR: 5,\r\n    SA: 6\r\n};\r\nvar loggedWarnings = [];\r\nvar recurrence = null;\r\n\r\nfunction getRecurrenceProcessor() {\r\n    if (!recurrence) {\r\n        recurrence = new RecurrenceProcessor\r\n    }\r\n    return recurrence\r\n}\r\nvar RecurrenceProcessor = function() {\r\n    function RecurrenceProcessor() {\r\n        this.rRule = null;\r\n        this.rRuleSet = null;\r\n        this.validator = new RecurrenceValidator\r\n    }\r\n    var _proto = RecurrenceProcessor.prototype;\r\n    _proto.generateDates = function(options) {\r\n        var result = [];\r\n        var recurrenceRule = this.evalRecurrenceRule(options.rule);\r\n        var rule = recurrenceRule.rule;\r\n        if (!recurrenceRule.isValid || !rule.freq) {\r\n            return result\r\n        }\r\n        var startDateUtc = _utilsTimeZone.default.createUTCDateWithLocalOffset(options.start);\r\n        var endDateUtc = _utilsTimeZone.default.createUTCDateWithLocalOffset(options.end);\r\n        var minDateUtc = _utilsTimeZone.default.createUTCDateWithLocalOffset(options.min);\r\n        var maxDateUtc = _utilsTimeZone.default.createUTCDateWithLocalOffset(options.max);\r\n        var duration = endDateUtc ? endDateUtc.getTime() - startDateUtc.getTime() : 0;\r\n        this._initializeRRule(options, startDateUtc);\r\n        var minTime = minDateUtc.getTime();\r\n        var leftBorder = this._getLeftBorder(options, minDateUtc, duration);\r\n        this.rRuleSet.between(leftBorder, maxDateUtc, true).forEach(function(date) {\r\n            var endAppointmentTime = date.getTime() + duration;\r\n            if (endAppointmentTime >= minTime) {\r\n                var correctDate = _utilsTimeZone.default.createDateFromUTCWithLocalOffset(date);\r\n                result.push(correctDate)\r\n            }\r\n        });\r\n        return result\r\n    };\r\n    _proto.hasRecurrence = function(options) {\r\n        return !!this.generateDates(options).length\r\n    };\r\n    _proto.evalRecurrenceRule = function(rule) {\r\n        var result = {\r\n            rule: {},\r\n            isValid: false\r\n        };\r\n        if (rule) {\r\n            result.rule = this._parseRecurrenceRule(rule);\r\n            result.isValid = this.validator.validateRRule(result.rule, rule)\r\n        }\r\n        return result\r\n    };\r\n    _proto.isValidRecurrenceRule = function(rule) {\r\n        return this.evalRecurrenceRule(rule).isValid\r\n    };\r\n    _proto.daysFromByDayRule = function(rule) {\r\n        var result = [];\r\n        if (rule.byday) {\r\n            if (Array.isArray(rule.byday)) {\r\n                result = rule.byday\r\n            } else {\r\n                result = rule.byday.split(\",\")\r\n            }\r\n        }\r\n        return result.map(function(item) {\r\n            var match = item.match(/[A-Za-z]+/);\r\n            return !!match && match[0]\r\n        }).filter(function(item) {\r\n            return !!item\r\n        })\r\n    };\r\n    _proto.getAsciiStringByDate = function(date) {\r\n        var currentOffset = date.getTimezoneOffset() * toMs(\"minute\");\r\n        var offsetDate = new Date(date.getTime() + currentOffset);\r\n        return offsetDate.getFullYear() + (\"0\" + (offsetDate.getMonth() + 1)).slice(-2) + (\"0\" + offsetDate.getDate()).slice(-2) + \"T\" + (\"0\" + offsetDate.getHours()).slice(-2) + (\"0\" + offsetDate.getMinutes()).slice(-2) + (\"0\" + offsetDate.getSeconds()).slice(-2) + \"Z\"\r\n    };\r\n    _proto.getRecurrenceString = function(object) {\r\n        if (!object || !object.freq) {\r\n            return\r\n        }\r\n        var result = \"\";\r\n        for (var field in object) {\r\n            var value = object[field];\r\n            if (\"interval\" === field && value < 2) {\r\n                continue\r\n            }\r\n            if (\"until\" === field) {\r\n                value = this.getAsciiStringByDate(value)\r\n            }\r\n            result += field + \"=\" + value + \";\"\r\n        }\r\n        result = result.substring(0, result.length - 1);\r\n        return result.toUpperCase()\r\n    };\r\n    _proto._parseExceptionToRawArray = function(value) {\r\n        return value.match(/(\\d{4})(\\d{2})(\\d{2})(T(\\d{2})(\\d{2})(\\d{2}))?(Z)?/)\r\n    };\r\n    _proto.getDateByAsciiString = function(exceptionText) {\r\n        if (\"string\" !== typeof exceptionText) {\r\n            return exceptionText\r\n        }\r\n        var result = this._parseExceptionToRawArray(exceptionText);\r\n        if (!result) {\r\n            return null\r\n        }\r\n        var _this$_createDateTupl = this._createDateTuple(result),\r\n            _this$_createDateTupl2 = _slicedToArray(_this$_createDateTupl, 7),\r\n            year = _this$_createDateTupl2[0],\r\n            month = _this$_createDateTupl2[1],\r\n            date = _this$_createDateTupl2[2],\r\n            hours = _this$_createDateTupl2[3],\r\n            minutes = _this$_createDateTupl2[4],\r\n            seconds = _this$_createDateTupl2[5],\r\n            isUtc = _this$_createDateTupl2[6];\r\n        if (isUtc) {\r\n            return new Date(Date.UTC(year, month, date, hours, minutes, seconds))\r\n        }\r\n        return new Date(year, month, date, hours, minutes, seconds)\r\n    };\r\n    _proto._dispose = function() {\r\n        if (this.rRuleSet) {\r\n            delete this.rRuleSet;\r\n            this.rRuleSet = null\r\n        }\r\n        if (this.rRule) {\r\n            delete this.rRule;\r\n            this.rRule = null\r\n        }\r\n    };\r\n    _proto._getTimeZoneOffset = function() {\r\n        return (new Date).getTimezoneOffset()\r\n    };\r\n    _proto._initializeRRule = function(options, startDateUtc) {\r\n        var _this = this;\r\n        var ruleOptions = _rrule.RRule.parseString(options.rule);\r\n        var firstDayOfWeek = options.firstDayOfWeek;\r\n        ruleOptions.dtstart = startDateUtc;\r\n        if (!ruleOptions.wkst && firstDayOfWeek) {\r\n            var weekDayNumbers = [6, 0, 1, 2, 3, 4, 5];\r\n            ruleOptions.wkst = weekDayNumbers[firstDayOfWeek]\r\n        }\r\n        this._createRRule(ruleOptions);\r\n        if (options.exception) {\r\n            var exceptionStrings = options.exception;\r\n            var exceptionDates = exceptionStrings.split(\",\").map(function(rule) {\r\n                return _this.getDateByAsciiString(rule)\r\n            });\r\n            exceptionDates.forEach(function(date) {\r\n                if (options.getPostProcessedException) {\r\n                    date = options.getPostProcessedException(date)\r\n                }\r\n                var utcDate = _utilsTimeZone.default.createUTCDateWithLocalOffset(date);\r\n                _this.rRuleSet.exdate(utcDate)\r\n            })\r\n        }\r\n    };\r\n    _proto._createRRule = function(ruleOptions) {\r\n        this._dispose();\r\n        var rRuleSet = new _rrule.RRuleSet;\r\n        this.rRuleSet = rRuleSet;\r\n        this.rRule = new _rrule.RRule(ruleOptions);\r\n        this.rRuleSet.rrule(this.rRule)\r\n    };\r\n    _proto._getLeftBorder = function(options, minDateUtc, appointmentDuration) {\r\n        if (options.end && !_utilsTimeZone.default.isSameAppointmentDates(options.start, options.end)) {\r\n            return new Date(minDateUtc.getTime() - appointmentDuration)\r\n        }\r\n        return minDateUtc\r\n    };\r\n    _proto._parseRecurrenceRule = function(recurrence) {\r\n        var ruleObject = {};\r\n        var ruleParts = recurrence.split(\";\");\r\n        for (var i = 0, len = ruleParts.length; i < len; i++) {\r\n            var rule = ruleParts[i].split(\"=\");\r\n            var ruleName = rule[0].toLowerCase();\r\n            var ruleValue = rule[1];\r\n            ruleObject[ruleName] = ruleValue\r\n        }\r\n        var count = parseInt(ruleObject.count);\r\n        if (!isNaN(count)) {\r\n            ruleObject.count = count\r\n        }\r\n        if (ruleObject.interval) {\r\n            var interval = parseInt(ruleObject.interval);\r\n            if (!isNaN(interval)) {\r\n                ruleObject.interval = interval\r\n            }\r\n        } else {\r\n            ruleObject.interval = 1\r\n        }\r\n        if (ruleObject.freq && ruleObject.until) {\r\n            ruleObject.until = this.getDateByAsciiString(ruleObject.until)\r\n        }\r\n        return ruleObject\r\n    };\r\n    _proto._createDateTuple = function(parseResult) {\r\n        var isUtc = void 0 !== parseResult[8];\r\n        parseResult.shift();\r\n        if (void 0 === parseResult[3]) {\r\n            parseResult.splice(3)\r\n        } else {\r\n            parseResult.splice(3, 1);\r\n            parseResult.splice(6)\r\n        }\r\n        parseResult[1]--;\r\n        parseResult.unshift(null);\r\n        return [parseInt(parseResult[1]), parseInt(parseResult[2]), parseInt(parseResult[3]), parseInt(parseResult[4]) || 0, parseInt(parseResult[5]) || 0, parseInt(parseResult[6]) || 0, isUtc]\r\n    };\r\n    return RecurrenceProcessor\r\n}();\r\nvar RecurrenceValidator = function() {\r\n    function RecurrenceValidator() {}\r\n    var _proto2 = RecurrenceValidator.prototype;\r\n    _proto2.validateRRule = function(rule, recurrence) {\r\n        if (this._brokenRuleNameExists(rule) || (0, _array.inArray)(rule.freq, freqNames) === -1 || this._wrongCountRule(rule) || this._wrongIntervalRule(rule) || this._wrongDayOfWeek(rule) || this._wrongByMonthDayRule(rule) || this._wrongByMonth(rule) || this._wrongUntilRule(rule)) {\r\n            this._logBrokenRule(recurrence);\r\n            return false\r\n        }\r\n        return true\r\n    };\r\n    _proto2._wrongUntilRule = function(rule) {\r\n        var wrongUntil = false;\r\n        var until = rule.until;\r\n        if (void 0 !== until && !(until instanceof Date)) {\r\n            wrongUntil = true\r\n        }\r\n        return wrongUntil\r\n    };\r\n    _proto2._wrongCountRule = function(rule) {\r\n        var wrongCount = false;\r\n        var count = rule.count;\r\n        if (count && \"string\" === typeof count) {\r\n            wrongCount = true\r\n        }\r\n        return wrongCount\r\n    };\r\n    _proto2._wrongByMonthDayRule = function(rule) {\r\n        var wrongByMonthDay = false;\r\n        var byMonthDay = rule.bymonthday;\r\n        if (byMonthDay && isNaN(parseInt(byMonthDay))) {\r\n            wrongByMonthDay = true\r\n        }\r\n        return wrongByMonthDay\r\n    };\r\n    _proto2._wrongByMonth = function(rule) {\r\n        var wrongByMonth = false;\r\n        var byMonth = rule.bymonth;\r\n        if (byMonth && isNaN(parseInt(byMonth))) {\r\n            wrongByMonth = true\r\n        }\r\n        return wrongByMonth\r\n    };\r\n    _proto2._wrongIntervalRule = function(rule) {\r\n        var wrongInterval = false;\r\n        var interval = rule.interval;\r\n        if (interval && \"string\" === typeof interval) {\r\n            wrongInterval = true\r\n        }\r\n        return wrongInterval\r\n    };\r\n    _proto2._wrongDayOfWeek = function(rule) {\r\n        var byDay = rule.byday;\r\n        var daysByRule = getRecurrenceProcessor().daysFromByDayRule(rule);\r\n        var brokenDaysExist = false;\r\n        if (\"\" === byDay) {\r\n            brokenDaysExist = true\r\n        }(0, _iterator.each)(daysByRule, function(_, day) {\r\n            if (!Object.prototype.hasOwnProperty.call(days, day)) {\r\n                brokenDaysExist = true;\r\n                return false\r\n            }\r\n        });\r\n        return brokenDaysExist\r\n    };\r\n    _proto2._brokenRuleNameExists = function(rule) {\r\n        var brokenRuleExists = false;\r\n        (0, _iterator.each)(rule, function(ruleName) {\r\n            if ((0, _array.inArray)(ruleName, ruleNames) === -1) {\r\n                brokenRuleExists = true;\r\n                return false\r\n            }\r\n        });\r\n        return brokenRuleExists\r\n    };\r\n    _proto2._logBrokenRule = function(recurrence) {\r\n        if ((0, _array.inArray)(recurrence, loggedWarnings) === -1) {\r\n            _errors.default.log(\"W0006\", recurrence);\r\n            loggedWarnings.push(recurrence)\r\n        }\r\n    };\r\n    return RecurrenceValidator\r\n}();\r\n"]},"metadata":{},"sourceType":"script"}