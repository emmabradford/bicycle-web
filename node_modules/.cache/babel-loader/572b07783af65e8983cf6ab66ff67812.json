{"ast":null,"code":"/**\r\n * DevExtreme (ui/scheduler/utils.timeZone.js)\r\n * Version: 20.2.7\r\n * Build date: Thu Apr 22 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _date = _interopRequireDefault(require(\"../../core/utils/date\"));\n\nvar _utils = _interopRequireDefault(require(\"./timezones/utils.timezones_data\"));\n\nvar _dateAdapter = _interopRequireDefault(require(\"./dateAdapter\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) {\n    return;\n  }\n\n  if (\"string\" === typeof o) {\n    return _arrayLikeToArray(o, minLen);\n  }\n\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n\n  if (\"Object\" === n && o.constructor) {\n    n = o.constructor.name;\n  }\n\n  if (\"Map\" === n || \"Set\" === n) {\n    return Array.from(o);\n  }\n\n  if (\"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) {\n    return _arrayLikeToArray(o, minLen);\n  }\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (null == len || len > arr.length) {\n    len = arr.length;\n  }\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr && (\"undefined\" !== typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]);\n\n  if (null == _i) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) {\n        break;\n      }\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && null != _i.return) {\n        _i.return();\n      }\n    } finally {\n      if (_d) {\n        throw _e;\n      }\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) {\n    return arr;\n  }\n}\n\nvar toMs = _date.default.dateToMilliseconds;\nvar MINUTES_IN_HOUR = 60;\n\nvar createUTCDateWithLocalOffset = function createUTCDateWithLocalOffset(date) {\n  if (!date) {\n    return null;\n  }\n\n  return new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds()));\n};\n\nvar createDateFromUTCWithLocalOffset = function createDateFromUTCWithLocalOffset(date) {\n  var result = (0, _dateAdapter.default)(date);\n  var timezoneOffsetBeforeInMin = result.getTimezoneOffset();\n  result.addTime(result.getTimezoneOffset(\"minute\"));\n  result.subtractMinutes(timezoneOffsetBeforeInMin - result.getTimezoneOffset());\n  return result.source;\n};\n\nvar getTimeZones = function getTimeZones() {\n  var date = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new Date();\n  var dateInUTC = createUTCDate(date);\n  return _utils.default.getDisplayedTimeZones(dateInUTC.getTime());\n};\n\nvar createUTCDate = function createUTCDate(date) {\n  return new Date(Date.UTC(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes()));\n};\n\nvar getTimezoneOffsetChangeInMinutes = function getTimezoneOffsetChangeInMinutes(startDate, endDate, updatedStartDate, updatedEndDate) {\n  return getDaylightOffset(updatedStartDate, updatedEndDate) - getDaylightOffset(startDate, endDate);\n};\n\nvar getTimezoneOffsetChangeInMs = function getTimezoneOffsetChangeInMs(startDate, endDate, updatedStartDate, updatedEndDate) {\n  return getTimezoneOffsetChangeInMinutes(startDate, endDate, updatedStartDate, updatedEndDate) * toMs(\"minute\");\n};\n\nvar getDaylightOffset = function getDaylightOffset(startDate, endDate) {\n  return new Date(startDate).getTimezoneOffset() - new Date(endDate).getTimezoneOffset();\n};\n\nvar getDaylightOffsetInMs = function getDaylightOffsetInMs(startDate, endDate) {\n  return getDaylightOffset(startDate, endDate) * toMs(\"minute\");\n};\n\nvar calculateTimezoneByValue = function calculateTimezoneByValue(timezone) {\n  var date = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new Date();\n\n  if (\"string\" === typeof timezone) {\n    var dateUtc = createUTCDate(date);\n    return _utils.default.getTimeZoneOffsetById(timezone, dateUtc.getTime());\n  }\n\n  return timezone;\n};\n\nvar _getDaylightOffsetByTimezone = function _getDaylightOffsetByTimezone(startDate, endDate, timeZone) {\n  return calculateTimezoneByValue(timeZone, startDate) - calculateTimezoneByValue(timeZone, endDate);\n};\n\nvar getCorrectedDateByDaylightOffsets = function getCorrectedDateByDaylightOffsets(convertedOriginalStartDate, convertedDate, date, timeZone, startDateTimezone) {\n  var daylightOffsetByCommonTimezone = _getDaylightOffsetByTimezone(convertedOriginalStartDate, convertedDate, timeZone);\n\n  var daylightOffsetByAppointmentTimezone = _getDaylightOffsetByTimezone(convertedOriginalStartDate, convertedDate, startDateTimezone);\n\n  var diff = daylightOffsetByCommonTimezone - daylightOffsetByAppointmentTimezone;\n  return new Date(date.getTime() - diff * toMs(\"hour\"));\n};\n\nvar correctRecurrenceExceptionByTimezone = function correctRecurrenceExceptionByTimezone(exception, exceptionByStartDate, timeZone, startDateTimeZone) {\n  var isBackConversion = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : false;\n  var timezoneOffset = (exception.getTimezoneOffset() - exceptionByStartDate.getTimezoneOffset()) / MINUTES_IN_HOUR;\n\n  if (startDateTimeZone) {\n    timezoneOffset = _getDaylightOffsetByTimezone(exceptionByStartDate, exception, startDateTimeZone);\n  } else {\n    if (timeZone) {\n      timezoneOffset = _getDaylightOffsetByTimezone(exceptionByStartDate, exception, timeZone);\n    }\n  }\n\n  return new Date(exception.getTime() + (isBackConversion ? -1 : 1) * timezoneOffset * toMs(\"hour\"));\n};\n\nvar isTimezoneChangeInDate = function isTimezoneChangeInDate(date) {\n  var startDayDate = new Date(new Date(date).setHours(0, 0, 0, 0));\n  var endDayDate = new Date(new Date(date).setHours(23, 59, 59, 0));\n  return startDayDate.getTimezoneOffset() - endDayDate.getTimezoneOffset() !== 0;\n};\n\nvar getDateWithoutTimezoneChange = function getDateWithoutTimezoneChange(date) {\n  var clonedDate = new Date(date);\n\n  if (isTimezoneChangeInDate(clonedDate)) {\n    var result = new Date(clonedDate);\n    return new Date(result.setDate(result.getDate() + 1));\n  }\n\n  return clonedDate;\n};\n\nvar isSameAppointmentDates = function isSameAppointmentDates(startDate, endDate) {\n  endDate = new Date(endDate.getTime() - 1);\n  return _date.default.sameDate(startDate, endDate);\n};\n\nvar getClientTimezoneOffset = function getClientTimezoneOffset() {\n  var date = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new Date();\n  return 6e4 * date.getTimezoneOffset();\n};\n\nvar isEqualLocalTimeZone = function isEqualLocalTimeZone(timeZoneName) {\n  var date = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new Date();\n\n  if (Intl) {\n    var localTimeZoneName = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n    if (localTimeZoneName === timeZoneName) {\n      return true;\n    }\n  }\n\n  return isEqualLocalTimeZoneByDeclaration(timeZoneName, date);\n};\n\nvar hasDSTInLocalTimeZone = function hasDSTInLocalTimeZone() {\n  var _getExtremeDates = getExtremeDates(),\n      _getExtremeDates2 = _slicedToArray(_getExtremeDates, 2),\n      startDate = _getExtremeDates2[0],\n      endDate = _getExtremeDates2[1];\n\n  return startDate.getTimezoneOffset() !== endDate.getTimezoneOffset();\n};\n\nvar isEqualLocalTimeZoneByDeclaration = function isEqualLocalTimeZoneByDeclaration(timeZoneName, date) {\n  var year = date.getFullYear();\n\n  var getOffset = function getOffset(date) {\n    return -date.getTimezoneOffset() / 60;\n  };\n\n  var getDateAndMoveHourBack = function getDateAndMoveHourBack(dateStamp) {\n    return new Date(dateStamp - 36e5);\n  };\n\n  var configTuple = _utils.default.getTimeZoneDeclarationTuple(timeZoneName, year);\n\n  var _configTuple = _slicedToArray(configTuple, 2),\n      summerTime = _configTuple[0],\n      winterTime = _configTuple[1];\n\n  var noDSTInTargetTimeZone = 0 === configTuple.length;\n\n  if (noDSTInTargetTimeZone) {\n    var targetTimeZoneOffset = _utils.default.getTimeZoneOffsetById(timeZoneName, date);\n\n    var localTimeZoneOffset = getOffset(date);\n\n    if (targetTimeZoneOffset !== localTimeZoneOffset) {\n      return false;\n    }\n\n    return hasDSTInLocalTimeZone() ? false : true;\n  }\n\n  var localSummerOffset = getOffset(new Date(summerTime.date));\n  var localWinterOffset = getOffset(new Date(winterTime.date));\n\n  if (localSummerOffset !== summerTime.offset) {\n    return false;\n  }\n\n  if (localSummerOffset === getOffset(getDateAndMoveHourBack(summerTime.date))) {\n    return false;\n  }\n\n  if (localWinterOffset !== winterTime.offset) {\n    return false;\n  }\n\n  if (localWinterOffset === getOffset(getDateAndMoveHourBack(winterTime.date))) {\n    return false;\n  }\n\n  return true;\n};\n\nvar getExtremeDates = function getExtremeDates() {\n  var nowDate = new Date(Date.now());\n  var startDate = new Date();\n  var endDate = new Date();\n  startDate.setFullYear(nowDate.getFullYear(), 0, 1);\n  endDate.setFullYear(nowDate.getFullYear(), 6, 1);\n  return [startDate, endDate];\n};\n\nvar utils = {\n  getDaylightOffset: getDaylightOffset,\n  getDaylightOffsetInMs: getDaylightOffsetInMs,\n  getTimezoneOffsetChangeInMinutes: getTimezoneOffsetChangeInMinutes,\n  getTimezoneOffsetChangeInMs: getTimezoneOffsetChangeInMs,\n  calculateTimezoneByValue: calculateTimezoneByValue,\n  getCorrectedDateByDaylightOffsets: getCorrectedDateByDaylightOffsets,\n  isSameAppointmentDates: isSameAppointmentDates,\n  correctRecurrenceExceptionByTimezone: correctRecurrenceExceptionByTimezone,\n  getClientTimezoneOffset: getClientTimezoneOffset,\n  createUTCDateWithLocalOffset: createUTCDateWithLocalOffset,\n  createDateFromUTCWithLocalOffset: createDateFromUTCWithLocalOffset,\n  createUTCDate: createUTCDate,\n  isTimezoneChangeInDate: isTimezoneChangeInDate,\n  getDateWithoutTimezoneChange: getDateWithoutTimezoneChange,\n  hasDSTInLocalTimeZone: hasDSTInLocalTimeZone,\n  isEqualLocalTimeZone: isEqualLocalTimeZone,\n  isEqualLocalTimeZoneByDeclaration: isEqualLocalTimeZoneByDeclaration,\n  getTimeZones: getTimeZones\n};\nvar _default = utils;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["/home/emma/node_modules/devextreme/ui/scheduler/utils.timeZone.js"],"names":["exports","default","_date","_interopRequireDefault","require","_utils","_dateAdapter","obj","__esModule","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","len","length","arr2","_i","Symbol","iterator","_arr","_n","_d","_s","_e","next","done","push","value","err","return","isArray","toMs","dateToMilliseconds","MINUTES_IN_HOUR","createUTCDateWithLocalOffset","date","Date","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","createDateFromUTCWithLocalOffset","result","timezoneOffsetBeforeInMin","getTimezoneOffset","addTime","subtractMinutes","source","getTimeZones","arguments","dateInUTC","createUTCDate","getDisplayedTimeZones","getTime","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getTimezoneOffsetChangeInMinutes","startDate","endDate","updatedStartDate","updatedEndDate","getDaylightOffset","getTimezoneOffsetChangeInMs","getDaylightOffsetInMs","calculateTimezoneByValue","timezone","dateUtc","getTimeZoneOffsetById","_getDaylightOffsetByTimezone","timeZone","getCorrectedDateByDaylightOffsets","convertedOriginalStartDate","convertedDate","startDateTimezone","daylightOffsetByCommonTimezone","daylightOffsetByAppointmentTimezone","diff","correctRecurrenceExceptionByTimezone","exception","exceptionByStartDate","startDateTimeZone","isBackConversion","timezoneOffset","isTimezoneChangeInDate","startDayDate","setHours","endDayDate","getDateWithoutTimezoneChange","clonedDate","setDate","isSameAppointmentDates","sameDate","getClientTimezoneOffset","isEqualLocalTimeZone","timeZoneName","Intl","localTimeZoneName","DateTimeFormat","resolvedOptions","isEqualLocalTimeZoneByDeclaration","hasDSTInLocalTimeZone","_getExtremeDates","getExtremeDates","_getExtremeDates2","year","getOffset","getDateAndMoveHourBack","dateStamp","configTuple","getTimeZoneDeclarationTuple","_configTuple","summerTime","winterTime","noDSTInTargetTimeZone","targetTimeZoneOffset","localTimeZoneOffset","localSummerOffset","localWinterOffset","offset","nowDate","now","setFullYear","utils","_default","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/scheduler/utils.timeZone.js)\r\n * Version: 20.2.7\r\n * Build date: Thu Apr 22 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _date = _interopRequireDefault(require(\"../../core/utils/date\"));\r\nvar _utils = _interopRequireDefault(require(\"./timezones/utils.timezones_data\"));\r\nvar _dateAdapter = _interopRequireDefault(require(\"./dateAdapter\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _slicedToArray(arr, i) {\r\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest()\r\n}\r\n\r\nfunction _nonIterableRest() {\r\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")\r\n}\r\n\r\nfunction _unsupportedIterableToArray(o, minLen) {\r\n    if (!o) {\r\n        return\r\n    }\r\n    if (\"string\" === typeof o) {\r\n        return _arrayLikeToArray(o, minLen)\r\n    }\r\n    var n = Object.prototype.toString.call(o).slice(8, -1);\r\n    if (\"Object\" === n && o.constructor) {\r\n        n = o.constructor.name\r\n    }\r\n    if (\"Map\" === n || \"Set\" === n) {\r\n        return Array.from(o)\r\n    }\r\n    if (\"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) {\r\n        return _arrayLikeToArray(o, minLen)\r\n    }\r\n}\r\n\r\nfunction _arrayLikeToArray(arr, len) {\r\n    if (null == len || len > arr.length) {\r\n        len = arr.length\r\n    }\r\n    for (var i = 0, arr2 = new Array(len); i < len; i++) {\r\n        arr2[i] = arr[i]\r\n    }\r\n    return arr2\r\n}\r\n\r\nfunction _iterableToArrayLimit(arr, i) {\r\n    var _i = arr && (\"undefined\" !== typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]);\r\n    if (null == _i) {\r\n        return\r\n    }\r\n    var _arr = [];\r\n    var _n = true;\r\n    var _d = false;\r\n    var _s, _e;\r\n    try {\r\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\r\n            _arr.push(_s.value);\r\n            if (i && _arr.length === i) {\r\n                break\r\n            }\r\n        }\r\n    } catch (err) {\r\n        _d = true;\r\n        _e = err\r\n    } finally {\r\n        try {\r\n            if (!_n && null != _i.return) {\r\n                _i.return()\r\n            }\r\n        } finally {\r\n            if (_d) {\r\n                throw _e\r\n            }\r\n        }\r\n    }\r\n    return _arr\r\n}\r\n\r\nfunction _arrayWithHoles(arr) {\r\n    if (Array.isArray(arr)) {\r\n        return arr\r\n    }\r\n}\r\nvar toMs = _date.default.dateToMilliseconds;\r\nvar MINUTES_IN_HOUR = 60;\r\nvar createUTCDateWithLocalOffset = function(date) {\r\n    if (!date) {\r\n        return null\r\n    }\r\n    return new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds()))\r\n};\r\nvar createDateFromUTCWithLocalOffset = function(date) {\r\n    var result = (0, _dateAdapter.default)(date);\r\n    var timezoneOffsetBeforeInMin = result.getTimezoneOffset();\r\n    result.addTime(result.getTimezoneOffset(\"minute\"));\r\n    result.subtractMinutes(timezoneOffsetBeforeInMin - result.getTimezoneOffset());\r\n    return result.source\r\n};\r\nvar getTimeZones = function() {\r\n    var date = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new Date;\r\n    var dateInUTC = createUTCDate(date);\r\n    return _utils.default.getDisplayedTimeZones(dateInUTC.getTime())\r\n};\r\nvar createUTCDate = function(date) {\r\n    return new Date(Date.UTC(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes()))\r\n};\r\nvar getTimezoneOffsetChangeInMinutes = function(startDate, endDate, updatedStartDate, updatedEndDate) {\r\n    return getDaylightOffset(updatedStartDate, updatedEndDate) - getDaylightOffset(startDate, endDate)\r\n};\r\nvar getTimezoneOffsetChangeInMs = function(startDate, endDate, updatedStartDate, updatedEndDate) {\r\n    return getTimezoneOffsetChangeInMinutes(startDate, endDate, updatedStartDate, updatedEndDate) * toMs(\"minute\")\r\n};\r\nvar getDaylightOffset = function(startDate, endDate) {\r\n    return new Date(startDate).getTimezoneOffset() - new Date(endDate).getTimezoneOffset()\r\n};\r\nvar getDaylightOffsetInMs = function(startDate, endDate) {\r\n    return getDaylightOffset(startDate, endDate) * toMs(\"minute\")\r\n};\r\nvar calculateTimezoneByValue = function(timezone) {\r\n    var date = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new Date;\r\n    if (\"string\" === typeof timezone) {\r\n        var dateUtc = createUTCDate(date);\r\n        return _utils.default.getTimeZoneOffsetById(timezone, dateUtc.getTime())\r\n    }\r\n    return timezone\r\n};\r\nvar _getDaylightOffsetByTimezone = function(startDate, endDate, timeZone) {\r\n    return calculateTimezoneByValue(timeZone, startDate) - calculateTimezoneByValue(timeZone, endDate)\r\n};\r\nvar getCorrectedDateByDaylightOffsets = function(convertedOriginalStartDate, convertedDate, date, timeZone, startDateTimezone) {\r\n    var daylightOffsetByCommonTimezone = _getDaylightOffsetByTimezone(convertedOriginalStartDate, convertedDate, timeZone);\r\n    var daylightOffsetByAppointmentTimezone = _getDaylightOffsetByTimezone(convertedOriginalStartDate, convertedDate, startDateTimezone);\r\n    var diff = daylightOffsetByCommonTimezone - daylightOffsetByAppointmentTimezone;\r\n    return new Date(date.getTime() - diff * toMs(\"hour\"))\r\n};\r\nvar correctRecurrenceExceptionByTimezone = function(exception, exceptionByStartDate, timeZone, startDateTimeZone) {\r\n    var isBackConversion = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : false;\r\n    var timezoneOffset = (exception.getTimezoneOffset() - exceptionByStartDate.getTimezoneOffset()) / MINUTES_IN_HOUR;\r\n    if (startDateTimeZone) {\r\n        timezoneOffset = _getDaylightOffsetByTimezone(exceptionByStartDate, exception, startDateTimeZone)\r\n    } else {\r\n        if (timeZone) {\r\n            timezoneOffset = _getDaylightOffsetByTimezone(exceptionByStartDate, exception, timeZone)\r\n        }\r\n    }\r\n    return new Date(exception.getTime() + (isBackConversion ? -1 : 1) * timezoneOffset * toMs(\"hour\"))\r\n};\r\nvar isTimezoneChangeInDate = function(date) {\r\n    var startDayDate = new Date(new Date(date).setHours(0, 0, 0, 0));\r\n    var endDayDate = new Date(new Date(date).setHours(23, 59, 59, 0));\r\n    return startDayDate.getTimezoneOffset() - endDayDate.getTimezoneOffset() !== 0\r\n};\r\nvar getDateWithoutTimezoneChange = function(date) {\r\n    var clonedDate = new Date(date);\r\n    if (isTimezoneChangeInDate(clonedDate)) {\r\n        var result = new Date(clonedDate);\r\n        return new Date(result.setDate(result.getDate() + 1))\r\n    }\r\n    return clonedDate\r\n};\r\nvar isSameAppointmentDates = function(startDate, endDate) {\r\n    endDate = new Date(endDate.getTime() - 1);\r\n    return _date.default.sameDate(startDate, endDate)\r\n};\r\nvar getClientTimezoneOffset = function() {\r\n    var date = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new Date;\r\n    return 6e4 * date.getTimezoneOffset()\r\n};\r\nvar isEqualLocalTimeZone = function(timeZoneName) {\r\n    var date = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new Date;\r\n    if (Intl) {\r\n        var localTimeZoneName = Intl.DateTimeFormat().resolvedOptions().timeZone;\r\n        if (localTimeZoneName === timeZoneName) {\r\n            return true\r\n        }\r\n    }\r\n    return isEqualLocalTimeZoneByDeclaration(timeZoneName, date)\r\n};\r\nvar hasDSTInLocalTimeZone = function() {\r\n    var _getExtremeDates = getExtremeDates(),\r\n        _getExtremeDates2 = _slicedToArray(_getExtremeDates, 2),\r\n        startDate = _getExtremeDates2[0],\r\n        endDate = _getExtremeDates2[1];\r\n    return startDate.getTimezoneOffset() !== endDate.getTimezoneOffset()\r\n};\r\nvar isEqualLocalTimeZoneByDeclaration = function(timeZoneName, date) {\r\n    var year = date.getFullYear();\r\n    var getOffset = function(date) {\r\n        return -date.getTimezoneOffset() / 60\r\n    };\r\n    var getDateAndMoveHourBack = function(dateStamp) {\r\n        return new Date(dateStamp - 36e5)\r\n    };\r\n    var configTuple = _utils.default.getTimeZoneDeclarationTuple(timeZoneName, year);\r\n    var _configTuple = _slicedToArray(configTuple, 2),\r\n        summerTime = _configTuple[0],\r\n        winterTime = _configTuple[1];\r\n    var noDSTInTargetTimeZone = 0 === configTuple.length;\r\n    if (noDSTInTargetTimeZone) {\r\n        var targetTimeZoneOffset = _utils.default.getTimeZoneOffsetById(timeZoneName, date);\r\n        var localTimeZoneOffset = getOffset(date);\r\n        if (targetTimeZoneOffset !== localTimeZoneOffset) {\r\n            return false\r\n        }\r\n        return hasDSTInLocalTimeZone() ? false : true\r\n    }\r\n    var localSummerOffset = getOffset(new Date(summerTime.date));\r\n    var localWinterOffset = getOffset(new Date(winterTime.date));\r\n    if (localSummerOffset !== summerTime.offset) {\r\n        return false\r\n    }\r\n    if (localSummerOffset === getOffset(getDateAndMoveHourBack(summerTime.date))) {\r\n        return false\r\n    }\r\n    if (localWinterOffset !== winterTime.offset) {\r\n        return false\r\n    }\r\n    if (localWinterOffset === getOffset(getDateAndMoveHourBack(winterTime.date))) {\r\n        return false\r\n    }\r\n    return true\r\n};\r\nvar getExtremeDates = function() {\r\n    var nowDate = new Date(Date.now());\r\n    var startDate = new Date;\r\n    var endDate = new Date;\r\n    startDate.setFullYear(nowDate.getFullYear(), 0, 1);\r\n    endDate.setFullYear(nowDate.getFullYear(), 6, 1);\r\n    return [startDate, endDate]\r\n};\r\nvar utils = {\r\n    getDaylightOffset: getDaylightOffset,\r\n    getDaylightOffsetInMs: getDaylightOffsetInMs,\r\n    getTimezoneOffsetChangeInMinutes: getTimezoneOffsetChangeInMinutes,\r\n    getTimezoneOffsetChangeInMs: getTimezoneOffsetChangeInMs,\r\n    calculateTimezoneByValue: calculateTimezoneByValue,\r\n    getCorrectedDateByDaylightOffsets: getCorrectedDateByDaylightOffsets,\r\n    isSameAppointmentDates: isSameAppointmentDates,\r\n    correctRecurrenceExceptionByTimezone: correctRecurrenceExceptionByTimezone,\r\n    getClientTimezoneOffset: getClientTimezoneOffset,\r\n    createUTCDateWithLocalOffset: createUTCDateWithLocalOffset,\r\n    createDateFromUTCWithLocalOffset: createDateFromUTCWithLocalOffset,\r\n    createUTCDate: createUTCDate,\r\n    isTimezoneChangeInDate: isTimezoneChangeInDate,\r\n    getDateWithoutTimezoneChange: getDateWithoutTimezoneChange,\r\n    hasDSTInLocalTimeZone: hasDSTInLocalTimeZone,\r\n    isEqualLocalTimeZone: isEqualLocalTimeZone,\r\n    isEqualLocalTimeZoneByDeclaration: isEqualLocalTimeZoneByDeclaration,\r\n    getTimeZones: getTimeZones\r\n};\r\nvar _default = utils;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}