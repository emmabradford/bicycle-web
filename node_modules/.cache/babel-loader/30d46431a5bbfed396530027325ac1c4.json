{"ast":null,"code":"/**\r\n * DevExtreme (ui/scheduler/ui.scheduler.table_creator.js)\r\n * Version: 20.2.7\r\n * Build date: Thu Apr 22 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\n\nvar _dom_adapter = _interopRequireDefault(require(\"../../core/dom_adapter\"));\n\nvar _element_data = require(\"../../core/element_data\");\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _element = require(\"../../core/element\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar ROW_SELECTOR = \"tr\";\n\nvar SchedulerTableCreator = function () {\n  function SchedulerTableCreator() {\n    this.VERTICAL = \"vertical\";\n    this.HORIZONTAL = \"horizontal\";\n  }\n\n  var _proto = SchedulerTableCreator.prototype;\n\n  _proto.insertAllDayRow = function (allDayElements, tableBody, index) {\n    if (allDayElements[index]) {\n      var row = allDayElements[index].find(ROW_SELECTOR);\n\n      if (!row.length) {\n        row = (0, _renderer.default)(_dom_adapter.default.createElement(ROW_SELECTOR));\n        row.append(allDayElements[index].get(0));\n      }\n\n      tableBody.appendChild(row.get ? row.get(0) : row);\n    }\n  };\n\n  _proto.makeTable = function (options) {\n    var tableBody = _dom_adapter.default.createElement(\"tbody\");\n\n    var templateCallbacks = [];\n    var row;\n    var rowCountInGroup = options.groupCount ? options.rowCount / options.groupCount : options.rowCount;\n    var allDayElementIndex = 0;\n    var allDayElements = options.allDayElements;\n    var groupIndex = options.groupIndex;\n    var rowCount = options.rowCount;\n    (0, _renderer.default)(options.container).append(tableBody);\n\n    if (allDayElements) {\n      this.insertAllDayRow(allDayElements, tableBody, 0);\n      allDayElementIndex++;\n    }\n\n    for (var i = 0; i < rowCount; i++) {\n      row = _dom_adapter.default.createElement(ROW_SELECTOR);\n      tableBody.appendChild(row);\n      var isLastRowInGroup = (i + 1) % rowCountInGroup === 0;\n\n      if (options.rowClass) {\n        row.className = options.rowClass;\n      }\n\n      for (var j = 0; j < options.cellCount; j++) {\n        var td = _dom_adapter.default.createElement(\"td\");\n\n        row.appendChild(td);\n\n        if (options.cellClass) {\n          if ((0, _type.isFunction)(options.cellClass)) {\n            td.className = options.cellClass(i, j);\n          } else {\n            td.className = options.cellClass;\n          }\n        }\n\n        var cellDataObject = void 0;\n        var dataKey = void 0;\n        var dataValue = void 0;\n\n        if (options.getCellData) {\n          cellDataObject = options.getCellData(td, i, j, groupIndex);\n          dataKey = cellDataObject.key;\n          dataValue = cellDataObject.value;\n          dataKey && (0, _element_data.data)(td, dataKey, dataValue);\n        }\n\n        if (options.cellTemplate && options.cellTemplate.render) {\n          var templateOptions = {\n            model: {\n              text: options.getCellText ? options.getCellText(i, j) : \"\",\n              date: options.getCellDate ? options.getCellDate(i) : void 0\n            },\n            container: (0, _element.getPublicElement)((0, _renderer.default)(td)),\n            index: i * options.cellCount + j\n          };\n\n          if (dataValue) {\n            if (dataValue.startDate) {\n              templateOptions.model.startDate = dataValue.startDate;\n            }\n\n            if (dataValue.endDate) {\n              templateOptions.model.endDate = dataValue.endDate;\n            }\n\n            if (dataValue.groups) {\n              templateOptions.model.groups = dataValue.groups;\n            }\n\n            if (dataValue.allDay) {\n              templateOptions.model.allDay = dataValue.allDay;\n            }\n          }\n\n          templateCallbacks.push(options.cellTemplate.render.bind(options.cellTemplate, templateOptions));\n        } else {\n          if (options.getCellText) {\n            td.innerHTML = \"<div>\" + options.getCellText(i, j) + \"</div>\";\n          }\n        }\n      }\n\n      if (allDayElements && isLastRowInGroup) {\n        this.insertAllDayRow(allDayElements, tableBody, allDayElementIndex);\n        allDayElementIndex++;\n      }\n    }\n\n    return templateCallbacks;\n  };\n\n  _proto.makeGroupedTable = function (type, groups, cssClasses, cellCount, cellTemplate, rowCount, groupByDate) {\n    var rows = [];\n\n    if (type === this.VERTICAL) {\n      rows = this._makeVerticalGroupedRows(groups, cssClasses, cellTemplate, rowCount);\n    } else {\n      rows = this._makeHorizontalGroupedRows(groups, cssClasses, cellCount, cellTemplate, groupByDate);\n    }\n\n    return rows;\n  };\n\n  _proto.makeGroupedTableFromJSON = function (type, data, config) {\n    var table;\n    var cellStorage = [];\n    var rowIndex = 0;\n    config = config || {};\n    var cellTag = config.cellTag || \"td\";\n    var childrenField = config.childrenField || \"children\";\n    var titleField = config.titleField || \"title\";\n    var groupTableClass = config.groupTableClass;\n    var groupRowClass = config.groupRowClass;\n    var groupCellClass = config.groupCellClass;\n    var groupCellCustomContent = config.groupCellCustomContent;\n\n    function createTable() {\n      table = _dom_adapter.default.createElement(\"table\");\n\n      if (groupTableClass) {\n        table.className = groupTableClass;\n      }\n    }\n\n    function getChildCount(item) {\n      if (item[childrenField]) {\n        return item[childrenField].length;\n      }\n\n      return 0;\n    }\n\n    function createCell(text, childCount, index, data) {\n      var cell = {\n        element: _dom_adapter.default.createElement(cellTag),\n        childCount: childCount\n      };\n\n      if (groupCellClass) {\n        cell.element.className = groupCellClass;\n      }\n\n      var cellText = _dom_adapter.default.createTextNode(text);\n\n      if (\"function\" === typeof groupCellCustomContent) {\n        groupCellCustomContent(cell.element, cellText, index, data);\n      } else {\n        cell.element.appendChild(cellText);\n      }\n\n      return cell;\n    }\n\n    function generateCells(data) {\n      for (var i = 0; i < data.length; i++) {\n        var childCount = getChildCount(data[i]);\n        var cell = createCell(data[i][titleField], childCount, i, data[i]);\n\n        if (!cellStorage[rowIndex]) {\n          cellStorage[rowIndex] = [];\n        }\n\n        cellStorage[rowIndex].push(cell);\n\n        if (childCount) {\n          generateCells(data[i][childrenField]);\n        } else {\n          rowIndex++;\n        }\n      }\n    }\n\n    function putCellsToRows() {\n      cellStorage.forEach(function (cells) {\n        var row = _dom_adapter.default.createElement(ROW_SELECTOR);\n\n        if (groupRowClass) {\n          row.className = groupRowClass;\n        }\n\n        var rowspans = [];\n\n        for (var i = cells.length - 1; i >= 0; i--) {\n          var prev = cells[i + 1];\n          var rowspan = cells[i].childCount;\n\n          if (prev && prev.childCount) {\n            rowspan *= prev.childCount;\n          }\n\n          rowspans.push(rowspan);\n        }\n\n        rowspans.reverse();\n        cells.forEach(function (cell, index) {\n          if (rowspans[index]) {\n            cell.element.setAttribute(\"rowSpan\", rowspans[index]);\n          }\n\n          row.appendChild(cell.element);\n        });\n        table.appendChild(row);\n      });\n    }\n\n    createTable();\n    generateCells(data);\n    putCellsToRows();\n    return table;\n  };\n\n  _proto._makeFlexGroupedRowCells = function (group, repeatCount, cssClasses, cellTemplate) {\n    var repeatByDate = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 1;\n    var cells = [];\n    var items = group.items;\n    var itemCount = items.length;\n\n    for (var i = 0; i < repeatCount * repeatByDate; i++) {\n      for (var j = 0; j < itemCount; j++) {\n        var $container = (0, _renderer.default)(\"<div>\");\n        var cell = {};\n\n        if (cellTemplate && cellTemplate.render) {\n          var templateOptions = {\n            model: items[j],\n            container: (0, _element.getPublicElement)($container),\n            index: i * itemCount + j\n          };\n\n          if (group.data) {\n            templateOptions.model.data = group.data[j];\n          }\n\n          cell.template = cellTemplate.render.bind(cellTemplate, templateOptions);\n        } else {\n          $container.text(items[j].text).attr(\"title\", items[j].text).addClass(\"dx-scheduler-group-header-content\");\n          $container = (0, _renderer.default)(\"<div>\").append($container);\n        }\n\n        var cssClass = (0, _type.isFunction)(cssClasses.groupHeaderClass) ? cssClasses.groupHeaderClass(j) : cssClasses.groupHeaderClass;\n        cell.element = $container.addClass(cssClass);\n        cells.push(cell);\n      }\n    }\n\n    return cells;\n  };\n\n  _proto._makeVerticalGroupedRows = function (groups, cssClasses, cellTemplate) {\n    var cellTemplates = [];\n    var repeatCount = 1;\n    var cellsArray = [];\n\n    var cellIterator = function cellIterator(cell) {\n      if (cell.template) {\n        cellTemplates.push(cell.template);\n      }\n    };\n\n    for (var i = 0; i < groups.length; i++) {\n      if (i > 0) {\n        repeatCount = groups[i - 1].items.length * repeatCount;\n      }\n\n      var cells = this._makeFlexGroupedRowCells(groups[i], repeatCount, cssClasses, cellTemplate);\n\n      cells.forEach(cellIterator);\n      cellsArray.push(cells);\n    }\n\n    var rows = [];\n    var groupCount = cellsArray.length;\n\n    for (var _i = 0; _i < groupCount; _i++) {\n      rows.push((0, _renderer.default)(\"<div>\").addClass(cssClasses.groupHeaderRowClass));\n    }\n\n    for (var _i2 = groupCount - 1; _i2 >= 0; _i2--) {\n      var currentColumnLength = cellsArray[_i2].length;\n\n      for (var j = 0; j < currentColumnLength; j++) {\n        rows[_i2].append(cellsArray[_i2][j].element);\n      }\n    }\n\n    return {\n      elements: (0, _renderer.default)(\"<div>\").addClass(\"dx-scheduler-group-flex-container\").append(rows),\n      cellTemplates: cellTemplates\n    };\n  };\n\n  _proto._makeHorizontalGroupedRows = function (groups, cssClasses, cellCount, cellTemplate, groupByDate) {\n    var repeatCount = 1;\n    var groupCount = groups.length;\n    var rows = [];\n    var cellTemplates = [];\n    var repeatByDate = groupByDate ? cellCount : 1;\n\n    var cellIterator = function cellIterator(cell) {\n      if (cell.template) {\n        cellTemplates.push(cell.template);\n      }\n\n      return cell.element;\n    };\n\n    for (var i = 0; i < groupCount; i++) {\n      if (i > 0) {\n        repeatCount = groups[i - 1].items.length * repeatCount;\n      }\n\n      var cells = this._makeGroupedRowCells(groups[i], repeatCount, cssClasses, cellTemplate, repeatByDate);\n\n      rows.push((0, _renderer.default)(\"<tr>\").addClass(cssClasses.groupRowClass).append(cells.map(cellIterator)));\n    }\n\n    var maxCellCount = rows[groupCount - 1].find(\"th\").length;\n\n    for (var j = 0; j < groupCount; j++) {\n      var $cell = rows[j].find(\"th\");\n      var colspan = maxCellCount / $cell.length;\n\n      if (!groupByDate) {\n        colspan *= cellCount;\n      }\n\n      if (colspan > 1 && 1 === repeatByDate || groupByDate && groupCount > 1) {\n        $cell.attr(\"colSpan\", colspan);\n      }\n    }\n\n    return {\n      elements: rows,\n      cellTemplates: cellTemplates\n    };\n  };\n\n  _proto._makeGroupedRowCells = function (group, repeatCount, cssClasses, cellTemplate, repeatByDate) {\n    repeatByDate = repeatByDate || 1;\n    repeatCount *= repeatByDate;\n    var cells = [];\n    var items = group.items;\n    var itemCount = items.length;\n\n    for (var i = 0; i < repeatCount; i++) {\n      for (var j = 0; j < itemCount; j++) {\n        var $container = (0, _renderer.default)(\"<div>\");\n        var cell = {};\n\n        if (cellTemplate && cellTemplate.render) {\n          var templateOptions = {\n            model: items[j],\n            container: (0, _element.getPublicElement)($container),\n            index: i * itemCount + j\n          };\n\n          if (group.data) {\n            templateOptions.model.data = group.data[j];\n          }\n\n          cell.template = cellTemplate.render.bind(cellTemplate, templateOptions);\n        } else {\n          $container.text(items[j].text);\n          $container = (0, _renderer.default)(\"<div>\").append($container);\n        }\n\n        $container.addClass(cssClasses.groupHeaderContentClass);\n        var cssClass = void 0;\n\n        if ((0, _type.isFunction)(cssClasses.groupHeaderClass)) {\n          cssClass = cssClasses.groupHeaderClass(j);\n        } else {\n          cssClass = cssClasses.groupHeaderClass;\n        }\n\n        cell.element = (0, _renderer.default)(\"<th>\").addClass(cssClass).append($container);\n        cells.push(cell);\n      }\n    }\n\n    return cells;\n  };\n\n  return SchedulerTableCreator;\n}();\n\nvar _default = {\n  tableCreator: new SchedulerTableCreator()\n};\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["/home/emma/node_modules/devextreme/ui/scheduler/ui.scheduler.table_creator.js"],"names":["exports","default","_renderer","_interopRequireDefault","require","_dom_adapter","_element_data","_type","_element","obj","__esModule","ROW_SELECTOR","SchedulerTableCreator","VERTICAL","HORIZONTAL","_proto","prototype","insertAllDayRow","allDayElements","tableBody","index","row","find","length","createElement","append","get","appendChild","makeTable","options","templateCallbacks","rowCountInGroup","groupCount","rowCount","allDayElementIndex","groupIndex","container","i","isLastRowInGroup","rowClass","className","j","cellCount","td","cellClass","isFunction","cellDataObject","dataKey","dataValue","getCellData","key","value","data","cellTemplate","render","templateOptions","model","text","getCellText","date","getCellDate","getPublicElement","startDate","endDate","groups","allDay","push","bind","innerHTML","makeGroupedTable","type","cssClasses","groupByDate","rows","_makeVerticalGroupedRows","_makeHorizontalGroupedRows","makeGroupedTableFromJSON","config","table","cellStorage","rowIndex","cellTag","childrenField","titleField","groupTableClass","groupRowClass","groupCellClass","groupCellCustomContent","createTable","getChildCount","item","createCell","childCount","cell","element","cellText","createTextNode","generateCells","putCellsToRows","forEach","cells","rowspans","prev","rowspan","reverse","setAttribute","_makeFlexGroupedRowCells","group","repeatCount","repeatByDate","arguments","items","itemCount","$container","template","attr","addClass","cssClass","groupHeaderClass","cellTemplates","cellsArray","cellIterator","_i","groupHeaderRowClass","_i2","currentColumnLength","elements","_makeGroupedRowCells","map","maxCellCount","$cell","colspan","groupHeaderContentClass","_default","tableCreator","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/scheduler/ui.scheduler.table_creator.js)\r\n * Version: 20.2.7\r\n * Build date: Thu Apr 22 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _dom_adapter = _interopRequireDefault(require(\"../../core/dom_adapter\"));\r\nvar _element_data = require(\"../../core/element_data\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _element = require(\"../../core/element\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar ROW_SELECTOR = \"tr\";\r\nvar SchedulerTableCreator = function() {\r\n    function SchedulerTableCreator() {\r\n        this.VERTICAL = \"vertical\";\r\n        this.HORIZONTAL = \"horizontal\"\r\n    }\r\n    var _proto = SchedulerTableCreator.prototype;\r\n    _proto.insertAllDayRow = function(allDayElements, tableBody, index) {\r\n        if (allDayElements[index]) {\r\n            var row = allDayElements[index].find(ROW_SELECTOR);\r\n            if (!row.length) {\r\n                row = (0, _renderer.default)(_dom_adapter.default.createElement(ROW_SELECTOR));\r\n                row.append(allDayElements[index].get(0))\r\n            }\r\n            tableBody.appendChild(row.get ? row.get(0) : row)\r\n        }\r\n    };\r\n    _proto.makeTable = function(options) {\r\n        var tableBody = _dom_adapter.default.createElement(\"tbody\");\r\n        var templateCallbacks = [];\r\n        var row;\r\n        var rowCountInGroup = options.groupCount ? options.rowCount / options.groupCount : options.rowCount;\r\n        var allDayElementIndex = 0;\r\n        var allDayElements = options.allDayElements;\r\n        var groupIndex = options.groupIndex;\r\n        var rowCount = options.rowCount;\r\n        (0, _renderer.default)(options.container).append(tableBody);\r\n        if (allDayElements) {\r\n            this.insertAllDayRow(allDayElements, tableBody, 0);\r\n            allDayElementIndex++\r\n        }\r\n        for (var i = 0; i < rowCount; i++) {\r\n            row = _dom_adapter.default.createElement(ROW_SELECTOR);\r\n            tableBody.appendChild(row);\r\n            var isLastRowInGroup = (i + 1) % rowCountInGroup === 0;\r\n            if (options.rowClass) {\r\n                row.className = options.rowClass\r\n            }\r\n            for (var j = 0; j < options.cellCount; j++) {\r\n                var td = _dom_adapter.default.createElement(\"td\");\r\n                row.appendChild(td);\r\n                if (options.cellClass) {\r\n                    if ((0, _type.isFunction)(options.cellClass)) {\r\n                        td.className = options.cellClass(i, j)\r\n                    } else {\r\n                        td.className = options.cellClass\r\n                    }\r\n                }\r\n                var cellDataObject = void 0;\r\n                var dataKey = void 0;\r\n                var dataValue = void 0;\r\n                if (options.getCellData) {\r\n                    cellDataObject = options.getCellData(td, i, j, groupIndex);\r\n                    dataKey = cellDataObject.key;\r\n                    dataValue = cellDataObject.value;\r\n                    dataKey && (0, _element_data.data)(td, dataKey, dataValue)\r\n                }\r\n                if (options.cellTemplate && options.cellTemplate.render) {\r\n                    var templateOptions = {\r\n                        model: {\r\n                            text: options.getCellText ? options.getCellText(i, j) : \"\",\r\n                            date: options.getCellDate ? options.getCellDate(i) : void 0\r\n                        },\r\n                        container: (0, _element.getPublicElement)((0, _renderer.default)(td)),\r\n                        index: i * options.cellCount + j\r\n                    };\r\n                    if (dataValue) {\r\n                        if (dataValue.startDate) {\r\n                            templateOptions.model.startDate = dataValue.startDate\r\n                        }\r\n                        if (dataValue.endDate) {\r\n                            templateOptions.model.endDate = dataValue.endDate\r\n                        }\r\n                        if (dataValue.groups) {\r\n                            templateOptions.model.groups = dataValue.groups\r\n                        }\r\n                        if (dataValue.allDay) {\r\n                            templateOptions.model.allDay = dataValue.allDay\r\n                        }\r\n                    }\r\n                    templateCallbacks.push(options.cellTemplate.render.bind(options.cellTemplate, templateOptions))\r\n                } else {\r\n                    if (options.getCellText) {\r\n                        td.innerHTML = \"<div>\" + options.getCellText(i, j) + \"</div>\"\r\n                    }\r\n                }\r\n            }\r\n            if (allDayElements && isLastRowInGroup) {\r\n                this.insertAllDayRow(allDayElements, tableBody, allDayElementIndex);\r\n                allDayElementIndex++\r\n            }\r\n        }\r\n        return templateCallbacks\r\n    };\r\n    _proto.makeGroupedTable = function(type, groups, cssClasses, cellCount, cellTemplate, rowCount, groupByDate) {\r\n        var rows = [];\r\n        if (type === this.VERTICAL) {\r\n            rows = this._makeVerticalGroupedRows(groups, cssClasses, cellTemplate, rowCount)\r\n        } else {\r\n            rows = this._makeHorizontalGroupedRows(groups, cssClasses, cellCount, cellTemplate, groupByDate)\r\n        }\r\n        return rows\r\n    };\r\n    _proto.makeGroupedTableFromJSON = function(type, data, config) {\r\n        var table;\r\n        var cellStorage = [];\r\n        var rowIndex = 0;\r\n        config = config || {};\r\n        var cellTag = config.cellTag || \"td\";\r\n        var childrenField = config.childrenField || \"children\";\r\n        var titleField = config.titleField || \"title\";\r\n        var groupTableClass = config.groupTableClass;\r\n        var groupRowClass = config.groupRowClass;\r\n        var groupCellClass = config.groupCellClass;\r\n        var groupCellCustomContent = config.groupCellCustomContent;\r\n\r\n        function createTable() {\r\n            table = _dom_adapter.default.createElement(\"table\");\r\n            if (groupTableClass) {\r\n                table.className = groupTableClass\r\n            }\r\n        }\r\n\r\n        function getChildCount(item) {\r\n            if (item[childrenField]) {\r\n                return item[childrenField].length\r\n            }\r\n            return 0\r\n        }\r\n\r\n        function createCell(text, childCount, index, data) {\r\n            var cell = {\r\n                element: _dom_adapter.default.createElement(cellTag),\r\n                childCount: childCount\r\n            };\r\n            if (groupCellClass) {\r\n                cell.element.className = groupCellClass\r\n            }\r\n            var cellText = _dom_adapter.default.createTextNode(text);\r\n            if (\"function\" === typeof groupCellCustomContent) {\r\n                groupCellCustomContent(cell.element, cellText, index, data)\r\n            } else {\r\n                cell.element.appendChild(cellText)\r\n            }\r\n            return cell\r\n        }\r\n\r\n        function generateCells(data) {\r\n            for (var i = 0; i < data.length; i++) {\r\n                var childCount = getChildCount(data[i]);\r\n                var cell = createCell(data[i][titleField], childCount, i, data[i]);\r\n                if (!cellStorage[rowIndex]) {\r\n                    cellStorage[rowIndex] = []\r\n                }\r\n                cellStorage[rowIndex].push(cell);\r\n                if (childCount) {\r\n                    generateCells(data[i][childrenField])\r\n                } else {\r\n                    rowIndex++\r\n                }\r\n            }\r\n        }\r\n\r\n        function putCellsToRows() {\r\n            cellStorage.forEach(function(cells) {\r\n                var row = _dom_adapter.default.createElement(ROW_SELECTOR);\r\n                if (groupRowClass) {\r\n                    row.className = groupRowClass\r\n                }\r\n                var rowspans = [];\r\n                for (var i = cells.length - 1; i >= 0; i--) {\r\n                    var prev = cells[i + 1];\r\n                    var rowspan = cells[i].childCount;\r\n                    if (prev && prev.childCount) {\r\n                        rowspan *= prev.childCount\r\n                    }\r\n                    rowspans.push(rowspan)\r\n                }\r\n                rowspans.reverse();\r\n                cells.forEach(function(cell, index) {\r\n                    if (rowspans[index]) {\r\n                        cell.element.setAttribute(\"rowSpan\", rowspans[index])\r\n                    }\r\n                    row.appendChild(cell.element)\r\n                });\r\n                table.appendChild(row)\r\n            })\r\n        }\r\n        createTable();\r\n        generateCells(data);\r\n        putCellsToRows();\r\n        return table\r\n    };\r\n    _proto._makeFlexGroupedRowCells = function(group, repeatCount, cssClasses, cellTemplate) {\r\n        var repeatByDate = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 1;\r\n        var cells = [];\r\n        var items = group.items;\r\n        var itemCount = items.length;\r\n        for (var i = 0; i < repeatCount * repeatByDate; i++) {\r\n            for (var j = 0; j < itemCount; j++) {\r\n                var $container = (0, _renderer.default)(\"<div>\");\r\n                var cell = {};\r\n                if (cellTemplate && cellTemplate.render) {\r\n                    var templateOptions = {\r\n                        model: items[j],\r\n                        container: (0, _element.getPublicElement)($container),\r\n                        index: i * itemCount + j\r\n                    };\r\n                    if (group.data) {\r\n                        templateOptions.model.data = group.data[j]\r\n                    }\r\n                    cell.template = cellTemplate.render.bind(cellTemplate, templateOptions)\r\n                } else {\r\n                    $container.text(items[j].text).attr(\"title\", items[j].text).addClass(\"dx-scheduler-group-header-content\");\r\n                    $container = (0, _renderer.default)(\"<div>\").append($container)\r\n                }\r\n                var cssClass = (0, _type.isFunction)(cssClasses.groupHeaderClass) ? cssClasses.groupHeaderClass(j) : cssClasses.groupHeaderClass;\r\n                cell.element = $container.addClass(cssClass);\r\n                cells.push(cell)\r\n            }\r\n        }\r\n        return cells\r\n    };\r\n    _proto._makeVerticalGroupedRows = function(groups, cssClasses, cellTemplate) {\r\n        var cellTemplates = [];\r\n        var repeatCount = 1;\r\n        var cellsArray = [];\r\n        var cellIterator = function(cell) {\r\n            if (cell.template) {\r\n                cellTemplates.push(cell.template)\r\n            }\r\n        };\r\n        for (var i = 0; i < groups.length; i++) {\r\n            if (i > 0) {\r\n                repeatCount = groups[i - 1].items.length * repeatCount\r\n            }\r\n            var cells = this._makeFlexGroupedRowCells(groups[i], repeatCount, cssClasses, cellTemplate);\r\n            cells.forEach(cellIterator);\r\n            cellsArray.push(cells)\r\n        }\r\n        var rows = [];\r\n        var groupCount = cellsArray.length;\r\n        for (var _i = 0; _i < groupCount; _i++) {\r\n            rows.push((0, _renderer.default)(\"<div>\").addClass(cssClasses.groupHeaderRowClass))\r\n        }\r\n        for (var _i2 = groupCount - 1; _i2 >= 0; _i2--) {\r\n            var currentColumnLength = cellsArray[_i2].length;\r\n            for (var j = 0; j < currentColumnLength; j++) {\r\n                rows[_i2].append(cellsArray[_i2][j].element)\r\n            }\r\n        }\r\n        return {\r\n            elements: (0, _renderer.default)(\"<div>\").addClass(\"dx-scheduler-group-flex-container\").append(rows),\r\n            cellTemplates: cellTemplates\r\n        }\r\n    };\r\n    _proto._makeHorizontalGroupedRows = function(groups, cssClasses, cellCount, cellTemplate, groupByDate) {\r\n        var repeatCount = 1;\r\n        var groupCount = groups.length;\r\n        var rows = [];\r\n        var cellTemplates = [];\r\n        var repeatByDate = groupByDate ? cellCount : 1;\r\n        var cellIterator = function(cell) {\r\n            if (cell.template) {\r\n                cellTemplates.push(cell.template)\r\n            }\r\n            return cell.element\r\n        };\r\n        for (var i = 0; i < groupCount; i++) {\r\n            if (i > 0) {\r\n                repeatCount = groups[i - 1].items.length * repeatCount\r\n            }\r\n            var cells = this._makeGroupedRowCells(groups[i], repeatCount, cssClasses, cellTemplate, repeatByDate);\r\n            rows.push((0, _renderer.default)(\"<tr>\").addClass(cssClasses.groupRowClass).append(cells.map(cellIterator)))\r\n        }\r\n        var maxCellCount = rows[groupCount - 1].find(\"th\").length;\r\n        for (var j = 0; j < groupCount; j++) {\r\n            var $cell = rows[j].find(\"th\");\r\n            var colspan = maxCellCount / $cell.length;\r\n            if (!groupByDate) {\r\n                colspan *= cellCount\r\n            }\r\n            if (colspan > 1 && 1 === repeatByDate || groupByDate && groupCount > 1) {\r\n                $cell.attr(\"colSpan\", colspan)\r\n            }\r\n        }\r\n        return {\r\n            elements: rows,\r\n            cellTemplates: cellTemplates\r\n        }\r\n    };\r\n    _proto._makeGroupedRowCells = function(group, repeatCount, cssClasses, cellTemplate, repeatByDate) {\r\n        repeatByDate = repeatByDate || 1;\r\n        repeatCount *= repeatByDate;\r\n        var cells = [];\r\n        var items = group.items;\r\n        var itemCount = items.length;\r\n        for (var i = 0; i < repeatCount; i++) {\r\n            for (var j = 0; j < itemCount; j++) {\r\n                var $container = (0, _renderer.default)(\"<div>\");\r\n                var cell = {};\r\n                if (cellTemplate && cellTemplate.render) {\r\n                    var templateOptions = {\r\n                        model: items[j],\r\n                        container: (0, _element.getPublicElement)($container),\r\n                        index: i * itemCount + j\r\n                    };\r\n                    if (group.data) {\r\n                        templateOptions.model.data = group.data[j]\r\n                    }\r\n                    cell.template = cellTemplate.render.bind(cellTemplate, templateOptions)\r\n                } else {\r\n                    $container.text(items[j].text);\r\n                    $container = (0, _renderer.default)(\"<div>\").append($container)\r\n                }\r\n                $container.addClass(cssClasses.groupHeaderContentClass);\r\n                var cssClass = void 0;\r\n                if ((0, _type.isFunction)(cssClasses.groupHeaderClass)) {\r\n                    cssClass = cssClasses.groupHeaderClass(j)\r\n                } else {\r\n                    cssClass = cssClasses.groupHeaderClass\r\n                }\r\n                cell.element = (0, _renderer.default)(\"<th>\").addClass(cssClass).append($container);\r\n                cells.push(cell)\r\n            }\r\n        }\r\n        return cells\r\n    };\r\n    return SchedulerTableCreator\r\n}();\r\nvar _default = {\r\n    tableCreator: new SchedulerTableCreator\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}