{"ast":null,"code":"/**\r\n * DevExtreme (ui/scheduler/workspaces/virtual_selection_state.js)\r\n * Version: 20.2.7\r\n * Build date: Thu Apr 22 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _date = _interopRequireDefault(require(\"../../../core/utils/date\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) {\n    return;\n  }\n\n  if (\"string\" === typeof o) {\n    return _arrayLikeToArray(o, minLen);\n  }\n\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n\n  if (\"Object\" === n && o.constructor) {\n    n = o.constructor.name;\n  }\n\n  if (\"Map\" === n || \"Set\" === n) {\n    return Array.from(o);\n  }\n\n  if (\"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) {\n    return _arrayLikeToArray(o, minLen);\n  }\n}\n\nfunction _iterableToArray(iter) {\n  if (\"undefined\" !== typeof Symbol && null != iter[Symbol.iterator] || null != iter[\"@@iterator\"]) {\n    return Array.from(iter);\n  }\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    return _arrayLikeToArray(arr);\n  }\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (null == len || len > arr.length) {\n    len = arr.length;\n  }\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar VirtualSelectionState = function () {\n  function VirtualSelectionState(viewDataProvider) {\n    this._viewDataProvider = viewDataProvider;\n    this._focusedCell = null;\n    this._selectedCells = null;\n    this._firstSelectedCell = null;\n  }\n\n  var _proto = VirtualSelectionState.prototype;\n\n  _proto.setFocusedCell = function (rowIndex, columnIndex, isAllDay) {\n    if (rowIndex >= 0) {\n      var cell = this._viewDataProvider.getCellData(rowIndex, columnIndex, isAllDay);\n\n      this._focusedCell = cell;\n    }\n  };\n\n  _proto.getFocusedCell = function (isVerticalGroupOrientation) {\n    var _focusedCell = this._focusedCell;\n\n    if (!_focusedCell) {\n      return;\n    }\n\n    var columnIndex = this._getColumnIndexByCellData(_focusedCell, isVerticalGroupOrientation);\n\n    var rowIndex = this._getRowIndexByColumnAndData(_focusedCell, columnIndex, isVerticalGroupOrientation);\n\n    return {\n      coordinates: {\n        cellIndex: columnIndex,\n        rowIndex: rowIndex\n      },\n      cellData: _focusedCell\n    };\n  };\n\n  _proto.setSelectedCells = function (lastCellCoordinates) {\n    var _this = this;\n\n    var firstCellCoordinates = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : void 0;\n    var viewDataProvider = this._viewDataProvider;\n    var lastRowIndex = lastCellCoordinates.rowIndex,\n        lastColumnIndex = lastCellCoordinates.columnIndex,\n        isLastCellAllDay = lastCellCoordinates.allDay;\n\n    if (lastRowIndex < 0) {\n      return;\n    }\n\n    var firstCell = firstCellCoordinates ? viewDataProvider.getCellData(firstCellCoordinates.rowIndex, firstCellCoordinates.columnIndex, firstCellCoordinates.allDay) : this._firstSelectedCell;\n    var lastCell = viewDataProvider.getCellData(lastRowIndex, lastColumnIndex, isLastCellAllDay);\n    this._firstSelectedCell = firstCell;\n\n    if (firstCell.startDate.getTime() > lastCell.startDate.getTime()) {\n      var _ref = [lastCell, firstCell];\n      firstCell = _ref[0];\n      lastCell = _ref[1];\n    }\n\n    var _firstCell = firstCell,\n        firstStartDate = _firstCell.startDate,\n        firstGroupIndex = _firstCell.groupIndex;\n    var _lastCell = lastCell,\n        lastStartDate = _lastCell.startDate;\n    var cells = viewDataProvider.getCellsByGroupIndexAndAllDay(firstGroupIndex, isLastCellAllDay);\n    var filteredCells = cells.reduce(function (selectedCells, cellsRow) {\n      var filteredRow = _this._filterCellsByDate(cellsRow, firstStartDate, lastStartDate);\n\n      selectedCells.push.apply(selectedCells, _toConsumableArray(filteredRow));\n      return selectedCells;\n    }, []);\n    this._selectedCells = filteredCells.sort(function (firstCell, secondCell) {\n      return firstCell.startDate.getTime() - secondCell.startDate.getTime();\n    });\n  };\n\n  _proto.getSelectedCells = function () {\n    return this._selectedCells;\n  };\n\n  _proto.releaseSelectedAndFocusedCells = function () {\n    this.releaseSelectedCells();\n    this.releaseFocusedCell();\n  };\n\n  _proto.releaseSelectedCells = function () {\n    this._selectedCells = null;\n    this._firstSelectedCell = null;\n  };\n\n  _proto.releaseFocusedCell = function () {\n    this._focusedCell = null;\n  };\n\n  _proto.isValidFocusedCell = function (nextFocusedCellData) {\n    var focusedCell = this._focusedCell;\n\n    if (!focusedCell) {\n      return true;\n    }\n\n    var groupIndex = focusedCell.groupIndex,\n        allDay = focusedCell.allDay;\n    var nextGroupIndex = nextFocusedCellData.groupIndex,\n        nextAllDay = nextFocusedCellData.allDay;\n    return groupIndex === nextGroupIndex && allDay === nextAllDay;\n  };\n\n  _proto._getColumnIndexByCellData = function (cellData, isVerticalGroupOrientation) {\n    var viewDataMap = this._viewDataProvider.viewDataMap;\n    var startDate = cellData.startDate,\n        groupIndex = cellData.groupIndex;\n    var firstRow = viewDataMap[0];\n\n    var startTime = _date.default.trimTime(startDate).getTime();\n\n    for (var columnIndex = 0; columnIndex < firstRow.length; columnIndex += 1) {\n      var _firstRow$columnIndex = firstRow[columnIndex].cellData,\n          currentStartDate = _firstRow$columnIndex.startDate,\n          currentGroupIndex = _firstRow$columnIndex.groupIndex;\n\n      if (startTime === _date.default.trimTime(currentStartDate).getTime() && (groupIndex === currentGroupIndex || isVerticalGroupOrientation)) {\n        return columnIndex;\n      }\n    }\n  };\n\n  _proto._getRowIndexByColumnAndData = function (cellData, columnIndex, isVerticalGroupOrientation) {\n    var viewDataMap = this._viewDataProvider.viewDataMap;\n    var startDate = cellData.startDate,\n        groupIndex = cellData.groupIndex,\n        allDay = cellData.allDay;\n\n    if (allDay && !isVerticalGroupOrientation) {\n      return 0;\n    }\n\n    for (var rowIndex = 0; rowIndex < viewDataMap.length; rowIndex += 1) {\n      var currentCellData = viewDataMap[rowIndex][columnIndex].cellData;\n      var currentStartDate = currentCellData.startDate,\n          currentGroupIndex = currentCellData.groupIndex,\n          currentAllDay = currentCellData.allDay;\n\n      if (startDate.getTime() === currentStartDate.getTime() && groupIndex === currentGroupIndex && allDay === currentAllDay) {\n        return rowIndex;\n      }\n    }\n  };\n\n  _proto._filterCellsByDate = function (cellsRow, firstDate, lastDate) {\n    var firstTime = firstDate.getTime();\n    var lastTime = lastDate.getTime();\n    return cellsRow.filter(function (cell) {\n      var startDate = cell.startDate;\n      var time = startDate.getTime();\n      return firstTime <= time && time <= lastTime;\n    });\n  };\n\n  return VirtualSelectionState;\n}();\n\nexports.default = VirtualSelectionState;\nmodule.exports = exports.default;","map":{"version":3,"sources":["/home/emma/node_modules/devextreme/ui/scheduler/workspaces/virtual_selection_state.js"],"names":["exports","default","_date","_interopRequireDefault","require","obj","__esModule","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","iter","Symbol","iterator","isArray","len","length","i","arr2","VirtualSelectionState","viewDataProvider","_viewDataProvider","_focusedCell","_selectedCells","_firstSelectedCell","_proto","setFocusedCell","rowIndex","columnIndex","isAllDay","cell","getCellData","getFocusedCell","isVerticalGroupOrientation","_getColumnIndexByCellData","_getRowIndexByColumnAndData","coordinates","cellIndex","cellData","setSelectedCells","lastCellCoordinates","_this","firstCellCoordinates","arguments","lastRowIndex","lastColumnIndex","isLastCellAllDay","allDay","firstCell","lastCell","startDate","getTime","_ref","_firstCell","firstStartDate","firstGroupIndex","groupIndex","_lastCell","lastStartDate","cells","getCellsByGroupIndexAndAllDay","filteredCells","reduce","selectedCells","cellsRow","filteredRow","_filterCellsByDate","push","apply","sort","secondCell","getSelectedCells","releaseSelectedAndFocusedCells","releaseSelectedCells","releaseFocusedCell","isValidFocusedCell","nextFocusedCellData","focusedCell","nextGroupIndex","nextAllDay","viewDataMap","firstRow","startTime","trimTime","_firstRow$columnIndex","currentStartDate","currentGroupIndex","currentCellData","currentAllDay","firstDate","lastDate","firstTime","lastTime","filter","time","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/scheduler/workspaces/virtual_selection_state.js)\r\n * Version: 20.2.7\r\n * Build date: Thu Apr 22 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _date = _interopRequireDefault(require(\"../../../core/utils/date\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _toConsumableArray(arr) {\r\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread()\r\n}\r\n\r\nfunction _nonIterableSpread() {\r\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")\r\n}\r\n\r\nfunction _unsupportedIterableToArray(o, minLen) {\r\n    if (!o) {\r\n        return\r\n    }\r\n    if (\"string\" === typeof o) {\r\n        return _arrayLikeToArray(o, minLen)\r\n    }\r\n    var n = Object.prototype.toString.call(o).slice(8, -1);\r\n    if (\"Object\" === n && o.constructor) {\r\n        n = o.constructor.name\r\n    }\r\n    if (\"Map\" === n || \"Set\" === n) {\r\n        return Array.from(o)\r\n    }\r\n    if (\"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) {\r\n        return _arrayLikeToArray(o, minLen)\r\n    }\r\n}\r\n\r\nfunction _iterableToArray(iter) {\r\n    if (\"undefined\" !== typeof Symbol && null != iter[Symbol.iterator] || null != iter[\"@@iterator\"]) {\r\n        return Array.from(iter)\r\n    }\r\n}\r\n\r\nfunction _arrayWithoutHoles(arr) {\r\n    if (Array.isArray(arr)) {\r\n        return _arrayLikeToArray(arr)\r\n    }\r\n}\r\n\r\nfunction _arrayLikeToArray(arr, len) {\r\n    if (null == len || len > arr.length) {\r\n        len = arr.length\r\n    }\r\n    for (var i = 0, arr2 = new Array(len); i < len; i++) {\r\n        arr2[i] = arr[i]\r\n    }\r\n    return arr2\r\n}\r\nvar VirtualSelectionState = function() {\r\n    function VirtualSelectionState(viewDataProvider) {\r\n        this._viewDataProvider = viewDataProvider;\r\n        this._focusedCell = null;\r\n        this._selectedCells = null;\r\n        this._firstSelectedCell = null\r\n    }\r\n    var _proto = VirtualSelectionState.prototype;\r\n    _proto.setFocusedCell = function(rowIndex, columnIndex, isAllDay) {\r\n        if (rowIndex >= 0) {\r\n            var cell = this._viewDataProvider.getCellData(rowIndex, columnIndex, isAllDay);\r\n            this._focusedCell = cell\r\n        }\r\n    };\r\n    _proto.getFocusedCell = function(isVerticalGroupOrientation) {\r\n        var _focusedCell = this._focusedCell;\r\n        if (!_focusedCell) {\r\n            return\r\n        }\r\n        var columnIndex = this._getColumnIndexByCellData(_focusedCell, isVerticalGroupOrientation);\r\n        var rowIndex = this._getRowIndexByColumnAndData(_focusedCell, columnIndex, isVerticalGroupOrientation);\r\n        return {\r\n            coordinates: {\r\n                cellIndex: columnIndex,\r\n                rowIndex: rowIndex\r\n            },\r\n            cellData: _focusedCell\r\n        }\r\n    };\r\n    _proto.setSelectedCells = function(lastCellCoordinates) {\r\n        var _this = this;\r\n        var firstCellCoordinates = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : void 0;\r\n        var viewDataProvider = this._viewDataProvider;\r\n        var lastRowIndex = lastCellCoordinates.rowIndex,\r\n            lastColumnIndex = lastCellCoordinates.columnIndex,\r\n            isLastCellAllDay = lastCellCoordinates.allDay;\r\n        if (lastRowIndex < 0) {\r\n            return\r\n        }\r\n        var firstCell = firstCellCoordinates ? viewDataProvider.getCellData(firstCellCoordinates.rowIndex, firstCellCoordinates.columnIndex, firstCellCoordinates.allDay) : this._firstSelectedCell;\r\n        var lastCell = viewDataProvider.getCellData(lastRowIndex, lastColumnIndex, isLastCellAllDay);\r\n        this._firstSelectedCell = firstCell;\r\n        if (firstCell.startDate.getTime() > lastCell.startDate.getTime()) {\r\n            var _ref = [lastCell, firstCell];\r\n            firstCell = _ref[0];\r\n            lastCell = _ref[1]\r\n        }\r\n        var _firstCell = firstCell,\r\n            firstStartDate = _firstCell.startDate,\r\n            firstGroupIndex = _firstCell.groupIndex;\r\n        var _lastCell = lastCell,\r\n            lastStartDate = _lastCell.startDate;\r\n        var cells = viewDataProvider.getCellsByGroupIndexAndAllDay(firstGroupIndex, isLastCellAllDay);\r\n        var filteredCells = cells.reduce(function(selectedCells, cellsRow) {\r\n            var filteredRow = _this._filterCellsByDate(cellsRow, firstStartDate, lastStartDate);\r\n            selectedCells.push.apply(selectedCells, _toConsumableArray(filteredRow));\r\n            return selectedCells\r\n        }, []);\r\n        this._selectedCells = filteredCells.sort(function(firstCell, secondCell) {\r\n            return firstCell.startDate.getTime() - secondCell.startDate.getTime()\r\n        })\r\n    };\r\n    _proto.getSelectedCells = function() {\r\n        return this._selectedCells\r\n    };\r\n    _proto.releaseSelectedAndFocusedCells = function() {\r\n        this.releaseSelectedCells();\r\n        this.releaseFocusedCell()\r\n    };\r\n    _proto.releaseSelectedCells = function() {\r\n        this._selectedCells = null;\r\n        this._firstSelectedCell = null\r\n    };\r\n    _proto.releaseFocusedCell = function() {\r\n        this._focusedCell = null\r\n    };\r\n    _proto.isValidFocusedCell = function(nextFocusedCellData) {\r\n        var focusedCell = this._focusedCell;\r\n        if (!focusedCell) {\r\n            return true\r\n        }\r\n        var groupIndex = focusedCell.groupIndex,\r\n            allDay = focusedCell.allDay;\r\n        var nextGroupIndex = nextFocusedCellData.groupIndex,\r\n            nextAllDay = nextFocusedCellData.allDay;\r\n        return groupIndex === nextGroupIndex && allDay === nextAllDay\r\n    };\r\n    _proto._getColumnIndexByCellData = function(cellData, isVerticalGroupOrientation) {\r\n        var viewDataMap = this._viewDataProvider.viewDataMap;\r\n        var startDate = cellData.startDate,\r\n            groupIndex = cellData.groupIndex;\r\n        var firstRow = viewDataMap[0];\r\n        var startTime = _date.default.trimTime(startDate).getTime();\r\n        for (var columnIndex = 0; columnIndex < firstRow.length; columnIndex += 1) {\r\n            var _firstRow$columnIndex = firstRow[columnIndex].cellData,\r\n                currentStartDate = _firstRow$columnIndex.startDate,\r\n                currentGroupIndex = _firstRow$columnIndex.groupIndex;\r\n            if (startTime === _date.default.trimTime(currentStartDate).getTime() && (groupIndex === currentGroupIndex || isVerticalGroupOrientation)) {\r\n                return columnIndex\r\n            }\r\n        }\r\n    };\r\n    _proto._getRowIndexByColumnAndData = function(cellData, columnIndex, isVerticalGroupOrientation) {\r\n        var viewDataMap = this._viewDataProvider.viewDataMap;\r\n        var startDate = cellData.startDate,\r\n            groupIndex = cellData.groupIndex,\r\n            allDay = cellData.allDay;\r\n        if (allDay && !isVerticalGroupOrientation) {\r\n            return 0\r\n        }\r\n        for (var rowIndex = 0; rowIndex < viewDataMap.length; rowIndex += 1) {\r\n            var currentCellData = viewDataMap[rowIndex][columnIndex].cellData;\r\n            var currentStartDate = currentCellData.startDate,\r\n                currentGroupIndex = currentCellData.groupIndex,\r\n                currentAllDay = currentCellData.allDay;\r\n            if (startDate.getTime() === currentStartDate.getTime() && groupIndex === currentGroupIndex && allDay === currentAllDay) {\r\n                return rowIndex\r\n            }\r\n        }\r\n    };\r\n    _proto._filterCellsByDate = function(cellsRow, firstDate, lastDate) {\r\n        var firstTime = firstDate.getTime();\r\n        var lastTime = lastDate.getTime();\r\n        return cellsRow.filter(function(cell) {\r\n            var startDate = cell.startDate;\r\n            var time = startDate.getTime();\r\n            return firstTime <= time && time <= lastTime\r\n        })\r\n    };\r\n    return VirtualSelectionState\r\n}();\r\nexports.default = VirtualSelectionState;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}