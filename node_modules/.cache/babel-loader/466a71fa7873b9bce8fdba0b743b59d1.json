{"ast":null,"code":"/**\r\n * DevExtreme (ui/scheduler/shaders/ui.scheduler.current_time_shader.horizontal.js)\r\n * Version: 20.2.7\r\n * Build date: Thu Apr 22 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _position = require(\"../../../core/utils/position\");\n\nvar _uiScheduler = _interopRequireDefault(require(\"../shaders/ui.scheduler.current_time_shader\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function (o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar HorizontalCurrentTimeShader = function (_CurrentTimeShader) {\n  _inheritsLoose(HorizontalCurrentTimeShader, _CurrentTimeShader);\n\n  function HorizontalCurrentTimeShader() {\n    return _CurrentTimeShader.apply(this, arguments) || this;\n  }\n\n  var _proto = HorizontalCurrentTimeShader.prototype;\n\n  _proto.renderShader = function () {\n    var groupCount = this._workSpace._isHorizontalGroupedWorkSpace() ? this._workSpace._getGroupCount() : 1;\n\n    for (var i = 0; i < groupCount; i++) {\n      var isFirstShader = 0 === i;\n      var $shader = isFirstShader ? this._$shader : this.createShader();\n      this.applyShaderMargin($shader);\n\n      if (this._workSpace.isGroupedByDate()) {\n        this._customizeGroupedByDateShader($shader, i);\n      } else {\n        this._customizeShader($shader, i);\n      }\n\n      !isFirstShader && this._shader.push($shader);\n    }\n  };\n\n  _proto._customizeShader = function ($shader, groupIndex) {\n    var shaderWidth = this._workSpace.getIndicationWidth();\n\n    this._applyShaderWidth($shader, shaderWidth);\n\n    if (groupIndex >= 1) {\n      var workSpace = this._workSpace;\n      var indicationWidth = workSpace._getCellCount() * workSpace.getCellWidth();\n      $shader.css(\"left\", indicationWidth);\n    } else {\n      $shader.css(\"left\", 0);\n    }\n  };\n\n  _proto._applyShaderWidth = function ($shader, width) {\n    var maxWidth = (0, _position.getBoundingRect)(this._$container.get(0)).width;\n\n    if (width > maxWidth) {\n      width = maxWidth;\n    }\n\n    if (width > 0) {\n      $shader.width(width);\n    }\n  };\n\n  _proto._customizeGroupedByDateShader = function ($shader, groupIndex) {\n    var cellCount = this._workSpace.getIndicationCellCount();\n\n    var integerPart = Math.floor(cellCount);\n    var fractionPart = cellCount - integerPart;\n    var isFirstShaderPart = 0 === groupIndex;\n    var workSpace = this._workSpace;\n    var shaderWidth = isFirstShaderPart ? workSpace.getIndicationWidth() : fractionPart * workSpace.getCellWidth();\n    var shaderLeft;\n\n    this._applyShaderWidth($shader, shaderWidth);\n\n    if (isFirstShaderPart) {\n      shaderLeft = workSpace._getCellCount() * workSpace.getCellWidth() * groupIndex;\n    } else {\n      shaderLeft = workSpace.getCellWidth() * integerPart * workSpace._getGroupCount() + groupIndex * workSpace.getCellWidth();\n    }\n\n    $shader.css(\"left\", shaderLeft);\n  };\n\n  return HorizontalCurrentTimeShader;\n}(_uiScheduler.default);\n\nvar _default = HorizontalCurrentTimeShader;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["/home/emma/node_modules/devextreme/ui/scheduler/shaders/ui.scheduler.current_time_shader.horizontal.js"],"names":["exports","default","_position","require","_uiScheduler","_interopRequireDefault","obj","__esModule","_inheritsLoose","subClass","superClass","prototype","Object","create","constructor","_setPrototypeOf","o","p","setPrototypeOf","__proto__","HorizontalCurrentTimeShader","_CurrentTimeShader","apply","arguments","_proto","renderShader","groupCount","_workSpace","_isHorizontalGroupedWorkSpace","_getGroupCount","i","isFirstShader","$shader","_$shader","createShader","applyShaderMargin","isGroupedByDate","_customizeGroupedByDateShader","_customizeShader","_shader","push","groupIndex","shaderWidth","getIndicationWidth","_applyShaderWidth","workSpace","indicationWidth","_getCellCount","getCellWidth","css","width","maxWidth","getBoundingRect","_$container","get","cellCount","getIndicationCellCount","integerPart","Math","floor","fractionPart","isFirstShaderPart","shaderLeft","_default","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/scheduler/shaders/ui.scheduler.current_time_shader.horizontal.js)\r\n * Version: 20.2.7\r\n * Build date: Thu Apr 22 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _position = require(\"../../../core/utils/position\");\r\nvar _uiScheduler = _interopRequireDefault(require(\"../shaders/ui.scheduler.current_time_shader\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _inheritsLoose(subClass, superClass) {\r\n    subClass.prototype = Object.create(superClass.prototype);\r\n    subClass.prototype.constructor = subClass;\r\n    _setPrototypeOf(subClass, superClass)\r\n}\r\n\r\nfunction _setPrototypeOf(o, p) {\r\n    _setPrototypeOf = Object.setPrototypeOf || function(o, p) {\r\n        o.__proto__ = p;\r\n        return o\r\n    };\r\n    return _setPrototypeOf(o, p)\r\n}\r\nvar HorizontalCurrentTimeShader = function(_CurrentTimeShader) {\r\n    _inheritsLoose(HorizontalCurrentTimeShader, _CurrentTimeShader);\r\n\r\n    function HorizontalCurrentTimeShader() {\r\n        return _CurrentTimeShader.apply(this, arguments) || this\r\n    }\r\n    var _proto = HorizontalCurrentTimeShader.prototype;\r\n    _proto.renderShader = function() {\r\n        var groupCount = this._workSpace._isHorizontalGroupedWorkSpace() ? this._workSpace._getGroupCount() : 1;\r\n        for (var i = 0; i < groupCount; i++) {\r\n            var isFirstShader = 0 === i;\r\n            var $shader = isFirstShader ? this._$shader : this.createShader();\r\n            this.applyShaderMargin($shader);\r\n            if (this._workSpace.isGroupedByDate()) {\r\n                this._customizeGroupedByDateShader($shader, i)\r\n            } else {\r\n                this._customizeShader($shader, i)\r\n            }!isFirstShader && this._shader.push($shader)\r\n        }\r\n    };\r\n    _proto._customizeShader = function($shader, groupIndex) {\r\n        var shaderWidth = this._workSpace.getIndicationWidth();\r\n        this._applyShaderWidth($shader, shaderWidth);\r\n        if (groupIndex >= 1) {\r\n            var workSpace = this._workSpace;\r\n            var indicationWidth = workSpace._getCellCount() * workSpace.getCellWidth();\r\n            $shader.css(\"left\", indicationWidth)\r\n        } else {\r\n            $shader.css(\"left\", 0)\r\n        }\r\n    };\r\n    _proto._applyShaderWidth = function($shader, width) {\r\n        var maxWidth = (0, _position.getBoundingRect)(this._$container.get(0)).width;\r\n        if (width > maxWidth) {\r\n            width = maxWidth\r\n        }\r\n        if (width > 0) {\r\n            $shader.width(width)\r\n        }\r\n    };\r\n    _proto._customizeGroupedByDateShader = function($shader, groupIndex) {\r\n        var cellCount = this._workSpace.getIndicationCellCount();\r\n        var integerPart = Math.floor(cellCount);\r\n        var fractionPart = cellCount - integerPart;\r\n        var isFirstShaderPart = 0 === groupIndex;\r\n        var workSpace = this._workSpace;\r\n        var shaderWidth = isFirstShaderPart ? workSpace.getIndicationWidth() : fractionPart * workSpace.getCellWidth();\r\n        var shaderLeft;\r\n        this._applyShaderWidth($shader, shaderWidth);\r\n        if (isFirstShaderPart) {\r\n            shaderLeft = workSpace._getCellCount() * workSpace.getCellWidth() * groupIndex\r\n        } else {\r\n            shaderLeft = workSpace.getCellWidth() * integerPart * workSpace._getGroupCount() + groupIndex * workSpace.getCellWidth()\r\n        }\r\n        $shader.css(\"left\", shaderLeft)\r\n    };\r\n    return HorizontalCurrentTimeShader\r\n}(_uiScheduler.default);\r\nvar _default = HorizontalCurrentTimeShader;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}