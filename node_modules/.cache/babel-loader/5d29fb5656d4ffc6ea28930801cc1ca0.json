{"ast":null,"code":"/**\r\n * DevExtreme (ui/calendar/ui.calendar.base_view.js)\r\n * Version: 20.2.7\r\n * Build date: Thu Apr 22 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\n\nvar _dom_adapter = _interopRequireDefault(require(\"../../core/dom_adapter\"));\n\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\n\nvar _element_data = require(\"../../core/element_data\");\n\nvar _element = require(\"../../core/element\");\n\nvar _ui = _interopRequireDefault(require(\"../widget/ui.widget\"));\n\nvar _date = _interopRequireDefault(require(\"../../core/utils/date\"));\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _common = require(\"../../core/utils/common\");\n\nvar _date_serialization = _interopRequireDefault(require(\"../../core/utils/date_serialization\"));\n\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\n\nvar _index = require(\"../../events/utils/index\");\n\nvar _click = require(\"../../events/click\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar abstract = _ui.default.abstract;\nvar CALENDAR_OTHER_VIEW_CLASS = \"dx-calendar-other-view\";\nvar CALENDAR_CELL_CLASS = \"dx-calendar-cell\";\nvar CALENDAR_EMPTY_CELL_CLASS = \"dx-calendar-empty-cell\";\nvar CALENDAR_TODAY_CLASS = \"dx-calendar-today\";\nvar CALENDAR_SELECTED_DATE_CLASS = \"dx-calendar-selected-date\";\nvar CALENDAR_CONTOURED_DATE_CLASS = \"dx-calendar-contoured-date\";\nvar CALENDAR_DXCLICK_EVENT_NAME = (0, _index.addNamespace)(_click.name, \"dxCalendar\");\nvar CALENDAR_DATE_VALUE_KEY = \"dxDateValueKey\";\n\nvar BaseView = _ui.default.inherit({\n  _getViewName: function _getViewName() {\n    return \"base\";\n  },\n  _getDefaultOptions: function _getDefaultOptions() {\n    return (0, _extend.extend)(this.callBase(), {\n      date: new Date(),\n      focusStateEnabled: false,\n      cellTemplate: null,\n      disabledDates: null,\n      onCellClick: null,\n      rowCount: 3,\n      colCount: 4,\n      allowValueSelection: true,\n      _todayDate: function _todayDate() {\n        return new Date();\n      }\n    });\n  },\n  _initMarkup: function _initMarkup() {\n    this.callBase();\n\n    this._renderImpl();\n  },\n  _renderImpl: function _renderImpl() {\n    this.$element().append(this._createTable());\n\n    this._createDisabledDatesHandler();\n\n    this._renderBody();\n\n    this._renderContouredDate();\n\n    this._renderValue();\n\n    this._renderEvents();\n  },\n  _createTable: function _createTable() {\n    this._$table = (0, _renderer.default)(\"<table>\");\n    this.setAria({\n      label: _message.default.format(\"dxCalendar-ariaWidgetName\"),\n      role: \"grid\"\n    }, this._$table);\n    return this._$table;\n  },\n  _renderBody: function _renderBody() {\n    this.$body = (0, _renderer.default)(\"<tbody>\").appendTo(this._$table);\n    var rowData = {\n      cellDate: this._getFirstCellData(),\n      prevCellDate: null\n    };\n\n    for (var rowIndex = 0, rowCount = this.option(\"rowCount\"); rowIndex < rowCount; rowIndex++) {\n      rowData.row = this._createRow();\n\n      for (var colIndex = 0, colCount = this.option(\"colCount\"); colIndex < colCount; colIndex++) {\n        this._renderCell(rowData, colIndex);\n      }\n    }\n  },\n  _createRow: function _createRow() {\n    var row = _dom_adapter.default.createElement(\"tr\");\n\n    this.setAria(\"role\", \"row\", (0, _renderer.default)(row));\n    this.$body.get(0).appendChild(row);\n    return row;\n  },\n  _appendCell: function _appendCell(row, cell) {\n    if (!this._appendMethodName) {\n      this._cacheAppendMethodName();\n    }\n\n    (0, _renderer.default)(row)[this._appendMethodName](cell);\n  },\n  _cacheAppendMethodName: function _cacheAppendMethodName(rtlEnabled) {\n    this._appendMethodName = (null !== rtlEnabled && void 0 !== rtlEnabled ? rtlEnabled : this.option(\"rtlEnabled\")) ? \"prepend\" : \"append\";\n  },\n  _createCell: function _createCell(cellDate) {\n    var cell = _dom_adapter.default.createElement(\"td\");\n\n    var $cell = (0, _renderer.default)(cell);\n    cell.className = this._getClassNameByDate(cellDate);\n    cell.setAttribute(\"data-value\", _date_serialization.default.serializeDate(cellDate, _date.default.getShortDateFormat()));\n    (0, _element_data.data)(cell, CALENDAR_DATE_VALUE_KEY, cellDate);\n    this.setAria({\n      role: \"gridcell\",\n      label: this.getCellAriaLabel(cellDate)\n    }, $cell);\n    return {\n      cell: cell,\n      $cell: $cell\n    };\n  },\n  _renderCell: function _renderCell(params, cellIndex) {\n    var cellDate = params.cellDate,\n        prevCellDate = params.prevCellDate,\n        row = params.row;\n\n    if (prevCellDate) {\n      _date.default.fixTimezoneGap(prevCellDate, cellDate);\n    }\n\n    params.prevCellDate = cellDate;\n\n    var _this$_createCell = this._createCell(cellDate),\n        cell = _this$_createCell.cell,\n        $cell = _this$_createCell.$cell;\n\n    var cellTemplate = this.option(\"cellTemplate\");\n\n    this._appendCell(row, cell);\n\n    if (cellTemplate) {\n      cellTemplate.render(this._prepareCellTemplateData(cellDate, cellIndex, $cell));\n    } else {\n      cell.innerHTML = this._getCellText(cellDate);\n    }\n\n    params.cellDate = this._getNextCellData(cellDate);\n  },\n  _getClassNameByDate: function _getClassNameByDate(cellDate) {\n    var className = CALENDAR_CELL_CLASS;\n\n    if (this._isTodayCell(cellDate)) {\n      className += \" \".concat(CALENDAR_TODAY_CLASS);\n    }\n\n    if (this._isDateOutOfRange(cellDate) || this.isDateDisabled(cellDate)) {\n      className += \" \".concat(CALENDAR_EMPTY_CELL_CLASS);\n    }\n\n    if (this._isOtherView(cellDate)) {\n      className += \" \".concat(CALENDAR_OTHER_VIEW_CLASS);\n    }\n\n    return className;\n  },\n  _prepareCellTemplateData: function _prepareCellTemplateData(cellDate, cellIndex, $cell) {\n    return {\n      model: {\n        text: this._getCellText(cellDate),\n        date: cellDate,\n        view: this._getViewName()\n      },\n      container: (0, _element.getPublicElement)($cell),\n      index: cellIndex\n    };\n  },\n  _renderEvents: function _renderEvents() {\n    var _this = this;\n\n    this._createCellClickAction();\n\n    _events_engine.default.off(this._$table, CALENDAR_DXCLICK_EVENT_NAME);\n\n    _events_engine.default.on(this._$table, CALENDAR_DXCLICK_EVENT_NAME, \"td\", function (e) {\n      if (!(0, _renderer.default)(e.currentTarget).hasClass(CALENDAR_EMPTY_CELL_CLASS)) {\n        _this._cellClickAction({\n          event: e,\n          value: (0, _renderer.default)(e.currentTarget).data(CALENDAR_DATE_VALUE_KEY)\n        });\n      }\n    });\n  },\n  _createCellClickAction: function _createCellClickAction() {\n    this._cellClickAction = this._createActionByOption(\"onCellClick\");\n  },\n  _createDisabledDatesHandler: function _createDisabledDatesHandler() {\n    var disabledDates = this.option(\"disabledDates\");\n    this._disabledDatesHandler = Array.isArray(disabledDates) ? this._getDefaultDisabledDatesHandler(disabledDates) : disabledDates || _common.noop;\n  },\n  _getDefaultDisabledDatesHandler: function _getDefaultDisabledDatesHandler(disabledDates) {\n    return _common.noop;\n  },\n  _isTodayCell: abstract,\n  _isDateOutOfRange: abstract,\n  isDateDisabled: function isDateDisabled(cellDate) {\n    var dateParts = {\n      date: cellDate,\n      view: this._getViewName()\n    };\n    return this._disabledDatesHandler(dateParts);\n  },\n  _isOtherView: abstract,\n  _getCellText: abstract,\n  _getFirstCellData: abstract,\n  _getNextCellData: abstract,\n  _renderContouredDate: function _renderContouredDate(contouredDate) {\n    if (!this.option(\"focusStateEnabled\")) {\n      return;\n    }\n\n    contouredDate = contouredDate || this.option(\"contouredDate\");\n\n    var $oldContouredCell = this._getContouredCell();\n\n    var $newContouredCell = this._getCellByDate(contouredDate);\n\n    $oldContouredCell.removeClass(CALENDAR_CONTOURED_DATE_CLASS);\n    $newContouredCell.addClass(CALENDAR_CONTOURED_DATE_CLASS);\n  },\n  _getContouredCell: function _getContouredCell() {\n    return this._$table.find(\".\".concat(CALENDAR_CONTOURED_DATE_CLASS));\n  },\n  _changeValue: function _changeValue(cellDate) {\n    if (cellDate) {\n      var value = this.option(\"value\");\n      var newValue = value ? new Date(value) : new Date();\n      newValue.setDate(cellDate.getDate());\n      newValue.setMonth(cellDate.getMonth());\n      newValue.setFullYear(cellDate.getFullYear());\n      newValue.setDate(cellDate.getDate());\n      this.option(\"value\", newValue);\n    } else {\n      this.option(\"value\", null);\n    }\n  },\n  _renderValue: function _renderValue() {\n    if (!this.option(\"allowValueSelection\")) {\n      return;\n    }\n\n    var value = this.option(\"value\");\n\n    var selectedCell = this._getCellByDate(value);\n\n    if (this._selectedCell) {\n      this._selectedCell.removeClass(CALENDAR_SELECTED_DATE_CLASS);\n    }\n\n    selectedCell.addClass(CALENDAR_SELECTED_DATE_CLASS);\n    this._selectedCell = selectedCell;\n  },\n  getCellAriaLabel: function getCellAriaLabel(date) {\n    return this._getCellText(date);\n  },\n  _getFirstAvailableDate: function _getFirstAvailableDate() {\n    var date = this.option(\"date\");\n    var min = this.option(\"min\");\n    date = _date.default.getFirstDateView(this._getViewName(), date);\n    return new Date(min && date < min ? min : date);\n  },\n  _getCellByDate: abstract,\n  isBoundary: abstract,\n  _optionChanged: function _optionChanged(args) {\n    var name = args.name,\n        value = args.value;\n\n    switch (name) {\n      case \"value\":\n        this._renderValue();\n\n        break;\n\n      case \"contouredDate\":\n        this._renderContouredDate(value);\n\n        break;\n\n      case \"onCellClick\":\n        this._createCellClickAction();\n\n        break;\n\n      case \"disabledDates\":\n      case \"cellTemplate\":\n        this._invalidate();\n\n        break;\n\n      case \"rtlEnabled\":\n        this._cacheAppendMethodName(value);\n\n        this.callBase(args);\n        break;\n\n      case \"_todayDate\":\n        this._renderBody();\n\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  }\n});\n\nvar _default = BaseView;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["/home/emma/node_modules/devextreme/ui/calendar/ui.calendar.base_view.js"],"names":["exports","default","_renderer","_interopRequireDefault","require","_dom_adapter","_events_engine","_element_data","_element","_ui","_date","_extend","_common","_date_serialization","_message","_index","_click","obj","__esModule","abstract","CALENDAR_OTHER_VIEW_CLASS","CALENDAR_CELL_CLASS","CALENDAR_EMPTY_CELL_CLASS","CALENDAR_TODAY_CLASS","CALENDAR_SELECTED_DATE_CLASS","CALENDAR_CONTOURED_DATE_CLASS","CALENDAR_DXCLICK_EVENT_NAME","addNamespace","name","CALENDAR_DATE_VALUE_KEY","BaseView","inherit","_getViewName","_getDefaultOptions","extend","callBase","date","Date","focusStateEnabled","cellTemplate","disabledDates","onCellClick","rowCount","colCount","allowValueSelection","_todayDate","_initMarkup","_renderImpl","$element","append","_createTable","_createDisabledDatesHandler","_renderBody","_renderContouredDate","_renderValue","_renderEvents","_$table","setAria","label","format","role","$body","appendTo","rowData","cellDate","_getFirstCellData","prevCellDate","rowIndex","option","row","_createRow","colIndex","_renderCell","createElement","get","appendChild","_appendCell","cell","_appendMethodName","_cacheAppendMethodName","rtlEnabled","_createCell","$cell","className","_getClassNameByDate","setAttribute","serializeDate","getShortDateFormat","data","getCellAriaLabel","params","cellIndex","fixTimezoneGap","_this$_createCell","render","_prepareCellTemplateData","innerHTML","_getCellText","_getNextCellData","_isTodayCell","concat","_isDateOutOfRange","isDateDisabled","_isOtherView","model","text","view","container","getPublicElement","index","_this","_createCellClickAction","off","on","e","currentTarget","hasClass","_cellClickAction","event","value","_createActionByOption","_disabledDatesHandler","Array","isArray","_getDefaultDisabledDatesHandler","noop","dateParts","contouredDate","$oldContouredCell","_getContouredCell","$newContouredCell","_getCellByDate","removeClass","addClass","find","_changeValue","newValue","setDate","getDate","setMonth","getMonth","setFullYear","getFullYear","selectedCell","_selectedCell","_getFirstAvailableDate","min","getFirstDateView","isBoundary","_optionChanged","args","_invalidate","_default","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/calendar/ui.calendar.base_view.js)\r\n * Version: 20.2.7\r\n * Build date: Thu Apr 22 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _dom_adapter = _interopRequireDefault(require(\"../../core/dom_adapter\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _element_data = require(\"../../core/element_data\");\r\nvar _element = require(\"../../core/element\");\r\nvar _ui = _interopRequireDefault(require(\"../widget/ui.widget\"));\r\nvar _date = _interopRequireDefault(require(\"../../core/utils/date\"));\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _date_serialization = _interopRequireDefault(require(\"../../core/utils/date_serialization\"));\r\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _click = require(\"../../events/click\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar abstract = _ui.default.abstract;\r\nvar CALENDAR_OTHER_VIEW_CLASS = \"dx-calendar-other-view\";\r\nvar CALENDAR_CELL_CLASS = \"dx-calendar-cell\";\r\nvar CALENDAR_EMPTY_CELL_CLASS = \"dx-calendar-empty-cell\";\r\nvar CALENDAR_TODAY_CLASS = \"dx-calendar-today\";\r\nvar CALENDAR_SELECTED_DATE_CLASS = \"dx-calendar-selected-date\";\r\nvar CALENDAR_CONTOURED_DATE_CLASS = \"dx-calendar-contoured-date\";\r\nvar CALENDAR_DXCLICK_EVENT_NAME = (0, _index.addNamespace)(_click.name, \"dxCalendar\");\r\nvar CALENDAR_DATE_VALUE_KEY = \"dxDateValueKey\";\r\nvar BaseView = _ui.default.inherit({\r\n    _getViewName: function() {\r\n        return \"base\"\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            date: new Date,\r\n            focusStateEnabled: false,\r\n            cellTemplate: null,\r\n            disabledDates: null,\r\n            onCellClick: null,\r\n            rowCount: 3,\r\n            colCount: 4,\r\n            allowValueSelection: true,\r\n            _todayDate: function() {\r\n                return new Date\r\n            }\r\n        })\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this._renderImpl()\r\n    },\r\n    _renderImpl: function() {\r\n        this.$element().append(this._createTable());\r\n        this._createDisabledDatesHandler();\r\n        this._renderBody();\r\n        this._renderContouredDate();\r\n        this._renderValue();\r\n        this._renderEvents()\r\n    },\r\n    _createTable: function() {\r\n        this._$table = (0, _renderer.default)(\"<table>\");\r\n        this.setAria({\r\n            label: _message.default.format(\"dxCalendar-ariaWidgetName\"),\r\n            role: \"grid\"\r\n        }, this._$table);\r\n        return this._$table\r\n    },\r\n    _renderBody: function() {\r\n        this.$body = (0, _renderer.default)(\"<tbody>\").appendTo(this._$table);\r\n        var rowData = {\r\n            cellDate: this._getFirstCellData(),\r\n            prevCellDate: null\r\n        };\r\n        for (var rowIndex = 0, rowCount = this.option(\"rowCount\"); rowIndex < rowCount; rowIndex++) {\r\n            rowData.row = this._createRow();\r\n            for (var colIndex = 0, colCount = this.option(\"colCount\"); colIndex < colCount; colIndex++) {\r\n                this._renderCell(rowData, colIndex)\r\n            }\r\n        }\r\n    },\r\n    _createRow: function() {\r\n        var row = _dom_adapter.default.createElement(\"tr\");\r\n        this.setAria(\"role\", \"row\", (0, _renderer.default)(row));\r\n        this.$body.get(0).appendChild(row);\r\n        return row\r\n    },\r\n    _appendCell: function(row, cell) {\r\n        if (!this._appendMethodName) {\r\n            this._cacheAppendMethodName()\r\n        }(0, _renderer.default)(row)[this._appendMethodName](cell)\r\n    },\r\n    _cacheAppendMethodName: function(rtlEnabled) {\r\n        this._appendMethodName = (null !== rtlEnabled && void 0 !== rtlEnabled ? rtlEnabled : this.option(\"rtlEnabled\")) ? \"prepend\" : \"append\"\r\n    },\r\n    _createCell: function(cellDate) {\r\n        var cell = _dom_adapter.default.createElement(\"td\");\r\n        var $cell = (0, _renderer.default)(cell);\r\n        cell.className = this._getClassNameByDate(cellDate);\r\n        cell.setAttribute(\"data-value\", _date_serialization.default.serializeDate(cellDate, _date.default.getShortDateFormat()));\r\n        (0, _element_data.data)(cell, CALENDAR_DATE_VALUE_KEY, cellDate);\r\n        this.setAria({\r\n            role: \"gridcell\",\r\n            label: this.getCellAriaLabel(cellDate)\r\n        }, $cell);\r\n        return {\r\n            cell: cell,\r\n            $cell: $cell\r\n        }\r\n    },\r\n    _renderCell: function(params, cellIndex) {\r\n        var cellDate = params.cellDate,\r\n            prevCellDate = params.prevCellDate,\r\n            row = params.row;\r\n        if (prevCellDate) {\r\n            _date.default.fixTimezoneGap(prevCellDate, cellDate)\r\n        }\r\n        params.prevCellDate = cellDate;\r\n        var _this$_createCell = this._createCell(cellDate),\r\n            cell = _this$_createCell.cell,\r\n            $cell = _this$_createCell.$cell;\r\n        var cellTemplate = this.option(\"cellTemplate\");\r\n        this._appendCell(row, cell);\r\n        if (cellTemplate) {\r\n            cellTemplate.render(this._prepareCellTemplateData(cellDate, cellIndex, $cell))\r\n        } else {\r\n            cell.innerHTML = this._getCellText(cellDate)\r\n        }\r\n        params.cellDate = this._getNextCellData(cellDate)\r\n    },\r\n    _getClassNameByDate: function(cellDate) {\r\n        var className = CALENDAR_CELL_CLASS;\r\n        if (this._isTodayCell(cellDate)) {\r\n            className += \" \".concat(CALENDAR_TODAY_CLASS)\r\n        }\r\n        if (this._isDateOutOfRange(cellDate) || this.isDateDisabled(cellDate)) {\r\n            className += \" \".concat(CALENDAR_EMPTY_CELL_CLASS)\r\n        }\r\n        if (this._isOtherView(cellDate)) {\r\n            className += \" \".concat(CALENDAR_OTHER_VIEW_CLASS)\r\n        }\r\n        return className\r\n    },\r\n    _prepareCellTemplateData: function(cellDate, cellIndex, $cell) {\r\n        return {\r\n            model: {\r\n                text: this._getCellText(cellDate),\r\n                date: cellDate,\r\n                view: this._getViewName()\r\n            },\r\n            container: (0, _element.getPublicElement)($cell),\r\n            index: cellIndex\r\n        }\r\n    },\r\n    _renderEvents: function() {\r\n        var _this = this;\r\n        this._createCellClickAction();\r\n        _events_engine.default.off(this._$table, CALENDAR_DXCLICK_EVENT_NAME);\r\n        _events_engine.default.on(this._$table, CALENDAR_DXCLICK_EVENT_NAME, \"td\", function(e) {\r\n            if (!(0, _renderer.default)(e.currentTarget).hasClass(CALENDAR_EMPTY_CELL_CLASS)) {\r\n                _this._cellClickAction({\r\n                    event: e,\r\n                    value: (0, _renderer.default)(e.currentTarget).data(CALENDAR_DATE_VALUE_KEY)\r\n                })\r\n            }\r\n        })\r\n    },\r\n    _createCellClickAction: function() {\r\n        this._cellClickAction = this._createActionByOption(\"onCellClick\")\r\n    },\r\n    _createDisabledDatesHandler: function() {\r\n        var disabledDates = this.option(\"disabledDates\");\r\n        this._disabledDatesHandler = Array.isArray(disabledDates) ? this._getDefaultDisabledDatesHandler(disabledDates) : disabledDates || _common.noop\r\n    },\r\n    _getDefaultDisabledDatesHandler: function(disabledDates) {\r\n        return _common.noop\r\n    },\r\n    _isTodayCell: abstract,\r\n    _isDateOutOfRange: abstract,\r\n    isDateDisabled: function(cellDate) {\r\n        var dateParts = {\r\n            date: cellDate,\r\n            view: this._getViewName()\r\n        };\r\n        return this._disabledDatesHandler(dateParts)\r\n    },\r\n    _isOtherView: abstract,\r\n    _getCellText: abstract,\r\n    _getFirstCellData: abstract,\r\n    _getNextCellData: abstract,\r\n    _renderContouredDate: function(contouredDate) {\r\n        if (!this.option(\"focusStateEnabled\")) {\r\n            return\r\n        }\r\n        contouredDate = contouredDate || this.option(\"contouredDate\");\r\n        var $oldContouredCell = this._getContouredCell();\r\n        var $newContouredCell = this._getCellByDate(contouredDate);\r\n        $oldContouredCell.removeClass(CALENDAR_CONTOURED_DATE_CLASS);\r\n        $newContouredCell.addClass(CALENDAR_CONTOURED_DATE_CLASS)\r\n    },\r\n    _getContouredCell: function() {\r\n        return this._$table.find(\".\".concat(CALENDAR_CONTOURED_DATE_CLASS))\r\n    },\r\n    _changeValue: function(cellDate) {\r\n        if (cellDate) {\r\n            var value = this.option(\"value\");\r\n            var newValue = value ? new Date(value) : new Date;\r\n            newValue.setDate(cellDate.getDate());\r\n            newValue.setMonth(cellDate.getMonth());\r\n            newValue.setFullYear(cellDate.getFullYear());\r\n            newValue.setDate(cellDate.getDate());\r\n            this.option(\"value\", newValue)\r\n        } else {\r\n            this.option(\"value\", null)\r\n        }\r\n    },\r\n    _renderValue: function() {\r\n        if (!this.option(\"allowValueSelection\")) {\r\n            return\r\n        }\r\n        var value = this.option(\"value\");\r\n        var selectedCell = this._getCellByDate(value);\r\n        if (this._selectedCell) {\r\n            this._selectedCell.removeClass(CALENDAR_SELECTED_DATE_CLASS)\r\n        }\r\n        selectedCell.addClass(CALENDAR_SELECTED_DATE_CLASS);\r\n        this._selectedCell = selectedCell\r\n    },\r\n    getCellAriaLabel: function(date) {\r\n        return this._getCellText(date)\r\n    },\r\n    _getFirstAvailableDate: function() {\r\n        var date = this.option(\"date\");\r\n        var min = this.option(\"min\");\r\n        date = _date.default.getFirstDateView(this._getViewName(), date);\r\n        return new Date(min && date < min ? min : date)\r\n    },\r\n    _getCellByDate: abstract,\r\n    isBoundary: abstract,\r\n    _optionChanged: function(args) {\r\n        var name = args.name,\r\n            value = args.value;\r\n        switch (name) {\r\n            case \"value\":\r\n                this._renderValue();\r\n                break;\r\n            case \"contouredDate\":\r\n                this._renderContouredDate(value);\r\n                break;\r\n            case \"onCellClick\":\r\n                this._createCellClickAction();\r\n                break;\r\n            case \"disabledDates\":\r\n            case \"cellTemplate\":\r\n                this._invalidate();\r\n                break;\r\n            case \"rtlEnabled\":\r\n                this._cacheAppendMethodName(value);\r\n                this.callBase(args);\r\n                break;\r\n            case \"_todayDate\":\r\n                this._renderBody();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nvar _default = BaseView;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}