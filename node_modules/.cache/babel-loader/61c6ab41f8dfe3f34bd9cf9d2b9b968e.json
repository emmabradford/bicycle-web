{"ast":null,"code":"/**\r\n * DevExtreme (ui/scheduler/workspaces/ui.scheduler.work_space.indicator.js)\r\n * Version: 20.2.7\r\n * Build date: Thu Apr 22 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _renderer = _interopRequireDefault(require(\"../../../core/renderer\"));\n\nvar _uiScheduler = _interopRequireDefault(require(\"./ui.scheduler.work_space\"));\n\nvar _component_registrator = _interopRequireDefault(require(\"../../../core/component_registrator\"));\n\nvar _date = _interopRequireDefault(require(\"../../../core/utils/date\"));\n\nvar _extend = require(\"../../../core/utils/extend\");\n\nvar _position = require(\"../../../core/utils/position\");\n\nvar _window = require(\"../../../core/utils/window\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function (o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar toMs = _date.default.dateToMilliseconds;\nvar SCHEDULER_DATE_TIME_INDICATOR_CLASS = \"dx-scheduler-date-time-indicator\";\nvar TIME_PANEL_CURRENT_TIME_CELL_CLASS = \"dx-scheduler-time-panel-current-time-cell\";\nvar HEADER_CURRENT_TIME_CELL_CLASS = \"dx-scheduler-header-panel-current-time-cell\";\n\nvar SchedulerWorkSpaceIndicator = function (_SchedulerWorkSpace) {\n  _inheritsLoose(SchedulerWorkSpaceIndicator, _SchedulerWorkSpace);\n\n  function SchedulerWorkSpaceIndicator() {\n    return _SchedulerWorkSpace.apply(this, arguments) || this;\n  }\n\n  var _proto = SchedulerWorkSpaceIndicator.prototype;\n\n  _proto._getTimeZoneCalculator = function () {\n    return this.invoke(\"getTimeZoneCalculator\");\n  };\n\n  _proto._getToday = function () {\n    var todayDate = this.option(\"indicatorTime\") || new Date();\n\n    var timeZoneCalculator = this._getTimeZoneCalculator();\n\n    return (null === timeZoneCalculator || void 0 === timeZoneCalculator ? void 0 : timeZoneCalculator.createDate(todayDate, {\n      path: \"toGrid\"\n    })) || todayDate;\n  };\n\n  _proto.isIndicationOnView = function () {\n    if (this.option(\"showCurrentTimeIndicator\")) {\n      var today = this._getToday();\n\n      var endViewDate = _date.default.trimTime(this.getEndViewDate());\n\n      return _date.default.dateInRange(today, this._firstViewDate, new Date(endViewDate.getTime() + toMs(\"day\")));\n    }\n\n    return false;\n  };\n\n  _proto.isIndicationAvailable = function () {\n    if (!(0, _window.hasWindow)()) {\n      return false;\n    }\n\n    var today = this._getToday();\n\n    return today >= _date.default.trimTime(new Date(this.getStartViewDate()));\n  };\n\n  _proto.isIndicatorVisible = function () {\n    var today = this._getToday();\n\n    var endViewDate = new Date(this.getEndViewDate().getTime() + this._getEndViewDateTimeDiff() - 1);\n    var firstViewDate = new Date(this.getStartViewDate());\n    firstViewDate.setFullYear(today.getFullYear(), today.getMonth(), today.getDate());\n    endViewDate.setFullYear(today.getFullYear(), today.getMonth(), today.getDate());\n    return _date.default.dateInRange(today, firstViewDate, endViewDate);\n  };\n\n  _proto._renderDateTimeIndication = function () {\n    if (this.isIndicationAvailable()) {\n      if (this.option(\"shadeUntilCurrentTime\")) {\n        this._shader.render();\n      }\n\n      if (this.isIndicationOnView() && this.isIndicatorVisible()) {\n        var groupCount = this._getGroupCount() || 1;\n\n        var $container = this._dateTableScrollable.$content();\n\n        var height = this.getIndicationHeight();\n\n        var rtlOffset = this._getRtlOffset(this.getCellWidth());\n\n        this._renderIndicator(height, rtlOffset, $container, groupCount);\n      }\n    }\n  };\n\n  _proto._renderIndicator = function (height, rtlOffset, $container, groupCount) {\n    var groupedByDate = this.isGroupedByDate();\n    var repeatCount = groupedByDate ? 1 : groupCount;\n\n    for (var i = 0; i < repeatCount; i++) {\n      var $indicator = this._createIndicator($container);\n\n      $indicator.width(groupedByDate ? this.getCellWidth() * groupCount : this.getCellWidth());\n\n      this._groupedStrategy.shiftIndicator($indicator, height, rtlOffset, i);\n    }\n  };\n\n  _proto._createIndicator = function ($container) {\n    var $indicator = (0, _renderer.default)(\"<div>\").addClass(SCHEDULER_DATE_TIME_INDICATOR_CLASS);\n    $container.append($indicator);\n    return $indicator;\n  };\n\n  _proto._getRtlOffset = function (width) {\n    return this.option(\"rtlEnabled\") ? (0, _position.getBoundingRect)(this._dateTableScrollable.$content().get(0)).width - this.getTimePanelWidth() - width : 0;\n  };\n\n  _proto._setIndicationUpdateInterval = function () {\n    if (!this.option(\"showCurrentTimeIndicator\") || 0 === this.option(\"indicatorUpdateInterval\")) {\n      return;\n    }\n\n    this._clearIndicatorUpdateInterval();\n\n    this._indicatorInterval = setInterval(function () {\n      this._refreshDateTimeIndication();\n    }.bind(this), this.option(\"indicatorUpdateInterval\"));\n  };\n\n  _proto._clearIndicatorUpdateInterval = function () {\n    if (this._indicatorInterval) {\n      clearInterval(this._indicatorInterval);\n      delete this._indicatorInterval;\n    }\n  };\n\n  _proto._isVerticalShader = function () {\n    return true;\n  };\n\n  _proto.getIndicationWidth = function (groupIndex) {\n    var maxWidth = this.getCellWidth() * this._getCellCount();\n\n    var difference = this._getIndicatorDuration();\n\n    if (difference > this._getCellCount()) {\n      difference = this._getCellCount();\n    }\n\n    var width = difference * this.getRoundedCellWidth(groupIndex, groupIndex * this._getCellCount(), difference);\n    return maxWidth < width ? maxWidth : width;\n  };\n\n  _proto.getIndicatorOffset = function (groupIndex) {\n    var difference = this._getIndicatorDuration() - 1;\n    var offset = difference * this.getRoundedCellWidth(groupIndex, groupIndex * this._getCellCount(), difference);\n    return offset;\n  };\n\n  _proto._getIndicatorDuration = function () {\n    var today = this._getToday();\n\n    var firstViewDate = new Date(this._firstViewDate);\n    var timeDiff = today.getTime() - firstViewDate.getTime();\n\n    if (\"workWeek\" === this.option(\"type\")) {\n      timeDiff -= this._getWeekendsCount(Math.round(timeDiff / toMs(\"day\"))) * toMs(\"day\");\n    }\n\n    return Math.ceil((timeDiff + 1) / toMs(\"day\"));\n  };\n\n  _proto.getIndicationHeight = function () {\n    var today = this._getToday();\n\n    var cellHeight = this.getCellHeight();\n    var date = new Date(this._firstViewDate);\n\n    if (this.isIndicationOnView()) {\n      date.setFullYear(today.getFullYear(), today.getMonth(), today.getDate());\n    }\n\n    var duration = today.getTime() - date.getTime();\n    var cellCount = duration / this.getCellDuration();\n    return cellCount * cellHeight;\n  };\n\n  _proto._dispose = function () {\n    this._clearIndicatorUpdateInterval();\n\n    _SchedulerWorkSpace.prototype._dispose.apply(this, arguments);\n  };\n\n  _proto._refreshDateTimeIndication = function () {\n    this._cleanDateTimeIndicator();\n\n    this._shader && this._shader.clean();\n\n    this._renderDateTimeIndication();\n  };\n\n  _proto._isCurrentTime = function (date) {\n    if (this.isIndicationOnView()) {\n      var today = this._getToday();\n\n      var result = false;\n      date = new Date(date);\n      date.setFullYear(today.getFullYear(), today.getMonth(), today.getDate());\n      var startCellDate = new Date(date);\n      var endCellDate = new Date(date);\n\n      if (_date.default.sameDate(today, date)) {\n        startCellDate = startCellDate.setMilliseconds(date.getMilliseconds() - this.getCellDuration() + 1);\n        endCellDate = endCellDate.setMilliseconds(date.getMilliseconds() + this.getCellDuration());\n        result = _date.default.dateInRange(today, startCellDate, endCellDate);\n      }\n\n      return result;\n    }\n  };\n\n  _proto._isCurrentTimeHeaderCell = function (headerIndex) {\n    if (this.isIndicationOnView()) {\n      var date = this._getDateByIndex(headerIndex);\n\n      return _date.default.sameDate(date, this._getToday());\n    }\n\n    return false;\n  };\n\n  _proto._getTimeCellClass = function (i) {\n    var startViewDate = this._getTimeCellDate(i);\n\n    var cellClass = _SchedulerWorkSpace.prototype._getTimeCellClass.call(this, i);\n\n    if (this._isCurrentTime(startViewDate)) {\n      return cellClass + \" \" + TIME_PANEL_CURRENT_TIME_CELL_CLASS;\n    }\n\n    return cellClass;\n  };\n\n  _proto._getHeaderPanelCellClass = function (i) {\n    var cellClass = _SchedulerWorkSpace.prototype._getHeaderPanelCellClass.call(this, i);\n\n    if (this._isCurrentTimeHeaderCell(i)) {\n      return cellClass + \" \" + HEADER_CURRENT_TIME_CELL_CLASS;\n    }\n\n    return cellClass;\n  };\n\n  _proto._cleanView = function () {\n    _SchedulerWorkSpace.prototype._cleanView.call(this);\n\n    this._cleanDateTimeIndicator();\n  };\n\n  _proto._dimensionChanged = function () {\n    _SchedulerWorkSpace.prototype._dimensionChanged.call(this);\n\n    this._refreshDateTimeIndication();\n  };\n\n  _proto._cleanDateTimeIndicator = function () {\n    this.$element().find(\".\" + SCHEDULER_DATE_TIME_INDICATOR_CLASS).remove();\n  };\n\n  _proto._cleanWorkSpace = function () {\n    _SchedulerWorkSpace.prototype._cleanWorkSpace.call(this);\n\n    this._renderDateTimeIndication();\n\n    this._setIndicationUpdateInterval();\n  };\n\n  _proto._optionChanged = function (args) {\n    switch (args.name) {\n      case \"showCurrentTimeIndicator\":\n      case \"indicatorTime\":\n        this._cleanWorkSpace();\n\n        break;\n\n      case \"indicatorUpdateInterval\":\n        this._setIndicationUpdateInterval();\n\n        break;\n\n      case \"showAllDayPanel\":\n        _SchedulerWorkSpace.prototype._optionChanged.call(this, args);\n\n        this._refreshDateTimeIndication();\n\n        break;\n\n      case \"allDayExpanded\":\n        _SchedulerWorkSpace.prototype._optionChanged.call(this, args);\n\n        this._refreshDateTimeIndication();\n\n        break;\n\n      case \"crossScrollingEnabled\":\n        _SchedulerWorkSpace.prototype._optionChanged.call(this, args);\n\n        this._refreshDateTimeIndication();\n\n        break;\n\n      case \"shadeUntilCurrentTime\":\n        this._refreshDateTimeIndication();\n\n        break;\n\n      default:\n        _SchedulerWorkSpace.prototype._optionChanged.call(this, args);\n\n    }\n  };\n\n  _proto._getDefaultOptions = function () {\n    return (0, _extend.extend)(_SchedulerWorkSpace.prototype._getDefaultOptions.call(this), {\n      showCurrentTimeIndicator: true,\n      indicatorTime: new Date(),\n      indicatorUpdateInterval: 5 * toMs(\"minute\"),\n      shadeUntilCurrentTime: true\n    });\n  };\n\n  return SchedulerWorkSpaceIndicator;\n}(_uiScheduler.default);\n\n(0, _component_registrator.default)(\"dxSchedulerWorkSpace\", SchedulerWorkSpaceIndicator);\nvar _default = SchedulerWorkSpaceIndicator;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["/home/emma/node_modules/devextreme/ui/scheduler/workspaces/ui.scheduler.work_space.indicator.js"],"names":["exports","default","_renderer","_interopRequireDefault","require","_uiScheduler","_component_registrator","_date","_extend","_position","_window","obj","__esModule","_inheritsLoose","subClass","superClass","prototype","Object","create","constructor","_setPrototypeOf","o","p","setPrototypeOf","__proto__","toMs","dateToMilliseconds","SCHEDULER_DATE_TIME_INDICATOR_CLASS","TIME_PANEL_CURRENT_TIME_CELL_CLASS","HEADER_CURRENT_TIME_CELL_CLASS","SchedulerWorkSpaceIndicator","_SchedulerWorkSpace","apply","arguments","_proto","_getTimeZoneCalculator","invoke","_getToday","todayDate","option","Date","timeZoneCalculator","createDate","path","isIndicationOnView","today","endViewDate","trimTime","getEndViewDate","dateInRange","_firstViewDate","getTime","isIndicationAvailable","hasWindow","getStartViewDate","isIndicatorVisible","_getEndViewDateTimeDiff","firstViewDate","setFullYear","getFullYear","getMonth","getDate","_renderDateTimeIndication","_shader","render","groupCount","_getGroupCount","$container","_dateTableScrollable","$content","height","getIndicationHeight","rtlOffset","_getRtlOffset","getCellWidth","_renderIndicator","groupedByDate","isGroupedByDate","repeatCount","i","$indicator","_createIndicator","width","_groupedStrategy","shiftIndicator","addClass","append","getBoundingRect","get","getTimePanelWidth","_setIndicationUpdateInterval","_clearIndicatorUpdateInterval","_indicatorInterval","setInterval","_refreshDateTimeIndication","bind","clearInterval","_isVerticalShader","getIndicationWidth","groupIndex","maxWidth","_getCellCount","difference","_getIndicatorDuration","getRoundedCellWidth","getIndicatorOffset","offset","timeDiff","_getWeekendsCount","Math","round","ceil","cellHeight","getCellHeight","date","duration","cellCount","getCellDuration","_dispose","_cleanDateTimeIndicator","clean","_isCurrentTime","result","startCellDate","endCellDate","sameDate","setMilliseconds","getMilliseconds","_isCurrentTimeHeaderCell","headerIndex","_getDateByIndex","_getTimeCellClass","startViewDate","_getTimeCellDate","cellClass","call","_getHeaderPanelCellClass","_cleanView","_dimensionChanged","$element","find","remove","_cleanWorkSpace","_optionChanged","args","name","_getDefaultOptions","extend","showCurrentTimeIndicator","indicatorTime","indicatorUpdateInterval","shadeUntilCurrentTime","_default","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/scheduler/workspaces/ui.scheduler.work_space.indicator.js)\r\n * Version: 20.2.7\r\n * Build date: Thu Apr 22 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../../core/renderer\"));\r\nvar _uiScheduler = _interopRequireDefault(require(\"./ui.scheduler.work_space\"));\r\nvar _component_registrator = _interopRequireDefault(require(\"../../../core/component_registrator\"));\r\nvar _date = _interopRequireDefault(require(\"../../../core/utils/date\"));\r\nvar _extend = require(\"../../../core/utils/extend\");\r\nvar _position = require(\"../../../core/utils/position\");\r\nvar _window = require(\"../../../core/utils/window\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _inheritsLoose(subClass, superClass) {\r\n    subClass.prototype = Object.create(superClass.prototype);\r\n    subClass.prototype.constructor = subClass;\r\n    _setPrototypeOf(subClass, superClass)\r\n}\r\n\r\nfunction _setPrototypeOf(o, p) {\r\n    _setPrototypeOf = Object.setPrototypeOf || function(o, p) {\r\n        o.__proto__ = p;\r\n        return o\r\n    };\r\n    return _setPrototypeOf(o, p)\r\n}\r\nvar toMs = _date.default.dateToMilliseconds;\r\nvar SCHEDULER_DATE_TIME_INDICATOR_CLASS = \"dx-scheduler-date-time-indicator\";\r\nvar TIME_PANEL_CURRENT_TIME_CELL_CLASS = \"dx-scheduler-time-panel-current-time-cell\";\r\nvar HEADER_CURRENT_TIME_CELL_CLASS = \"dx-scheduler-header-panel-current-time-cell\";\r\nvar SchedulerWorkSpaceIndicator = function(_SchedulerWorkSpace) {\r\n    _inheritsLoose(SchedulerWorkSpaceIndicator, _SchedulerWorkSpace);\r\n\r\n    function SchedulerWorkSpaceIndicator() {\r\n        return _SchedulerWorkSpace.apply(this, arguments) || this\r\n    }\r\n    var _proto = SchedulerWorkSpaceIndicator.prototype;\r\n    _proto._getTimeZoneCalculator = function() {\r\n        return this.invoke(\"getTimeZoneCalculator\")\r\n    };\r\n    _proto._getToday = function() {\r\n        var todayDate = this.option(\"indicatorTime\") || new Date;\r\n        var timeZoneCalculator = this._getTimeZoneCalculator();\r\n        return (null === timeZoneCalculator || void 0 === timeZoneCalculator ? void 0 : timeZoneCalculator.createDate(todayDate, {\r\n            path: \"toGrid\"\r\n        })) || todayDate\r\n    };\r\n    _proto.isIndicationOnView = function() {\r\n        if (this.option(\"showCurrentTimeIndicator\")) {\r\n            var today = this._getToday();\r\n            var endViewDate = _date.default.trimTime(this.getEndViewDate());\r\n            return _date.default.dateInRange(today, this._firstViewDate, new Date(endViewDate.getTime() + toMs(\"day\")))\r\n        }\r\n        return false\r\n    };\r\n    _proto.isIndicationAvailable = function() {\r\n        if (!(0, _window.hasWindow)()) {\r\n            return false\r\n        }\r\n        var today = this._getToday();\r\n        return today >= _date.default.trimTime(new Date(this.getStartViewDate()))\r\n    };\r\n    _proto.isIndicatorVisible = function() {\r\n        var today = this._getToday();\r\n        var endViewDate = new Date(this.getEndViewDate().getTime() + this._getEndViewDateTimeDiff() - 1);\r\n        var firstViewDate = new Date(this.getStartViewDate());\r\n        firstViewDate.setFullYear(today.getFullYear(), today.getMonth(), today.getDate());\r\n        endViewDate.setFullYear(today.getFullYear(), today.getMonth(), today.getDate());\r\n        return _date.default.dateInRange(today, firstViewDate, endViewDate)\r\n    };\r\n    _proto._renderDateTimeIndication = function() {\r\n        if (this.isIndicationAvailable()) {\r\n            if (this.option(\"shadeUntilCurrentTime\")) {\r\n                this._shader.render()\r\n            }\r\n            if (this.isIndicationOnView() && this.isIndicatorVisible()) {\r\n                var groupCount = this._getGroupCount() || 1;\r\n                var $container = this._dateTableScrollable.$content();\r\n                var height = this.getIndicationHeight();\r\n                var rtlOffset = this._getRtlOffset(this.getCellWidth());\r\n                this._renderIndicator(height, rtlOffset, $container, groupCount)\r\n            }\r\n        }\r\n    };\r\n    _proto._renderIndicator = function(height, rtlOffset, $container, groupCount) {\r\n        var groupedByDate = this.isGroupedByDate();\r\n        var repeatCount = groupedByDate ? 1 : groupCount;\r\n        for (var i = 0; i < repeatCount; i++) {\r\n            var $indicator = this._createIndicator($container);\r\n            $indicator.width(groupedByDate ? this.getCellWidth() * groupCount : this.getCellWidth());\r\n            this._groupedStrategy.shiftIndicator($indicator, height, rtlOffset, i)\r\n        }\r\n    };\r\n    _proto._createIndicator = function($container) {\r\n        var $indicator = (0, _renderer.default)(\"<div>\").addClass(SCHEDULER_DATE_TIME_INDICATOR_CLASS);\r\n        $container.append($indicator);\r\n        return $indicator\r\n    };\r\n    _proto._getRtlOffset = function(width) {\r\n        return this.option(\"rtlEnabled\") ? (0, _position.getBoundingRect)(this._dateTableScrollable.$content().get(0)).width - this.getTimePanelWidth() - width : 0\r\n    };\r\n    _proto._setIndicationUpdateInterval = function() {\r\n        if (!this.option(\"showCurrentTimeIndicator\") || 0 === this.option(\"indicatorUpdateInterval\")) {\r\n            return\r\n        }\r\n        this._clearIndicatorUpdateInterval();\r\n        this._indicatorInterval = setInterval(function() {\r\n            this._refreshDateTimeIndication()\r\n        }.bind(this), this.option(\"indicatorUpdateInterval\"))\r\n    };\r\n    _proto._clearIndicatorUpdateInterval = function() {\r\n        if (this._indicatorInterval) {\r\n            clearInterval(this._indicatorInterval);\r\n            delete this._indicatorInterval\r\n        }\r\n    };\r\n    _proto._isVerticalShader = function() {\r\n        return true\r\n    };\r\n    _proto.getIndicationWidth = function(groupIndex) {\r\n        var maxWidth = this.getCellWidth() * this._getCellCount();\r\n        var difference = this._getIndicatorDuration();\r\n        if (difference > this._getCellCount()) {\r\n            difference = this._getCellCount()\r\n        }\r\n        var width = difference * this.getRoundedCellWidth(groupIndex, groupIndex * this._getCellCount(), difference);\r\n        return maxWidth < width ? maxWidth : width\r\n    };\r\n    _proto.getIndicatorOffset = function(groupIndex) {\r\n        var difference = this._getIndicatorDuration() - 1;\r\n        var offset = difference * this.getRoundedCellWidth(groupIndex, groupIndex * this._getCellCount(), difference);\r\n        return offset\r\n    };\r\n    _proto._getIndicatorDuration = function() {\r\n        var today = this._getToday();\r\n        var firstViewDate = new Date(this._firstViewDate);\r\n        var timeDiff = today.getTime() - firstViewDate.getTime();\r\n        if (\"workWeek\" === this.option(\"type\")) {\r\n            timeDiff -= this._getWeekendsCount(Math.round(timeDiff / toMs(\"day\"))) * toMs(\"day\")\r\n        }\r\n        return Math.ceil((timeDiff + 1) / toMs(\"day\"))\r\n    };\r\n    _proto.getIndicationHeight = function() {\r\n        var today = this._getToday();\r\n        var cellHeight = this.getCellHeight();\r\n        var date = new Date(this._firstViewDate);\r\n        if (this.isIndicationOnView()) {\r\n            date.setFullYear(today.getFullYear(), today.getMonth(), today.getDate())\r\n        }\r\n        var duration = today.getTime() - date.getTime();\r\n        var cellCount = duration / this.getCellDuration();\r\n        return cellCount * cellHeight\r\n    };\r\n    _proto._dispose = function() {\r\n        this._clearIndicatorUpdateInterval();\r\n        _SchedulerWorkSpace.prototype._dispose.apply(this, arguments)\r\n    };\r\n    _proto._refreshDateTimeIndication = function() {\r\n        this._cleanDateTimeIndicator();\r\n        this._shader && this._shader.clean();\r\n        this._renderDateTimeIndication()\r\n    };\r\n    _proto._isCurrentTime = function(date) {\r\n        if (this.isIndicationOnView()) {\r\n            var today = this._getToday();\r\n            var result = false;\r\n            date = new Date(date);\r\n            date.setFullYear(today.getFullYear(), today.getMonth(), today.getDate());\r\n            var startCellDate = new Date(date);\r\n            var endCellDate = new Date(date);\r\n            if (_date.default.sameDate(today, date)) {\r\n                startCellDate = startCellDate.setMilliseconds(date.getMilliseconds() - this.getCellDuration() + 1);\r\n                endCellDate = endCellDate.setMilliseconds(date.getMilliseconds() + this.getCellDuration());\r\n                result = _date.default.dateInRange(today, startCellDate, endCellDate)\r\n            }\r\n            return result\r\n        }\r\n    };\r\n    _proto._isCurrentTimeHeaderCell = function(headerIndex) {\r\n        if (this.isIndicationOnView()) {\r\n            var date = this._getDateByIndex(headerIndex);\r\n            return _date.default.sameDate(date, this._getToday())\r\n        }\r\n        return false\r\n    };\r\n    _proto._getTimeCellClass = function(i) {\r\n        var startViewDate = this._getTimeCellDate(i);\r\n        var cellClass = _SchedulerWorkSpace.prototype._getTimeCellClass.call(this, i);\r\n        if (this._isCurrentTime(startViewDate)) {\r\n            return cellClass + \" \" + TIME_PANEL_CURRENT_TIME_CELL_CLASS\r\n        }\r\n        return cellClass\r\n    };\r\n    _proto._getHeaderPanelCellClass = function(i) {\r\n        var cellClass = _SchedulerWorkSpace.prototype._getHeaderPanelCellClass.call(this, i);\r\n        if (this._isCurrentTimeHeaderCell(i)) {\r\n            return cellClass + \" \" + HEADER_CURRENT_TIME_CELL_CLASS\r\n        }\r\n        return cellClass\r\n    };\r\n    _proto._cleanView = function() {\r\n        _SchedulerWorkSpace.prototype._cleanView.call(this);\r\n        this._cleanDateTimeIndicator()\r\n    };\r\n    _proto._dimensionChanged = function() {\r\n        _SchedulerWorkSpace.prototype._dimensionChanged.call(this);\r\n        this._refreshDateTimeIndication()\r\n    };\r\n    _proto._cleanDateTimeIndicator = function() {\r\n        this.$element().find(\".\" + SCHEDULER_DATE_TIME_INDICATOR_CLASS).remove()\r\n    };\r\n    _proto._cleanWorkSpace = function() {\r\n        _SchedulerWorkSpace.prototype._cleanWorkSpace.call(this);\r\n        this._renderDateTimeIndication();\r\n        this._setIndicationUpdateInterval()\r\n    };\r\n    _proto._optionChanged = function(args) {\r\n        switch (args.name) {\r\n            case \"showCurrentTimeIndicator\":\r\n            case \"indicatorTime\":\r\n                this._cleanWorkSpace();\r\n                break;\r\n            case \"indicatorUpdateInterval\":\r\n                this._setIndicationUpdateInterval();\r\n                break;\r\n            case \"showAllDayPanel\":\r\n                _SchedulerWorkSpace.prototype._optionChanged.call(this, args);\r\n                this._refreshDateTimeIndication();\r\n                break;\r\n            case \"allDayExpanded\":\r\n                _SchedulerWorkSpace.prototype._optionChanged.call(this, args);\r\n                this._refreshDateTimeIndication();\r\n                break;\r\n            case \"crossScrollingEnabled\":\r\n                _SchedulerWorkSpace.prototype._optionChanged.call(this, args);\r\n                this._refreshDateTimeIndication();\r\n                break;\r\n            case \"shadeUntilCurrentTime\":\r\n                this._refreshDateTimeIndication();\r\n                break;\r\n            default:\r\n                _SchedulerWorkSpace.prototype._optionChanged.call(this, args)\r\n        }\r\n    };\r\n    _proto._getDefaultOptions = function() {\r\n        return (0, _extend.extend)(_SchedulerWorkSpace.prototype._getDefaultOptions.call(this), {\r\n            showCurrentTimeIndicator: true,\r\n            indicatorTime: new Date,\r\n            indicatorUpdateInterval: 5 * toMs(\"minute\"),\r\n            shadeUntilCurrentTime: true\r\n        })\r\n    };\r\n    return SchedulerWorkSpaceIndicator\r\n}(_uiScheduler.default);\r\n(0, _component_registrator.default)(\"dxSchedulerWorkSpace\", SchedulerWorkSpaceIndicator);\r\nvar _default = SchedulerWorkSpaceIndicator;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}