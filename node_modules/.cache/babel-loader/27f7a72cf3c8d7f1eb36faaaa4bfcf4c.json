{"ast":null,"code":"/**\r\n * DevExtreme (ui/scheduler/rendering_strategies/ui.scheduler.appointments.strategy.vertical.js)\r\n * Version: 20.2.7\r\n * Build date: Thu Apr 22 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _uiSchedulerAppointmentsStrategy = _interopRequireDefault(require(\"./ui.scheduler.appointments.strategy.base\"));\n\nvar _extend = require(\"../../../core/utils/extend\");\n\nvar _type = require(\"../../../core/utils/type\");\n\nvar _date = _interopRequireDefault(require(\"../../../core/utils/date\"));\n\nvar _utils = _interopRequireDefault(require(\"./../utils.timeZone\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function (o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar ALLDAY_APPOINTMENT_MIN_VERTICAL_OFFSET = 5;\nvar ALLDAY_APPOINTMENT_MAX_VERTICAL_OFFSET = 20;\nvar toMs = _date.default.dateToMilliseconds;\n\nvar VerticalRenderingStrategy = function (_BaseAppointmentsStra) {\n  _inheritsLoose(VerticalRenderingStrategy, _BaseAppointmentsStra);\n\n  function VerticalRenderingStrategy() {\n    return _BaseAppointmentsStra.apply(this, arguments) || this;\n  }\n\n  var _proto = VerticalRenderingStrategy.prototype;\n\n  _proto.getDeltaTime = function (args, initialSize, appointment) {\n    var deltaTime = 0;\n\n    if (this.isAllDay(appointment)) {\n      deltaTime = this._getDeltaWidth(args, initialSize) * toMs(\"day\");\n    } else {\n      var deltaHeight = args.height - initialSize.height;\n      deltaTime = toMs(\"minute\") * Math.round(deltaHeight / this.getDefaultCellHeight() * this.instance.getAppointmentDurationInMinutes());\n    }\n\n    return deltaTime;\n  };\n\n  _proto._correctCollectorCoordinatesInAdaptive = function (coordinates, isAllDay) {\n    if (isAllDay) {\n      _BaseAppointmentsStra.prototype._correctCollectorCoordinatesInAdaptive.call(this, coordinates, isAllDay);\n    } else {\n      if (0 === this._getMaxAppointmentCountPerCellByType()) {\n        var cellHeight = this.getDefaultCellHeight();\n        var cellWidth = this.getDefaultCellWidth();\n        coordinates.top += (cellHeight - this.getDropDownButtonAdaptiveSize()) / 2;\n        coordinates.left += (cellWidth - this.getDropDownButtonAdaptiveSize()) / 2;\n      }\n    }\n  };\n\n  _proto.getAppointmentGeometry = function (coordinates) {\n    var geometry = null;\n\n    if (coordinates.allDay) {\n      geometry = this._getAllDayAppointmentGeometry(coordinates);\n    } else {\n      geometry = this._isAdaptive() && coordinates.isCompact ? this._getAdaptiveGeometry(coordinates) : this._getVerticalAppointmentGeometry(coordinates);\n    }\n\n    return _BaseAppointmentsStra.prototype.getAppointmentGeometry.call(this, geometry);\n  };\n\n  _proto._getAdaptiveGeometry = function (coordinates) {\n    var config = this._calculateGeometryConfig(coordinates);\n\n    return this._customizeCoordinates(coordinates, config.height, config.appointmentCountPerCell, config.offset);\n  };\n\n  _proto._getItemPosition = function (appointment) {\n    var adapter = this.instance.createAppointmentAdapter(appointment);\n    var allDay = this.isAllDay(appointment);\n    var isRecurring = !!adapter.recurrenceRule;\n    var appointmentStartDate = adapter.calculateStartDate(\"toGrid\");\n    var appointmentEndDate = adapter.calculateEndDate(\"toGrid\");\n    var isAppointmentTakesSeveralDays = !_utils.default.isSameAppointmentDates(appointmentStartDate, appointmentEndDate);\n\n    if (allDay) {\n      return _BaseAppointmentsStra.prototype._getItemPosition.call(this, appointment);\n    }\n\n    var settings = this._getAppointmentCoordinates(appointment);\n\n    var result = [];\n\n    for (var j = 0; j < settings.length; j++) {\n      var currentSetting = settings[j];\n      var height = this.calculateAppointmentHeight(appointment, currentSetting);\n      var width = this.calculateAppointmentWidth(appointment, currentSetting);\n      var resultHeight = height;\n      var appointmentReduced = null;\n      var multiDaysAppointmentParts = [];\n      var currentMaxAllowedPosition = currentSetting.vMax;\n\n      if (this._isMultiViewAppointment(currentSetting, height) || isAppointmentTakesSeveralDays && !isRecurring) {\n        var reduceHead = _date.default.sameDate(appointmentStartDate, currentSetting.info.appointment.startDate) || isRecurring;\n\n        if (reduceHead) {\n          resultHeight = this._reduceMultiDayAppointment(height, {\n            top: currentSetting.top,\n            bottom: currentMaxAllowedPosition\n          });\n          multiDaysAppointmentParts = this._getAppointmentParts({\n            sourceAppointmentHeight: height,\n            reducedHeight: resultHeight,\n            width: width\n          }, currentSetting);\n        }\n\n        var isMultiDay = this._isMultiDayAppointment(currentSetting, height);\n\n        if (isMultiDay) {\n          appointmentReduced = reduceHead ? \"head\" : \"tail\";\n        }\n      }\n\n      (0, _extend.extend)(currentSetting, {\n        height: resultHeight,\n        width: width,\n        allDay: allDay,\n        appointmentReduced: appointmentReduced\n      });\n      result = this._getAppointmentPartsPosition(multiDaysAppointmentParts, currentSetting, result);\n    }\n\n    return result;\n  };\n\n  _proto._isMultiDayAppointment = function (position, height) {\n    if (this.isVirtualScrolling) {\n      var maxTop = this._getGroupHeight() - this._getGroupTopOffset(position);\n\n      return height > maxTop;\n    }\n\n    return false;\n  };\n\n  _proto._isMultiViewAppointment = function (position, height) {\n    return height > position.vMax - position.top;\n  };\n\n  _proto._reduceMultiDayAppointment = function (sourceAppointmentHeight, bound) {\n    sourceAppointmentHeight = bound.bottom - Math.floor(bound.top);\n    return sourceAppointmentHeight;\n  };\n\n  _proto._getGroupHeight = function () {\n    var workspace = this.instance.getWorkSpace();\n    return workspace.getCellHeight() * workspace._getRowCount();\n  };\n\n  _proto._getGroupTopOffset = function (appointmentSettings) {\n    var groupTop = Math.max(0, this.instance.fire(\"getGroupTop\", appointmentSettings.groupIndex));\n    var allDayPanelOffset = this.instance.fire(\"getOffsetByAllDayPanel\", appointmentSettings.groupIndex);\n    var appointmentGroupTopOffset = appointmentSettings.top - groupTop - allDayPanelOffset;\n    return appointmentGroupTopOffset;\n  };\n\n  _proto._getTailHeight = function (appointmentGeometry, appointmentSettings) {\n    if (!this.isVirtualScrolling) {\n      return appointmentGeometry.sourceAppointmentHeight - appointmentGeometry.reducedHeight;\n    }\n\n    var appointmentGroupTopOffset = this._getGroupTopOffset(appointmentSettings);\n\n    var sourceAppointmentHeight = appointmentGeometry.sourceAppointmentHeight;\n\n    var groupHeight = this._getGroupHeight();\n\n    var tailHeight = appointmentGroupTopOffset + sourceAppointmentHeight - groupHeight;\n    return tailHeight;\n  };\n\n  _proto._getAppointmentParts = function (appointmentGeometry, appointmentSettings) {\n    var tailHeight = this._getTailHeight(appointmentGeometry, appointmentSettings);\n\n    var width = appointmentGeometry.width;\n    var result = [];\n    var currentPartTop = Math.max(0, this.instance.fire(\"getGroupTop\", appointmentSettings.groupIndex));\n    var cellsDiff = this.instance.fire(\"isGroupedByDate\") ? this.instance.fire(\"getGroupCount\") : 1;\n    var offset = this.getDefaultCellWidth() * cellsDiff;\n    var left = appointmentSettings.left + offset;\n\n    if (tailHeight > 0) {\n      var minHeight = this.getAppointmentMinSize();\n\n      if (tailHeight < minHeight) {\n        tailHeight = minHeight;\n      }\n\n      currentPartTop += this.instance.fire(\"getOffsetByAllDayPanel\", appointmentSettings.groupIndex);\n      result.push((0, _extend.extend)(true, {}, appointmentSettings, {\n        top: currentPartTop,\n        left: left,\n        height: tailHeight,\n        width: width,\n        appointmentReduced: \"tail\",\n        rowIndex: 0,\n        cellIndex: appointmentSettings.cellIndex + cellsDiff\n      }));\n    }\n\n    return result;\n  };\n\n  _proto._getMinuteHeight = function () {\n    return this.getDefaultCellHeight() / this.instance.getAppointmentDurationInMinutes();\n  };\n\n  _proto._getCompactLeftCoordinate = function (itemLeft, index) {\n    var cellBorderSize = 1;\n    var cellWidth = this.getDefaultCellWidth() || this.getAppointmentMinSize();\n    return itemLeft + (cellBorderSize + cellWidth) * index;\n  };\n\n  _proto._getVerticalAppointmentGeometry = function (coordinates) {\n    var config = this._calculateVerticalGeometryConfig(coordinates);\n\n    return this._customizeVerticalCoordinates(coordinates, config.width, config.appointmentCountPerCell, config.offset);\n  };\n\n  _proto._customizeVerticalCoordinates = function (coordinates, width, appointmentCountPerCell, topOffset, isAllDay) {\n    var appointmentWidth = Math.max(width / appointmentCountPerCell, width / coordinates.count);\n    var height = coordinates.height;\n    var appointmentLeft = coordinates.left + coordinates.index * appointmentWidth;\n    var top = coordinates.top;\n\n    if (coordinates.isCompact) {\n      this._markAppointmentAsVirtual(coordinates, isAllDay);\n    }\n\n    return {\n      height: height,\n      width: appointmentWidth,\n      top: top,\n      left: appointmentLeft,\n      empty: this._isAppointmentEmpty(height, width)\n    };\n  };\n\n  _proto._calculateVerticalGeometryConfig = function (coordinates) {\n    var overlappingMode = this.instance.fire(\"getMaxAppointmentsPerCell\");\n\n    var offsets = this._getOffsets();\n\n    var appointmentDefaultOffset = this._getAppointmentDefaultOffset();\n\n    var appointmentCountPerCell = this._getAppointmentCount(overlappingMode, coordinates);\n\n    var ratio = this._getDefaultRatio(coordinates, appointmentCountPerCell);\n\n    var maxWidth = this._getMaxWidth();\n\n    if (!appointmentCountPerCell) {\n      appointmentCountPerCell = coordinates.count;\n      ratio = (maxWidth - offsets.unlimited) / maxWidth;\n    }\n\n    var topOffset = (1 - ratio) * maxWidth;\n\n    if (\"auto\" === overlappingMode || (0, _type.isNumeric)(overlappingMode)) {\n      ratio = 1;\n      maxWidth -= appointmentDefaultOffset;\n      topOffset = 0;\n    }\n\n    return {\n      width: ratio * maxWidth,\n      appointmentCountPerCell: appointmentCountPerCell,\n      offset: topOffset\n    };\n  };\n\n  _proto._getMaxWidth = function () {\n    return this.getDefaultCellWidth() || this.invoke(\"getCellWidth\");\n  };\n\n  _proto.isAllDay = function (appointmentData) {\n    var allDay = this.instance.fire(\"getField\", \"allDay\", appointmentData);\n\n    if (allDay) {\n      return true;\n    }\n\n    return this.instance.appointmentTakesAllDay(appointmentData);\n  };\n\n  _proto._getAppointmentMaxWidth = function () {\n    return this.getDefaultCellWidth() - this._getAppointmentDefaultOffset();\n  };\n\n  _proto.calculateAppointmentWidth = function (appointment, position) {\n    if (!this.isAllDay(appointment)) {\n      return 0;\n    }\n\n    var startDate = _date.default.trimTime(position.info.appointment.startDate);\n\n    var endDate = this.normalizeEndDateByViewEnd(appointment, position.info.appointment.endDate);\n    var cellWidth = this.getDefaultCellWidth() || this.getAppointmentMinSize();\n    var durationInHours = (endDate.getTime() - startDate.getTime()) / toMs(\"hour\");\n    var width = Math.ceil(durationInHours / 24) * cellWidth;\n    width = this.cropAppointmentWidth(width, cellWidth);\n    return width;\n  };\n\n  _proto.calculateAppointmentHeight = function (appointment, position) {\n    if (this.isAllDay(appointment)) {\n      return 0;\n    }\n\n    var startDate = position.info.appointment.startDate;\n    var endDate = this.normalizeEndDateByViewEnd(appointment, position.info.appointment.endDate);\n    var allDay = this.instance.fire(\"getField\", \"allDay\", appointment);\n\n    var fullDuration = this._getAppointmentDurationInMs(startDate, endDate, allDay);\n\n    var durationInMinutes = this._adjustDurationByDaylightDiff(fullDuration, startDate, endDate) / toMs(\"minute\");\n\n    var height = durationInMinutes * this._getMinuteHeight();\n\n    return height;\n  };\n\n  _proto.getDirection = function () {\n    return \"vertical\";\n  };\n\n  _proto._sortCondition = function (a, b) {\n    var allDayCondition = a.allDay - b.allDay;\n    var isAllDay = a.allDay && b.allDay;\n    var condition = \"vertical\" === this.instance._groupOrientation && isAllDay ? this._columnCondition(a, b) : this._rowCondition(a, b);\n    return allDayCondition ? allDayCondition : condition;\n  };\n\n  _proto.hasAllDayAppointments = function () {\n    return true;\n  };\n\n  _proto._getAllDayAppointmentGeometry = function (coordinates) {\n    var config = this._calculateGeometryConfig(coordinates);\n\n    return this._customizeCoordinates(coordinates, config.height, config.appointmentCountPerCell, config.offset, true);\n  };\n\n  _proto._calculateGeometryConfig = function (coordinates) {\n    if (!this.instance._allowResizing() || !this.instance._allowAllDayResizing()) {\n      coordinates.skipResizing = true;\n    }\n\n    var config = _BaseAppointmentsStra.prototype._calculateGeometryConfig.call(this, coordinates);\n\n    if (coordinates.count <= this._getDynamicAppointmentCountPerCell().allDay) {\n      config.offset = 0;\n    }\n\n    return config;\n  };\n\n  _proto._getAppointmentCount = function (overlappingMode, coordinates) {\n    return \"auto\" !== overlappingMode && 1 === coordinates.count && !(0, _type.isNumeric)(overlappingMode) ? coordinates.count : this._getMaxAppointmentCountPerCellByType(coordinates.allDay);\n  };\n\n  _proto._getDefaultRatio = function (coordinates, appointmentCountPerCell) {\n    return coordinates.count > this.instance.option(\"_appointmentCountPerCell\") ? .65 : 1;\n  };\n\n  _proto._getOffsets = function () {\n    return {\n      unlimited: ALLDAY_APPOINTMENT_MIN_VERTICAL_OFFSET,\n      auto: ALLDAY_APPOINTMENT_MAX_VERTICAL_OFFSET\n    };\n  };\n\n  _proto._getMaxHeight = function () {\n    return this.getDefaultAllDayCellHeight() || this.getAppointmentMinSize();\n  };\n\n  _proto._needVerticalGroupBounds = function (allDay) {\n    return !allDay;\n  };\n\n  _proto._needHorizontalGroupBounds = function () {\n    return false;\n  };\n\n  return VerticalRenderingStrategy;\n}(_uiSchedulerAppointmentsStrategy.default);\n\nvar _default = VerticalRenderingStrategy;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["/home/emma/node_modules/devextreme/ui/scheduler/rendering_strategies/ui.scheduler.appointments.strategy.vertical.js"],"names":["exports","default","_uiSchedulerAppointmentsStrategy","_interopRequireDefault","require","_extend","_type","_date","_utils","obj","__esModule","_inheritsLoose","subClass","superClass","prototype","Object","create","constructor","_setPrototypeOf","o","p","setPrototypeOf","__proto__","ALLDAY_APPOINTMENT_MIN_VERTICAL_OFFSET","ALLDAY_APPOINTMENT_MAX_VERTICAL_OFFSET","toMs","dateToMilliseconds","VerticalRenderingStrategy","_BaseAppointmentsStra","apply","arguments","_proto","getDeltaTime","args","initialSize","appointment","deltaTime","isAllDay","_getDeltaWidth","deltaHeight","height","Math","round","getDefaultCellHeight","instance","getAppointmentDurationInMinutes","_correctCollectorCoordinatesInAdaptive","coordinates","call","_getMaxAppointmentCountPerCellByType","cellHeight","cellWidth","getDefaultCellWidth","top","getDropDownButtonAdaptiveSize","left","getAppointmentGeometry","geometry","allDay","_getAllDayAppointmentGeometry","_isAdaptive","isCompact","_getAdaptiveGeometry","_getVerticalAppointmentGeometry","config","_calculateGeometryConfig","_customizeCoordinates","appointmentCountPerCell","offset","_getItemPosition","adapter","createAppointmentAdapter","isRecurring","recurrenceRule","appointmentStartDate","calculateStartDate","appointmentEndDate","calculateEndDate","isAppointmentTakesSeveralDays","isSameAppointmentDates","settings","_getAppointmentCoordinates","result","j","length","currentSetting","calculateAppointmentHeight","width","calculateAppointmentWidth","resultHeight","appointmentReduced","multiDaysAppointmentParts","currentMaxAllowedPosition","vMax","_isMultiViewAppointment","reduceHead","sameDate","info","startDate","_reduceMultiDayAppointment","bottom","_getAppointmentParts","sourceAppointmentHeight","reducedHeight","isMultiDay","_isMultiDayAppointment","extend","_getAppointmentPartsPosition","position","isVirtualScrolling","maxTop","_getGroupHeight","_getGroupTopOffset","bound","floor","workspace","getWorkSpace","getCellHeight","_getRowCount","appointmentSettings","groupTop","max","fire","groupIndex","allDayPanelOffset","appointmentGroupTopOffset","_getTailHeight","appointmentGeometry","groupHeight","tailHeight","currentPartTop","cellsDiff","minHeight","getAppointmentMinSize","push","rowIndex","cellIndex","_getMinuteHeight","_getCompactLeftCoordinate","itemLeft","index","cellBorderSize","_calculateVerticalGeometryConfig","_customizeVerticalCoordinates","topOffset","appointmentWidth","count","appointmentLeft","_markAppointmentAsVirtual","empty","_isAppointmentEmpty","overlappingMode","offsets","_getOffsets","appointmentDefaultOffset","_getAppointmentDefaultOffset","_getAppointmentCount","ratio","_getDefaultRatio","maxWidth","_getMaxWidth","unlimited","isNumeric","invoke","appointmentData","appointmentTakesAllDay","_getAppointmentMaxWidth","trimTime","endDate","normalizeEndDateByViewEnd","durationInHours","getTime","ceil","cropAppointmentWidth","fullDuration","_getAppointmentDurationInMs","durationInMinutes","_adjustDurationByDaylightDiff","getDirection","_sortCondition","a","b","allDayCondition","condition","_groupOrientation","_columnCondition","_rowCondition","hasAllDayAppointments","_allowResizing","_allowAllDayResizing","skipResizing","_getDynamicAppointmentCountPerCell","option","auto","_getMaxHeight","getDefaultAllDayCellHeight","_needVerticalGroupBounds","_needHorizontalGroupBounds","_default","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/scheduler/rendering_strategies/ui.scheduler.appointments.strategy.vertical.js)\r\n * Version: 20.2.7\r\n * Build date: Thu Apr 22 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _uiSchedulerAppointmentsStrategy = _interopRequireDefault(require(\"./ui.scheduler.appointments.strategy.base\"));\r\nvar _extend = require(\"../../../core/utils/extend\");\r\nvar _type = require(\"../../../core/utils/type\");\r\nvar _date = _interopRequireDefault(require(\"../../../core/utils/date\"));\r\nvar _utils = _interopRequireDefault(require(\"./../utils.timeZone\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _inheritsLoose(subClass, superClass) {\r\n    subClass.prototype = Object.create(superClass.prototype);\r\n    subClass.prototype.constructor = subClass;\r\n    _setPrototypeOf(subClass, superClass)\r\n}\r\n\r\nfunction _setPrototypeOf(o, p) {\r\n    _setPrototypeOf = Object.setPrototypeOf || function(o, p) {\r\n        o.__proto__ = p;\r\n        return o\r\n    };\r\n    return _setPrototypeOf(o, p)\r\n}\r\nvar ALLDAY_APPOINTMENT_MIN_VERTICAL_OFFSET = 5;\r\nvar ALLDAY_APPOINTMENT_MAX_VERTICAL_OFFSET = 20;\r\nvar toMs = _date.default.dateToMilliseconds;\r\nvar VerticalRenderingStrategy = function(_BaseAppointmentsStra) {\r\n    _inheritsLoose(VerticalRenderingStrategy, _BaseAppointmentsStra);\r\n\r\n    function VerticalRenderingStrategy() {\r\n        return _BaseAppointmentsStra.apply(this, arguments) || this\r\n    }\r\n    var _proto = VerticalRenderingStrategy.prototype;\r\n    _proto.getDeltaTime = function(args, initialSize, appointment) {\r\n        var deltaTime = 0;\r\n        if (this.isAllDay(appointment)) {\r\n            deltaTime = this._getDeltaWidth(args, initialSize) * toMs(\"day\")\r\n        } else {\r\n            var deltaHeight = args.height - initialSize.height;\r\n            deltaTime = toMs(\"minute\") * Math.round(deltaHeight / this.getDefaultCellHeight() * this.instance.getAppointmentDurationInMinutes())\r\n        }\r\n        return deltaTime\r\n    };\r\n    _proto._correctCollectorCoordinatesInAdaptive = function(coordinates, isAllDay) {\r\n        if (isAllDay) {\r\n            _BaseAppointmentsStra.prototype._correctCollectorCoordinatesInAdaptive.call(this, coordinates, isAllDay)\r\n        } else {\r\n            if (0 === this._getMaxAppointmentCountPerCellByType()) {\r\n                var cellHeight = this.getDefaultCellHeight();\r\n                var cellWidth = this.getDefaultCellWidth();\r\n                coordinates.top += (cellHeight - this.getDropDownButtonAdaptiveSize()) / 2;\r\n                coordinates.left += (cellWidth - this.getDropDownButtonAdaptiveSize()) / 2\r\n            }\r\n        }\r\n    };\r\n    _proto.getAppointmentGeometry = function(coordinates) {\r\n        var geometry = null;\r\n        if (coordinates.allDay) {\r\n            geometry = this._getAllDayAppointmentGeometry(coordinates)\r\n        } else {\r\n            geometry = this._isAdaptive() && coordinates.isCompact ? this._getAdaptiveGeometry(coordinates) : this._getVerticalAppointmentGeometry(coordinates)\r\n        }\r\n        return _BaseAppointmentsStra.prototype.getAppointmentGeometry.call(this, geometry)\r\n    };\r\n    _proto._getAdaptiveGeometry = function(coordinates) {\r\n        var config = this._calculateGeometryConfig(coordinates);\r\n        return this._customizeCoordinates(coordinates, config.height, config.appointmentCountPerCell, config.offset)\r\n    };\r\n    _proto._getItemPosition = function(appointment) {\r\n        var adapter = this.instance.createAppointmentAdapter(appointment);\r\n        var allDay = this.isAllDay(appointment);\r\n        var isRecurring = !!adapter.recurrenceRule;\r\n        var appointmentStartDate = adapter.calculateStartDate(\"toGrid\");\r\n        var appointmentEndDate = adapter.calculateEndDate(\"toGrid\");\r\n        var isAppointmentTakesSeveralDays = !_utils.default.isSameAppointmentDates(appointmentStartDate, appointmentEndDate);\r\n        if (allDay) {\r\n            return _BaseAppointmentsStra.prototype._getItemPosition.call(this, appointment)\r\n        }\r\n        var settings = this._getAppointmentCoordinates(appointment);\r\n        var result = [];\r\n        for (var j = 0; j < settings.length; j++) {\r\n            var currentSetting = settings[j];\r\n            var height = this.calculateAppointmentHeight(appointment, currentSetting);\r\n            var width = this.calculateAppointmentWidth(appointment, currentSetting);\r\n            var resultHeight = height;\r\n            var appointmentReduced = null;\r\n            var multiDaysAppointmentParts = [];\r\n            var currentMaxAllowedPosition = currentSetting.vMax;\r\n            if (this._isMultiViewAppointment(currentSetting, height) || isAppointmentTakesSeveralDays && !isRecurring) {\r\n                var reduceHead = _date.default.sameDate(appointmentStartDate, currentSetting.info.appointment.startDate) || isRecurring;\r\n                if (reduceHead) {\r\n                    resultHeight = this._reduceMultiDayAppointment(height, {\r\n                        top: currentSetting.top,\r\n                        bottom: currentMaxAllowedPosition\r\n                    });\r\n                    multiDaysAppointmentParts = this._getAppointmentParts({\r\n                        sourceAppointmentHeight: height,\r\n                        reducedHeight: resultHeight,\r\n                        width: width\r\n                    }, currentSetting)\r\n                }\r\n                var isMultiDay = this._isMultiDayAppointment(currentSetting, height);\r\n                if (isMultiDay) {\r\n                    appointmentReduced = reduceHead ? \"head\" : \"tail\"\r\n                }\r\n            }(0, _extend.extend)(currentSetting, {\r\n                height: resultHeight,\r\n                width: width,\r\n                allDay: allDay,\r\n                appointmentReduced: appointmentReduced\r\n            });\r\n            result = this._getAppointmentPartsPosition(multiDaysAppointmentParts, currentSetting, result)\r\n        }\r\n        return result\r\n    };\r\n    _proto._isMultiDayAppointment = function(position, height) {\r\n        if (this.isVirtualScrolling) {\r\n            var maxTop = this._getGroupHeight() - this._getGroupTopOffset(position);\r\n            return height > maxTop\r\n        }\r\n        return false\r\n    };\r\n    _proto._isMultiViewAppointment = function(position, height) {\r\n        return height > position.vMax - position.top\r\n    };\r\n    _proto._reduceMultiDayAppointment = function(sourceAppointmentHeight, bound) {\r\n        sourceAppointmentHeight = bound.bottom - Math.floor(bound.top);\r\n        return sourceAppointmentHeight\r\n    };\r\n    _proto._getGroupHeight = function() {\r\n        var workspace = this.instance.getWorkSpace();\r\n        return workspace.getCellHeight() * workspace._getRowCount()\r\n    };\r\n    _proto._getGroupTopOffset = function(appointmentSettings) {\r\n        var groupTop = Math.max(0, this.instance.fire(\"getGroupTop\", appointmentSettings.groupIndex));\r\n        var allDayPanelOffset = this.instance.fire(\"getOffsetByAllDayPanel\", appointmentSettings.groupIndex);\r\n        var appointmentGroupTopOffset = appointmentSettings.top - groupTop - allDayPanelOffset;\r\n        return appointmentGroupTopOffset\r\n    };\r\n    _proto._getTailHeight = function(appointmentGeometry, appointmentSettings) {\r\n        if (!this.isVirtualScrolling) {\r\n            return appointmentGeometry.sourceAppointmentHeight - appointmentGeometry.reducedHeight\r\n        }\r\n        var appointmentGroupTopOffset = this._getGroupTopOffset(appointmentSettings);\r\n        var sourceAppointmentHeight = appointmentGeometry.sourceAppointmentHeight;\r\n        var groupHeight = this._getGroupHeight();\r\n        var tailHeight = appointmentGroupTopOffset + sourceAppointmentHeight - groupHeight;\r\n        return tailHeight\r\n    };\r\n    _proto._getAppointmentParts = function(appointmentGeometry, appointmentSettings) {\r\n        var tailHeight = this._getTailHeight(appointmentGeometry, appointmentSettings);\r\n        var width = appointmentGeometry.width;\r\n        var result = [];\r\n        var currentPartTop = Math.max(0, this.instance.fire(\"getGroupTop\", appointmentSettings.groupIndex));\r\n        var cellsDiff = this.instance.fire(\"isGroupedByDate\") ? this.instance.fire(\"getGroupCount\") : 1;\r\n        var offset = this.getDefaultCellWidth() * cellsDiff;\r\n        var left = appointmentSettings.left + offset;\r\n        if (tailHeight > 0) {\r\n            var minHeight = this.getAppointmentMinSize();\r\n            if (tailHeight < minHeight) {\r\n                tailHeight = minHeight\r\n            }\r\n            currentPartTop += this.instance.fire(\"getOffsetByAllDayPanel\", appointmentSettings.groupIndex);\r\n            result.push((0, _extend.extend)(true, {}, appointmentSettings, {\r\n                top: currentPartTop,\r\n                left: left,\r\n                height: tailHeight,\r\n                width: width,\r\n                appointmentReduced: \"tail\",\r\n                rowIndex: 0,\r\n                cellIndex: appointmentSettings.cellIndex + cellsDiff\r\n            }))\r\n        }\r\n        return result\r\n    };\r\n    _proto._getMinuteHeight = function() {\r\n        return this.getDefaultCellHeight() / this.instance.getAppointmentDurationInMinutes()\r\n    };\r\n    _proto._getCompactLeftCoordinate = function(itemLeft, index) {\r\n        var cellBorderSize = 1;\r\n        var cellWidth = this.getDefaultCellWidth() || this.getAppointmentMinSize();\r\n        return itemLeft + (cellBorderSize + cellWidth) * index\r\n    };\r\n    _proto._getVerticalAppointmentGeometry = function(coordinates) {\r\n        var config = this._calculateVerticalGeometryConfig(coordinates);\r\n        return this._customizeVerticalCoordinates(coordinates, config.width, config.appointmentCountPerCell, config.offset)\r\n    };\r\n    _proto._customizeVerticalCoordinates = function(coordinates, width, appointmentCountPerCell, topOffset, isAllDay) {\r\n        var appointmentWidth = Math.max(width / appointmentCountPerCell, width / coordinates.count);\r\n        var height = coordinates.height;\r\n        var appointmentLeft = coordinates.left + coordinates.index * appointmentWidth;\r\n        var top = coordinates.top;\r\n        if (coordinates.isCompact) {\r\n            this._markAppointmentAsVirtual(coordinates, isAllDay)\r\n        }\r\n        return {\r\n            height: height,\r\n            width: appointmentWidth,\r\n            top: top,\r\n            left: appointmentLeft,\r\n            empty: this._isAppointmentEmpty(height, width)\r\n        }\r\n    };\r\n    _proto._calculateVerticalGeometryConfig = function(coordinates) {\r\n        var overlappingMode = this.instance.fire(\"getMaxAppointmentsPerCell\");\r\n        var offsets = this._getOffsets();\r\n        var appointmentDefaultOffset = this._getAppointmentDefaultOffset();\r\n        var appointmentCountPerCell = this._getAppointmentCount(overlappingMode, coordinates);\r\n        var ratio = this._getDefaultRatio(coordinates, appointmentCountPerCell);\r\n        var maxWidth = this._getMaxWidth();\r\n        if (!appointmentCountPerCell) {\r\n            appointmentCountPerCell = coordinates.count;\r\n            ratio = (maxWidth - offsets.unlimited) / maxWidth\r\n        }\r\n        var topOffset = (1 - ratio) * maxWidth;\r\n        if (\"auto\" === overlappingMode || (0, _type.isNumeric)(overlappingMode)) {\r\n            ratio = 1;\r\n            maxWidth -= appointmentDefaultOffset;\r\n            topOffset = 0\r\n        }\r\n        return {\r\n            width: ratio * maxWidth,\r\n            appointmentCountPerCell: appointmentCountPerCell,\r\n            offset: topOffset\r\n        }\r\n    };\r\n    _proto._getMaxWidth = function() {\r\n        return this.getDefaultCellWidth() || this.invoke(\"getCellWidth\")\r\n    };\r\n    _proto.isAllDay = function(appointmentData) {\r\n        var allDay = this.instance.fire(\"getField\", \"allDay\", appointmentData);\r\n        if (allDay) {\r\n            return true\r\n        }\r\n        return this.instance.appointmentTakesAllDay(appointmentData)\r\n    };\r\n    _proto._getAppointmentMaxWidth = function() {\r\n        return this.getDefaultCellWidth() - this._getAppointmentDefaultOffset()\r\n    };\r\n    _proto.calculateAppointmentWidth = function(appointment, position) {\r\n        if (!this.isAllDay(appointment)) {\r\n            return 0\r\n        }\r\n        var startDate = _date.default.trimTime(position.info.appointment.startDate);\r\n        var endDate = this.normalizeEndDateByViewEnd(appointment, position.info.appointment.endDate);\r\n        var cellWidth = this.getDefaultCellWidth() || this.getAppointmentMinSize();\r\n        var durationInHours = (endDate.getTime() - startDate.getTime()) / toMs(\"hour\");\r\n        var width = Math.ceil(durationInHours / 24) * cellWidth;\r\n        width = this.cropAppointmentWidth(width, cellWidth);\r\n        return width\r\n    };\r\n    _proto.calculateAppointmentHeight = function(appointment, position) {\r\n        if (this.isAllDay(appointment)) {\r\n            return 0\r\n        }\r\n        var startDate = position.info.appointment.startDate;\r\n        var endDate = this.normalizeEndDateByViewEnd(appointment, position.info.appointment.endDate);\r\n        var allDay = this.instance.fire(\"getField\", \"allDay\", appointment);\r\n        var fullDuration = this._getAppointmentDurationInMs(startDate, endDate, allDay);\r\n        var durationInMinutes = this._adjustDurationByDaylightDiff(fullDuration, startDate, endDate) / toMs(\"minute\");\r\n        var height = durationInMinutes * this._getMinuteHeight();\r\n        return height\r\n    };\r\n    _proto.getDirection = function() {\r\n        return \"vertical\"\r\n    };\r\n    _proto._sortCondition = function(a, b) {\r\n        var allDayCondition = a.allDay - b.allDay;\r\n        var isAllDay = a.allDay && b.allDay;\r\n        var condition = \"vertical\" === this.instance._groupOrientation && isAllDay ? this._columnCondition(a, b) : this._rowCondition(a, b);\r\n        return allDayCondition ? allDayCondition : condition\r\n    };\r\n    _proto.hasAllDayAppointments = function() {\r\n        return true\r\n    };\r\n    _proto._getAllDayAppointmentGeometry = function(coordinates) {\r\n        var config = this._calculateGeometryConfig(coordinates);\r\n        return this._customizeCoordinates(coordinates, config.height, config.appointmentCountPerCell, config.offset, true)\r\n    };\r\n    _proto._calculateGeometryConfig = function(coordinates) {\r\n        if (!this.instance._allowResizing() || !this.instance._allowAllDayResizing()) {\r\n            coordinates.skipResizing = true\r\n        }\r\n        var config = _BaseAppointmentsStra.prototype._calculateGeometryConfig.call(this, coordinates);\r\n        if (coordinates.count <= this._getDynamicAppointmentCountPerCell().allDay) {\r\n            config.offset = 0\r\n        }\r\n        return config\r\n    };\r\n    _proto._getAppointmentCount = function(overlappingMode, coordinates) {\r\n        return \"auto\" !== overlappingMode && 1 === coordinates.count && !(0, _type.isNumeric)(overlappingMode) ? coordinates.count : this._getMaxAppointmentCountPerCellByType(coordinates.allDay)\r\n    };\r\n    _proto._getDefaultRatio = function(coordinates, appointmentCountPerCell) {\r\n        return coordinates.count > this.instance.option(\"_appointmentCountPerCell\") ? .65 : 1\r\n    };\r\n    _proto._getOffsets = function() {\r\n        return {\r\n            unlimited: ALLDAY_APPOINTMENT_MIN_VERTICAL_OFFSET,\r\n            auto: ALLDAY_APPOINTMENT_MAX_VERTICAL_OFFSET\r\n        }\r\n    };\r\n    _proto._getMaxHeight = function() {\r\n        return this.getDefaultAllDayCellHeight() || this.getAppointmentMinSize()\r\n    };\r\n    _proto._needVerticalGroupBounds = function(allDay) {\r\n        return !allDay\r\n    };\r\n    _proto._needHorizontalGroupBounds = function() {\r\n        return false\r\n    };\r\n    return VerticalRenderingStrategy\r\n}(_uiSchedulerAppointmentsStrategy.default);\r\nvar _default = VerticalRenderingStrategy;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}