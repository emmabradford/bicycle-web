{"ast":null,"code":"/**\r\n * DevExtreme (ui/scheduler/workspaces/ui.scheduler.timeline.js)\r\n * Version: 20.2.7\r\n * Build date: Thu Apr 22 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _renderer = _interopRequireDefault(require(\"../../../core/renderer\"));\n\nvar _common = require(\"../../../core/utils/common\");\n\nvar _extend = require(\"../../../core/utils/extend\");\n\nvar _position = require(\"../../../core/utils/position\");\n\nvar _component_registrator = _interopRequireDefault(require(\"../../../core/component_registrator\"));\n\nvar _uiSchedulerWork_space = _interopRequireDefault(require(\"./ui.scheduler.work_space.indicator\"));\n\nvar _date = _interopRequireDefault(require(\"../../../core/utils/date\"));\n\nvar _uiScheduler = _interopRequireDefault(require(\"../ui.scheduler.table_creator\"));\n\nvar _uiSchedulerCurrent_time_shader = _interopRequireDefault(require(\"../shaders/ui.scheduler.current_time_shader.horizontal\"));\n\nvar _utils = _interopRequireDefault(require(\"../utils.timeZone\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function (o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar tableCreator = _uiScheduler.default.tableCreator;\nvar TIMELINE_CLASS = \"dx-scheduler-timeline\";\nvar GROUP_TABLE_CLASS = \"dx-scheduler-group-table\";\nvar HORIZONTAL_GROUPED_WORKSPACE_CLASS = \"dx-scheduler-work-space-horizontal-grouped\";\nvar HEADER_PANEL_CELL_CLASS = \"dx-scheduler-header-panel-cell\";\nvar HEADER_PANEL_WEEK_CELL_CLASS = \"dx-scheduler-header-panel-week-cell\";\nvar HEADER_ROW_CLASS = \"dx-scheduler-header-row\";\nvar HORIZONTAL = \"horizontal\";\nvar DATE_TABLE_CELL_BORDER = 1;\nvar DATE_TABLE_HEADER_MARGIN = 10;\nvar toMs = _date.default.dateToMilliseconds;\n\nvar SchedulerTimeline = function (_SchedulerWorkSpace) {\n  _inheritsLoose(SchedulerTimeline, _SchedulerWorkSpace);\n\n  function SchedulerTimeline() {\n    return _SchedulerWorkSpace.apply(this, arguments) || this;\n  }\n\n  var _proto = SchedulerTimeline.prototype;\n\n  _proto._init = function () {\n    _SchedulerWorkSpace.prototype._init.call(this);\n\n    this.$element().addClass(TIMELINE_CLASS);\n    this._$sidebarTable = (0, _renderer.default)(\"<div>\").addClass(GROUP_TABLE_CLASS);\n  };\n\n  _proto._getCellFromNextRow = function (direction, isMultiSelection) {\n    if (!isMultiSelection) {\n      return _SchedulerWorkSpace.prototype._getCellFromNextRow.call(this, direction, isMultiSelection);\n    }\n\n    return this._$focusedCell;\n  };\n\n  _proto._getDefaultGroupStrategy = function () {\n    return \"vertical\";\n  };\n\n  _proto._toggleGroupingDirectionClass = function () {\n    this.$element().toggleClass(HORIZONTAL_GROUPED_WORKSPACE_CLASS, this._isHorizontalGroupedWorkSpace());\n  };\n\n  _proto._getDefaultOptions = function () {\n    return (0, _extend.extend)(_SchedulerWorkSpace.prototype._getDefaultOptions.call(this), {\n      groupOrientation: \"vertical\"\n    });\n  };\n\n  _proto._getRowCount = function () {\n    return 1;\n  };\n\n  _proto._getCellCount = function () {\n    return this._getCellCountInDay() * this.option(\"intervalCount\");\n  };\n\n  _proto.getGroupTableWidth = function () {\n    return this._$sidebarTable ? this._$sidebarTable.outerWidth() : 0;\n  };\n\n  _proto._getTotalRowCount = function (groupCount) {\n    if (this._isHorizontalGroupedWorkSpace()) {\n      return this._getRowCount();\n    } else {\n      groupCount = groupCount || 1;\n      return this._getRowCount() * groupCount;\n    }\n  };\n\n  _proto._getDateForHeaderText = function (index) {\n    var newFirstViewDate = _utils.default.getDateWithoutTimezoneChange(this._firstViewDate);\n\n    return this._getDateByIndexCore(newFirstViewDate, index);\n  };\n\n  _proto._getDateByIndexCore = function (date, index) {\n    var result = new Date(date);\n    var dayIndex = Math.floor(index / this._getCellCountInDay());\n    result.setTime(date.getTime() + this._calculateCellIndex(0, index) * this._getInterval() + dayIndex * this._getHiddenInterval());\n    return result;\n  };\n\n  _proto._getDateByIndex = function (index) {\n    var newFirstViewDate = _utils.default.getDateWithoutTimezoneChange(this._firstViewDate);\n\n    var result = this._getDateByIndexCore(newFirstViewDate, index);\n\n    if (_utils.default.isTimezoneChangeInDate(this._firstViewDate)) {\n      result.setDate(result.getDate() - 1);\n    }\n\n    return result;\n  };\n\n  _proto._getFormat = function () {\n    return \"shorttime\";\n  };\n\n  _proto._needApplyLastGroupCellClass = function () {\n    return true;\n  };\n\n  _proto._calculateHiddenInterval = function (rowIndex, cellIndex) {\n    var dayIndex = Math.floor(cellIndex / this._getCellCountInDay());\n    return dayIndex * this._getHiddenInterval();\n  };\n\n  _proto._getMillisecondsOffset = function (rowIndex, cellIndex) {\n    cellIndex = this._calculateCellIndex(rowIndex, cellIndex);\n    return this._getInterval() * cellIndex + this._calculateHiddenInterval(rowIndex, cellIndex);\n  };\n\n  _proto._createWorkSpaceElements = function () {\n    this._createWorkSpaceScrollableElements();\n  };\n\n  _proto._getWorkSpaceHeight = function () {\n    if (this.option(\"crossScrollingEnabled\")) {\n      return (0, _position.getBoundingRect)(this._$dateTable.get(0)).height;\n    }\n\n    return (0, _position.getBoundingRect)(this.$element().get(0)).height;\n  };\n\n  _proto._dateTableScrollableConfig = function () {\n    var config = _SchedulerWorkSpace.prototype._dateTableScrollableConfig.call(this);\n\n    var timelineConfig = {\n      direction: HORIZONTAL\n    };\n    return this.option(\"crossScrollingEnabled\") ? config : (0, _extend.extend)(config, timelineConfig);\n  };\n\n  _proto._needCreateCrossScrolling = function () {\n    return true;\n  };\n\n  _proto._headerScrollableConfig = function () {\n    var config = _SchedulerWorkSpace.prototype._headerScrollableConfig.call(this);\n\n    return (0, _extend.extend)(config, {\n      scrollByContent: true\n    });\n  };\n\n  _proto._renderTimePanel = function () {\n    return (0, _common.noop)();\n  };\n\n  _proto._renderAllDayPanel = function () {\n    return (0, _common.noop)();\n  };\n\n  _proto._getTableAllDay = function () {\n    return false;\n  };\n\n  _proto._getDateHeaderTemplate = function () {\n    return this.option(\"timeCellTemplate\");\n  };\n\n  _proto._toggleAllDayVisibility = function () {\n    return (0, _common.noop)();\n  };\n\n  _proto._changeAllDayVisibility = function () {\n    return (0, _common.noop)();\n  };\n\n  _proto.supportAllDayRow = function () {\n    return false;\n  };\n\n  _proto._getGroupHeaderContainer = function () {\n    if (this._isHorizontalGroupedWorkSpace()) {\n      return this._$thead;\n    }\n\n    return this._$sidebarTable;\n  };\n\n  _proto._insertAllDayRowsIntoDateTable = function () {\n    return false;\n  };\n\n  _proto._createAllDayPanelElements = function () {\n    return (0, _common.noop)();\n  };\n\n  _proto._renderDateHeader = function () {\n    var $headerRow = _SchedulerWorkSpace.prototype._renderDateHeader.call(this);\n\n    if (this._needRenderWeekHeader()) {\n      var firstViewDate = new Date(this._firstViewDate);\n      var $cells = [];\n\n      var colspan = this._getCellCountInDay();\n\n      var cellTemplate = this.option(\"dateCellTemplate\");\n\n      for (var i = 0; i < this._getWeekDuration() * this.option(\"intervalCount\"); i++) {\n        var $th = (0, _renderer.default)(\"<th>\");\n\n        var text = this._formatWeekdayAndDay(firstViewDate);\n\n        if (cellTemplate) {\n          var templateOptions = {\n            model: {\n              text: text,\n              date: new Date(firstViewDate)\n            },\n            container: $th,\n            index: i\n          };\n          cellTemplate.render(templateOptions);\n        } else {\n          $th.text(text);\n        }\n\n        $th.addClass(HEADER_PANEL_CELL_CLASS).addClass(HEADER_PANEL_WEEK_CELL_CLASS).attr(\"colSpan\", colspan);\n        $cells.push($th);\n\n        this._incrementDate(firstViewDate);\n      }\n\n      var $row = (0, _renderer.default)(\"<tr>\").addClass(HEADER_ROW_CLASS).append($cells);\n      $headerRow.before($row);\n    }\n  };\n\n  _proto._needRenderWeekHeader = function () {\n    return false;\n  };\n\n  _proto._incrementDate = function (date) {\n    date.setDate(date.getDate() + 1);\n  };\n\n  _proto._getWeekDuration = function () {\n    return 1;\n  };\n\n  _proto._renderView = function () {\n    this._setFirstViewDate();\n\n    var groupCellTemplates = this._renderGroupHeader();\n\n    this._renderDateHeader();\n\n    this._renderAllDayPanel();\n\n    this._renderTimePanel();\n\n    this._renderDateTable();\n\n    this._shader = new _uiSchedulerCurrent_time_shader.default(this);\n\n    this._updateGroupTableHeight();\n\n    this._$sidebarTable.appendTo(this._sidebarScrollable.$content());\n\n    this._applyCellTemplates(groupCellTemplates);\n  };\n\n  _proto._setHorizontalGroupHeaderCellsHeight = function () {\n    return (0, _common.noop)();\n  };\n\n  _proto.getIndicationCellCount = function () {\n    var timeDiff = this._getTimeDiff();\n\n    return this._calculateDurationInCells(timeDiff);\n  };\n\n  _proto._getTimeDiff = function () {\n    var today = this._getToday();\n\n    var date = this._getIndicationFirstViewDate();\n\n    return today.getTime() - date.getTime();\n  };\n\n  _proto._calculateDurationInCells = function (timeDiff) {\n    var today = this._getToday();\n\n    var differenceInDays = Math.floor(timeDiff / toMs(\"day\"));\n    var duration = (timeDiff - differenceInDays * toMs(\"day\") - this.option(\"startDayHour\") * toMs(\"hour\")) / this.getCellDuration();\n\n    if (today.getHours() > this.option(\"endDayHour\")) {\n      duration = this._getCellCountInDay();\n    }\n\n    if (duration < 0) {\n      duration = 0;\n    }\n\n    return differenceInDays * this._getCellCountInDay() + duration;\n  };\n\n  _proto.getIndicationWidth = function () {\n    if (this.isGroupedByDate()) {\n      var cellCount = this.getIndicationCellCount();\n      var integerPart = Math.floor(cellCount);\n      var fractionPart = cellCount - integerPart;\n      return this.getCellWidth() * (integerPart * this._getGroupCount() + fractionPart);\n    } else {\n      return this.getIndicationCellCount() * this.getCellWidth();\n    }\n  };\n\n  _proto._renderIndicator = function (height, rtlOffset, $container, groupCount) {\n    var $indicator;\n    var width = this.getIndicationWidth();\n\n    if (\"vertical\" === this.option(\"groupOrientation\")) {\n      $indicator = this._createIndicator($container);\n      $indicator.height((0, _position.getBoundingRect)($container.get(0)).height);\n      $indicator.css(\"left\", rtlOffset ? rtlOffset - width : width);\n    } else {\n      for (var i = 0; i < groupCount; i++) {\n        var offset = this.isGroupedByDate() ? i * this.getCellWidth() : this._getCellCount() * this.getCellWidth() * i;\n        $indicator = this._createIndicator($container);\n        $indicator.height((0, _position.getBoundingRect)($container.get(0)).height);\n        $indicator.css(\"left\", rtlOffset ? rtlOffset - width - offset : width + offset);\n      }\n    }\n  };\n\n  _proto._isVerticalShader = function () {\n    return false;\n  };\n\n  _proto._isCurrentTimeHeaderCell = function (headerIndex) {\n    var result = false;\n\n    if (this.isIndicationOnView()) {\n      var date = this._getDateByIndex(headerIndex);\n\n      var now = this._getToday();\n\n      date = new Date(date);\n\n      if (_date.default.sameDate(now, date)) {\n        var startCellDate = new Date(date);\n        var endCellDate = new Date(date);\n        endCellDate = endCellDate.setMilliseconds(date.getMilliseconds() + this.getCellDuration());\n        result = _date.default.dateInRange(now, startCellDate, endCellDate);\n      }\n    }\n\n    return result;\n  };\n\n  _proto._cleanView = function () {\n    _SchedulerWorkSpace.prototype._cleanView.call(this);\n\n    this._$sidebarTable.empty();\n  };\n\n  _proto._visibilityChanged = function (visible) {\n    _SchedulerWorkSpace.prototype._visibilityChanged.call(this, visible);\n  };\n\n  _proto._setTableSizes = function () {\n    var cellHeight = this.getCellHeight();\n\n    var minHeight = this._getWorkSpaceMinHeight();\n\n    var $groupCells = this._$sidebarTable.find(\"tr\");\n\n    var height = cellHeight * $groupCells.length;\n\n    if (height < minHeight) {\n      height = minHeight;\n    }\n\n    this._$sidebarTable.height(height);\n\n    this._$dateTable.height(height);\n\n    _SchedulerWorkSpace.prototype._setTableSizes.call(this);\n  };\n\n  _proto._getWorkSpaceMinHeight = function () {\n    var minHeight = this._getWorkSpaceHeight();\n\n    var workspaceContainerHeight = this.$element().outerHeight(true) - this.getHeaderPanelHeight() - 2 * DATE_TABLE_CELL_BORDER - DATE_TABLE_HEADER_MARGIN;\n\n    if (minHeight < workspaceContainerHeight) {\n      minHeight = workspaceContainerHeight;\n    }\n\n    return minHeight;\n  };\n\n  _proto._makeGroupRows = function (groups, groupByDate) {\n    var tableCreatorStrategy = \"vertical\" === this.option(\"groupOrientation\") ? tableCreator.VERTICAL : tableCreator.HORIZONTAL;\n    return tableCreator.makeGroupedTable(tableCreatorStrategy, groups, {\n      groupRowClass: this._getGroupRowClass(),\n      groupHeaderRowClass: this._getGroupRowClass(),\n      groupHeaderClass: this._getGroupHeaderClass.bind(this),\n      groupHeaderContentClass: this._getGroupHeaderContentClass()\n    }, this._getCellCount() || 1, this.option(\"resourceCellTemplate\"), this._getTotalRowCount(this._getGroupCount()), groupByDate);\n  };\n\n  _proto._ensureGroupHeaderCellsHeight = function (cellHeight) {\n    var minCellHeight = this._calculateMinCellHeight();\n\n    if (cellHeight < minCellHeight) {\n      return minCellHeight;\n    }\n\n    return cellHeight;\n  };\n\n  _proto._calculateMinCellHeight = function () {\n    var dateTable = this._getDateTable();\n\n    var dateTableRowSelector = \".\" + this._getDateTableRowClass();\n\n    return (0, _position.getBoundingRect)(dateTable).height / dateTable.find(dateTableRowSelector).length - 2 * DATE_TABLE_CELL_BORDER;\n  };\n\n  _proto._getCellCoordinatesByIndex = function (index) {\n    return {\n      cellIndex: index % this._getCellCount(),\n      rowIndex: 0\n    };\n  };\n\n  _proto._getCellByCoordinates = function (cellCoordinates, groupIndex) {\n    var indexes = this._groupedStrategy.prepareCellIndexes(cellCoordinates, groupIndex);\n\n    return this._$dateTable.find(\"tr\").eq(indexes.rowIndex).find(\"td\").eq(indexes.cellIndex);\n  };\n\n  _proto._getWorkSpaceWidth = function () {\n    return this._$dateTable.outerWidth(true);\n  };\n\n  _proto._getIndicationFirstViewDate = function () {\n    return _date.default.trimTime(new Date(this._firstViewDate));\n  };\n\n  _proto._getIntervalBetween = function (currentDate, allDay) {\n    var startDayHour = this.option(\"startDayHour\");\n    var endDayHour = this.option(\"endDayHour\");\n    var firstViewDate = this.getStartViewDate();\n    var firstViewDateTime = firstViewDate.getTime();\n    var hiddenInterval = (24 - endDayHour + startDayHour) * toMs(\"hour\");\n\n    var timeZoneOffset = _date.default.getTimezonesDifference(firstViewDate, currentDate);\n\n    var apptStart = currentDate.getTime();\n    var fullInterval = apptStart - firstViewDateTime - timeZoneOffset;\n    var fullDays = Math.floor(fullInterval / toMs(\"day\"));\n    var tailDuration = fullInterval - fullDays * toMs(\"day\");\n    var tailDelta = 0;\n\n    var cellCount = this._getCellCountInDay() * (fullDays - this._getWeekendsCount(fullDays));\n\n    var gapBeforeAppt = apptStart - _date.default.trimTime(new Date(currentDate)).getTime();\n\n    var result = cellCount * this.option(\"hoursInterval\") * toMs(\"hour\");\n\n    if (!allDay) {\n      if (currentDate.getHours() < startDayHour) {\n        tailDelta = tailDuration - hiddenInterval + gapBeforeAppt;\n      } else {\n        if (currentDate.getHours() >= startDayHour && currentDate.getHours() < endDayHour) {\n          tailDelta = tailDuration;\n        } else {\n          if (currentDate.getHours() >= startDayHour && currentDate.getHours() >= endDayHour) {\n            tailDelta = tailDuration - (gapBeforeAppt - endDayHour * toMs(\"hour\"));\n          } else {\n            if (!fullDays) {\n              result = fullInterval;\n            }\n          }\n        }\n      }\n\n      result += tailDelta;\n    }\n\n    return result;\n  };\n\n  _proto._getWeekendsCount = function () {\n    return 0;\n  };\n\n  _proto.getAllDayContainer = function () {\n    return null;\n  };\n\n  _proto.getTimePanelWidth = function () {\n    return 0;\n  };\n\n  _proto.getPositionShift = function (timeShift) {\n    var positionShift = _SchedulerWorkSpace.prototype.getPositionShift.call(this, timeShift);\n\n    var left = this.getCellWidth() * timeShift;\n\n    if (this.option(\"rtlEnabled\")) {\n      left *= -1;\n    }\n\n    left += positionShift.left;\n    return {\n      top: 0,\n      left: left,\n      cellPosition: left\n    };\n  };\n\n  _proto.getVisibleBounds = function () {\n    var isRtl = this.option(\"rtlEnabled\");\n    var result = {};\n    var $scrollable = this.getScrollable().$element();\n    var cellWidth = this.getCellWidth();\n    var scrollableOffset = isRtl ? this.getScrollableOuterWidth() - this.getScrollableScrollLeft() : this.getScrollableScrollLeft();\n    var scrolledCellCount = scrollableOffset / cellWidth;\n    var visibleCellCount = $scrollable.width() / cellWidth;\n    var totalCellCount = isRtl ? scrolledCellCount - visibleCellCount : scrolledCellCount + visibleCellCount;\n\n    var leftDate = this._getDateByIndex(scrolledCellCount);\n\n    var rightDate = this._getDateByIndex(totalCellCount);\n\n    if (isRtl) {\n      leftDate = this._getDateByIndex(totalCellCount);\n      rightDate = this._getDateByIndex(scrolledCellCount);\n    }\n\n    result.left = {\n      hours: leftDate.getHours(),\n      minutes: leftDate.getMinutes() >= 30 ? 30 : 0,\n      date: _date.default.trimTime(leftDate)\n    };\n    result.right = {\n      hours: rightDate.getHours(),\n      minutes: rightDate.getMinutes() >= 30 ? 30 : 0,\n      date: _date.default.trimTime(rightDate)\n    };\n    return result;\n  };\n\n  _proto.getIntervalDuration = function (allDay) {\n    return this.getCellDuration();\n  };\n\n  _proto._supportCompactDropDownAppointments = function () {\n    return false;\n  };\n\n  _proto.getCellMinWidth = function () {\n    return 0;\n  };\n\n  _proto.getWorkSpaceLeftOffset = function () {\n    return 0;\n  };\n\n  _proto.scrollToTime = function (hours, minutes, date) {\n    var coordinates = this._getScrollCoordinates(hours, minutes, date);\n\n    var scrollable = this.getScrollable();\n    var offset = this.option(\"rtlEnabled\") ? (0, _position.getBoundingRect)(this.getScrollableContainer().get(0)).width : 0;\n\n    if (this.option(\"templatesRenderAsynchronously\")) {\n      setTimeout(function () {\n        scrollable.scrollBy({\n          left: coordinates.left - scrollable.scrollLeft() - offset,\n          top: 0\n        });\n      });\n    } else {\n      scrollable.scrollBy({\n        left: coordinates.left - scrollable.scrollLeft() - offset,\n        top: 0\n      });\n    }\n  };\n\n  _proto._getRowCountWithAllDayRows = function () {\n    return this._getRowCount();\n  };\n\n  return SchedulerTimeline;\n}(_uiSchedulerWork_space.default);\n\n(0, _component_registrator.default)(\"dxSchedulerTimeline\", SchedulerTimeline);\nvar _default = SchedulerTimeline;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["/home/emma/node_modules/devextreme/ui/scheduler/workspaces/ui.scheduler.timeline.js"],"names":["exports","default","_renderer","_interopRequireDefault","require","_common","_extend","_position","_component_registrator","_uiSchedulerWork_space","_date","_uiScheduler","_uiSchedulerCurrent_time_shader","_utils","obj","__esModule","_inheritsLoose","subClass","superClass","prototype","Object","create","constructor","_setPrototypeOf","o","p","setPrototypeOf","__proto__","tableCreator","TIMELINE_CLASS","GROUP_TABLE_CLASS","HORIZONTAL_GROUPED_WORKSPACE_CLASS","HEADER_PANEL_CELL_CLASS","HEADER_PANEL_WEEK_CELL_CLASS","HEADER_ROW_CLASS","HORIZONTAL","DATE_TABLE_CELL_BORDER","DATE_TABLE_HEADER_MARGIN","toMs","dateToMilliseconds","SchedulerTimeline","_SchedulerWorkSpace","apply","arguments","_proto","_init","call","$element","addClass","_$sidebarTable","_getCellFromNextRow","direction","isMultiSelection","_$focusedCell","_getDefaultGroupStrategy","_toggleGroupingDirectionClass","toggleClass","_isHorizontalGroupedWorkSpace","_getDefaultOptions","extend","groupOrientation","_getRowCount","_getCellCount","_getCellCountInDay","option","getGroupTableWidth","outerWidth","_getTotalRowCount","groupCount","_getDateForHeaderText","index","newFirstViewDate","getDateWithoutTimezoneChange","_firstViewDate","_getDateByIndexCore","date","result","Date","dayIndex","Math","floor","setTime","getTime","_calculateCellIndex","_getInterval","_getHiddenInterval","_getDateByIndex","isTimezoneChangeInDate","setDate","getDate","_getFormat","_needApplyLastGroupCellClass","_calculateHiddenInterval","rowIndex","cellIndex","_getMillisecondsOffset","_createWorkSpaceElements","_createWorkSpaceScrollableElements","_getWorkSpaceHeight","getBoundingRect","_$dateTable","get","height","_dateTableScrollableConfig","config","timelineConfig","_needCreateCrossScrolling","_headerScrollableConfig","scrollByContent","_renderTimePanel","noop","_renderAllDayPanel","_getTableAllDay","_getDateHeaderTemplate","_toggleAllDayVisibility","_changeAllDayVisibility","supportAllDayRow","_getGroupHeaderContainer","_$thead","_insertAllDayRowsIntoDateTable","_createAllDayPanelElements","_renderDateHeader","$headerRow","_needRenderWeekHeader","firstViewDate","$cells","colspan","cellTemplate","i","_getWeekDuration","$th","text","_formatWeekdayAndDay","templateOptions","model","container","render","attr","push","_incrementDate","$row","append","before","_renderView","_setFirstViewDate","groupCellTemplates","_renderGroupHeader","_renderDateTable","_shader","_updateGroupTableHeight","appendTo","_sidebarScrollable","$content","_applyCellTemplates","_setHorizontalGroupHeaderCellsHeight","getIndicationCellCount","timeDiff","_getTimeDiff","_calculateDurationInCells","today","_getToday","_getIndicationFirstViewDate","differenceInDays","duration","getCellDuration","getHours","getIndicationWidth","isGroupedByDate","cellCount","integerPart","fractionPart","getCellWidth","_getGroupCount","_renderIndicator","rtlOffset","$container","$indicator","width","_createIndicator","css","offset","_isVerticalShader","_isCurrentTimeHeaderCell","headerIndex","isIndicationOnView","now","sameDate","startCellDate","endCellDate","setMilliseconds","getMilliseconds","dateInRange","_cleanView","empty","_visibilityChanged","visible","_setTableSizes","cellHeight","getCellHeight","minHeight","_getWorkSpaceMinHeight","$groupCells","find","length","workspaceContainerHeight","outerHeight","getHeaderPanelHeight","_makeGroupRows","groups","groupByDate","tableCreatorStrategy","VERTICAL","makeGroupedTable","groupRowClass","_getGroupRowClass","groupHeaderRowClass","groupHeaderClass","_getGroupHeaderClass","bind","groupHeaderContentClass","_getGroupHeaderContentClass","_ensureGroupHeaderCellsHeight","minCellHeight","_calculateMinCellHeight","dateTable","_getDateTable","dateTableRowSelector","_getDateTableRowClass","_getCellCoordinatesByIndex","_getCellByCoordinates","cellCoordinates","groupIndex","indexes","_groupedStrategy","prepareCellIndexes","eq","_getWorkSpaceWidth","trimTime","_getIntervalBetween","currentDate","allDay","startDayHour","endDayHour","getStartViewDate","firstViewDateTime","hiddenInterval","timeZoneOffset","getTimezonesDifference","apptStart","fullInterval","fullDays","tailDuration","tailDelta","_getWeekendsCount","gapBeforeAppt","getAllDayContainer","getTimePanelWidth","getPositionShift","timeShift","positionShift","left","top","cellPosition","getVisibleBounds","isRtl","$scrollable","getScrollable","cellWidth","scrollableOffset","getScrollableOuterWidth","getScrollableScrollLeft","scrolledCellCount","visibleCellCount","totalCellCount","leftDate","rightDate","hours","minutes","getMinutes","right","getIntervalDuration","_supportCompactDropDownAppointments","getCellMinWidth","getWorkSpaceLeftOffset","scrollToTime","coordinates","_getScrollCoordinates","scrollable","getScrollableContainer","setTimeout","scrollBy","scrollLeft","_getRowCountWithAllDayRows","_default","module"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,OAAO,CAACC,OAAR,GAAkB,KAAK,CAAvB;;AACA,IAAIC,SAAS,GAAGC,sBAAsB,CAACC,OAAO,CAAC,wBAAD,CAAR,CAAtC;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,4BAAD,CAArB;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,4BAAD,CAArB;;AACA,IAAIG,SAAS,GAAGH,OAAO,CAAC,8BAAD,CAAvB;;AACA,IAAII,sBAAsB,GAAGL,sBAAsB,CAACC,OAAO,CAAC,qCAAD,CAAR,CAAnD;;AACA,IAAIK,sBAAsB,GAAGN,sBAAsB,CAACC,OAAO,CAAC,qCAAD,CAAR,CAAnD;;AACA,IAAIM,KAAK,GAAGP,sBAAsB,CAACC,OAAO,CAAC,0BAAD,CAAR,CAAlC;;AACA,IAAIO,YAAY,GAAGR,sBAAsB,CAACC,OAAO,CAAC,+BAAD,CAAR,CAAzC;;AACA,IAAIQ,+BAA+B,GAAGT,sBAAsB,CAACC,OAAO,CAAC,wDAAD,CAAR,CAA5D;;AACA,IAAIS,MAAM,GAAGV,sBAAsB,CAACC,OAAO,CAAC,mBAAD,CAAR,CAAnC;;AAEA,SAASD,sBAAT,CAAgCW,GAAhC,EAAqC;AACjC,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AACjC,eAAWA;AADsB,GAArC;AAGH;;AAED,SAASE,cAAT,CAAwBC,QAAxB,EAAkCC,UAAlC,EAA8C;AAC1CD,EAAAA,QAAQ,CAACE,SAAT,GAAqBC,MAAM,CAACC,MAAP,CAAcH,UAAU,CAACC,SAAzB,CAArB;AACAF,EAAAA,QAAQ,CAACE,SAAT,CAAmBG,WAAnB,GAAiCL,QAAjC;;AACAM,EAAAA,eAAe,CAACN,QAAD,EAAWC,UAAX,CAAf;AACH;;AAED,SAASK,eAAT,CAAyBC,CAAzB,EAA4BC,CAA5B,EAA+B;AAC3BF,EAAAA,eAAe,GAAGH,MAAM,CAACM,cAAP,IAAyB,UAASF,CAAT,EAAYC,CAAZ,EAAe;AACtDD,IAAAA,CAAC,CAACG,SAAF,GAAcF,CAAd;AACA,WAAOD,CAAP;AACH,GAHD;;AAIA,SAAOD,eAAe,CAACC,CAAD,EAAIC,CAAJ,CAAtB;AACH;;AACD,IAAIG,YAAY,GAAGjB,YAAY,CAACV,OAAb,CAAqB2B,YAAxC;AACA,IAAIC,cAAc,GAAG,uBAArB;AACA,IAAIC,iBAAiB,GAAG,0BAAxB;AACA,IAAIC,kCAAkC,GAAG,4CAAzC;AACA,IAAIC,uBAAuB,GAAG,gCAA9B;AACA,IAAIC,4BAA4B,GAAG,qCAAnC;AACA,IAAIC,gBAAgB,GAAG,yBAAvB;AACA,IAAIC,UAAU,GAAG,YAAjB;AACA,IAAIC,sBAAsB,GAAG,CAA7B;AACA,IAAIC,wBAAwB,GAAG,EAA/B;AACA,IAAIC,IAAI,GAAG5B,KAAK,CAACT,OAAN,CAAcsC,kBAAzB;;AACA,IAAIC,iBAAiB,GAAG,UAASC,mBAAT,EAA8B;AAClDzB,EAAAA,cAAc,CAACwB,iBAAD,EAAoBC,mBAApB,CAAd;;AAEA,WAASD,iBAAT,GAA6B;AACzB,WAAOC,mBAAmB,CAACC,KAApB,CAA0B,IAA1B,EAAgCC,SAAhC,KAA8C,IAArD;AACH;;AACD,MAAIC,MAAM,GAAGJ,iBAAiB,CAACrB,SAA/B;;AACAyB,EAAAA,MAAM,CAACC,KAAP,GAAe,YAAW;AACtBJ,IAAAA,mBAAmB,CAACtB,SAApB,CAA8B0B,KAA9B,CAAoCC,IAApC,CAAyC,IAAzC;;AACA,SAAKC,QAAL,GAAgBC,QAAhB,CAAyBnB,cAAzB;AACA,SAAKoB,cAAL,GAAsB,CAAC,GAAG/C,SAAS,CAACD,OAAd,EAAuB,OAAvB,EAAgC+C,QAAhC,CAAyClB,iBAAzC,CAAtB;AACH,GAJD;;AAKAc,EAAAA,MAAM,CAACM,mBAAP,GAA6B,UAASC,SAAT,EAAoBC,gBAApB,EAAsC;AAC/D,QAAI,CAACA,gBAAL,EAAuB;AACnB,aAAOX,mBAAmB,CAACtB,SAApB,CAA8B+B,mBAA9B,CAAkDJ,IAAlD,CAAuD,IAAvD,EAA6DK,SAA7D,EAAwEC,gBAAxE,CAAP;AACH;;AACD,WAAO,KAAKC,aAAZ;AACH,GALD;;AAMAT,EAAAA,MAAM,CAACU,wBAAP,GAAkC,YAAW;AACzC,WAAO,UAAP;AACH,GAFD;;AAGAV,EAAAA,MAAM,CAACW,6BAAP,GAAuC,YAAW;AAC9C,SAAKR,QAAL,GAAgBS,WAAhB,CAA4BzB,kCAA5B,EAAgE,KAAK0B,6BAAL,EAAhE;AACH,GAFD;;AAGAb,EAAAA,MAAM,CAACc,kBAAP,GAA4B,YAAW;AACnC,WAAO,CAAC,GAAGpD,OAAO,CAACqD,MAAZ,EAAoBlB,mBAAmB,CAACtB,SAApB,CAA8BuC,kBAA9B,CAAiDZ,IAAjD,CAAsD,IAAtD,CAApB,EAAiF;AACpFc,MAAAA,gBAAgB,EAAE;AADkE,KAAjF,CAAP;AAGH,GAJD;;AAKAhB,EAAAA,MAAM,CAACiB,YAAP,GAAsB,YAAW;AAC7B,WAAO,CAAP;AACH,GAFD;;AAGAjB,EAAAA,MAAM,CAACkB,aAAP,GAAuB,YAAW;AAC9B,WAAO,KAAKC,kBAAL,KAA4B,KAAKC,MAAL,CAAY,eAAZ,CAAnC;AACH,GAFD;;AAGApB,EAAAA,MAAM,CAACqB,kBAAP,GAA4B,YAAW;AACnC,WAAO,KAAKhB,cAAL,GAAsB,KAAKA,cAAL,CAAoBiB,UAApB,EAAtB,GAAyD,CAAhE;AACH,GAFD;;AAGAtB,EAAAA,MAAM,CAACuB,iBAAP,GAA2B,UAASC,UAAT,EAAqB;AAC5C,QAAI,KAAKX,6BAAL,EAAJ,EAA0C;AACtC,aAAO,KAAKI,YAAL,EAAP;AACH,KAFD,MAEO;AACHO,MAAAA,UAAU,GAAGA,UAAU,IAAI,CAA3B;AACA,aAAO,KAAKP,YAAL,KAAsBO,UAA7B;AACH;AACJ,GAPD;;AAQAxB,EAAAA,MAAM,CAACyB,qBAAP,GAA+B,UAASC,KAAT,EAAgB;AAC3C,QAAIC,gBAAgB,GAAG1D,MAAM,CAACZ,OAAP,CAAeuE,4BAAf,CAA4C,KAAKC,cAAjD,CAAvB;;AACA,WAAO,KAAKC,mBAAL,CAAyBH,gBAAzB,EAA2CD,KAA3C,CAAP;AACH,GAHD;;AAIA1B,EAAAA,MAAM,CAAC8B,mBAAP,GAA6B,UAASC,IAAT,EAAeL,KAAf,EAAsB;AAC/C,QAAIM,MAAM,GAAG,IAAIC,IAAJ,CAASF,IAAT,CAAb;AACA,QAAIG,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWV,KAAK,GAAG,KAAKP,kBAAL,EAAnB,CAAf;AACAa,IAAAA,MAAM,CAACK,OAAP,CAAeN,IAAI,CAACO,OAAL,KAAiB,KAAKC,mBAAL,CAAyB,CAAzB,EAA4Bb,KAA5B,IAAqC,KAAKc,YAAL,EAAtD,GAA4EN,QAAQ,GAAG,KAAKO,kBAAL,EAAtG;AACA,WAAOT,MAAP;AACH,GALD;;AAMAhC,EAAAA,MAAM,CAAC0C,eAAP,GAAyB,UAAShB,KAAT,EAAgB;AACrC,QAAIC,gBAAgB,GAAG1D,MAAM,CAACZ,OAAP,CAAeuE,4BAAf,CAA4C,KAAKC,cAAjD,CAAvB;;AACA,QAAIG,MAAM,GAAG,KAAKF,mBAAL,CAAyBH,gBAAzB,EAA2CD,KAA3C,CAAb;;AACA,QAAIzD,MAAM,CAACZ,OAAP,CAAesF,sBAAf,CAAsC,KAAKd,cAA3C,CAAJ,EAAgE;AAC5DG,MAAAA,MAAM,CAACY,OAAP,CAAeZ,MAAM,CAACa,OAAP,KAAmB,CAAlC;AACH;;AACD,WAAOb,MAAP;AACH,GAPD;;AAQAhC,EAAAA,MAAM,CAAC8C,UAAP,GAAoB,YAAW;AAC3B,WAAO,WAAP;AACH,GAFD;;AAGA9C,EAAAA,MAAM,CAAC+C,4BAAP,GAAsC,YAAW;AAC7C,WAAO,IAAP;AACH,GAFD;;AAGA/C,EAAAA,MAAM,CAACgD,wBAAP,GAAkC,UAASC,QAAT,EAAmBC,SAAnB,EAA8B;AAC5D,QAAIhB,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWc,SAAS,GAAG,KAAK/B,kBAAL,EAAvB,CAAf;AACA,WAAOe,QAAQ,GAAG,KAAKO,kBAAL,EAAlB;AACH,GAHD;;AAIAzC,EAAAA,MAAM,CAACmD,sBAAP,GAAgC,UAASF,QAAT,EAAmBC,SAAnB,EAA8B;AAC1DA,IAAAA,SAAS,GAAG,KAAKX,mBAAL,CAAyBU,QAAzB,EAAmCC,SAAnC,CAAZ;AACA,WAAO,KAAKV,YAAL,KAAsBU,SAAtB,GAAkC,KAAKF,wBAAL,CAA8BC,QAA9B,EAAwCC,SAAxC,CAAzC;AACH,GAHD;;AAIAlD,EAAAA,MAAM,CAACoD,wBAAP,GAAkC,YAAW;AACzC,SAAKC,kCAAL;AACH,GAFD;;AAGArD,EAAAA,MAAM,CAACsD,mBAAP,GAA6B,YAAW;AACpC,QAAI,KAAKlC,MAAL,CAAY,uBAAZ,CAAJ,EAA0C;AACtC,aAAO,CAAC,GAAGzD,SAAS,CAAC4F,eAAd,EAA+B,KAAKC,WAAL,CAAiBC,GAAjB,CAAqB,CAArB,CAA/B,EAAwDC,MAA/D;AACH;;AACD,WAAO,CAAC,GAAG/F,SAAS,CAAC4F,eAAd,EAA+B,KAAKpD,QAAL,GAAgBsD,GAAhB,CAAoB,CAApB,CAA/B,EAAuDC,MAA9D;AACH,GALD;;AAMA1D,EAAAA,MAAM,CAAC2D,0BAAP,GAAoC,YAAW;AAC3C,QAAIC,MAAM,GAAG/D,mBAAmB,CAACtB,SAApB,CAA8BoF,0BAA9B,CAAyDzD,IAAzD,CAA8D,IAA9D,CAAb;;AACA,QAAI2D,cAAc,GAAG;AACjBtD,MAAAA,SAAS,EAAEhB;AADM,KAArB;AAGA,WAAO,KAAK6B,MAAL,CAAY,uBAAZ,IAAuCwC,MAAvC,GAAgD,CAAC,GAAGlG,OAAO,CAACqD,MAAZ,EAAoB6C,MAApB,EAA4BC,cAA5B,CAAvD;AACH,GAND;;AAOA7D,EAAAA,MAAM,CAAC8D,yBAAP,GAAmC,YAAW;AAC1C,WAAO,IAAP;AACH,GAFD;;AAGA9D,EAAAA,MAAM,CAAC+D,uBAAP,GAAiC,YAAW;AACxC,QAAIH,MAAM,GAAG/D,mBAAmB,CAACtB,SAApB,CAA8BwF,uBAA9B,CAAsD7D,IAAtD,CAA2D,IAA3D,CAAb;;AACA,WAAO,CAAC,GAAGxC,OAAO,CAACqD,MAAZ,EAAoB6C,MAApB,EAA4B;AAC/BI,MAAAA,eAAe,EAAE;AADc,KAA5B,CAAP;AAGH,GALD;;AAMAhE,EAAAA,MAAM,CAACiE,gBAAP,GAA0B,YAAW;AACjC,WAAO,CAAC,GAAGxG,OAAO,CAACyG,IAAZ,GAAP;AACH,GAFD;;AAGAlE,EAAAA,MAAM,CAACmE,kBAAP,GAA4B,YAAW;AACnC,WAAO,CAAC,GAAG1G,OAAO,CAACyG,IAAZ,GAAP;AACH,GAFD;;AAGAlE,EAAAA,MAAM,CAACoE,eAAP,GAAyB,YAAW;AAChC,WAAO,KAAP;AACH,GAFD;;AAGApE,EAAAA,MAAM,CAACqE,sBAAP,GAAgC,YAAW;AACvC,WAAO,KAAKjD,MAAL,CAAY,kBAAZ,CAAP;AACH,GAFD;;AAGApB,EAAAA,MAAM,CAACsE,uBAAP,GAAiC,YAAW;AACxC,WAAO,CAAC,GAAG7G,OAAO,CAACyG,IAAZ,GAAP;AACH,GAFD;;AAGAlE,EAAAA,MAAM,CAACuE,uBAAP,GAAiC,YAAW;AACxC,WAAO,CAAC,GAAG9G,OAAO,CAACyG,IAAZ,GAAP;AACH,GAFD;;AAGAlE,EAAAA,MAAM,CAACwE,gBAAP,GAA0B,YAAW;AACjC,WAAO,KAAP;AACH,GAFD;;AAGAxE,EAAAA,MAAM,CAACyE,wBAAP,GAAkC,YAAW;AACzC,QAAI,KAAK5D,6BAAL,EAAJ,EAA0C;AACtC,aAAO,KAAK6D,OAAZ;AACH;;AACD,WAAO,KAAKrE,cAAZ;AACH,GALD;;AAMAL,EAAAA,MAAM,CAAC2E,8BAAP,GAAwC,YAAW;AAC/C,WAAO,KAAP;AACH,GAFD;;AAGA3E,EAAAA,MAAM,CAAC4E,0BAAP,GAAoC,YAAW;AAC3C,WAAO,CAAC,GAAGnH,OAAO,CAACyG,IAAZ,GAAP;AACH,GAFD;;AAGAlE,EAAAA,MAAM,CAAC6E,iBAAP,GAA2B,YAAW;AAClC,QAAIC,UAAU,GAAGjF,mBAAmB,CAACtB,SAApB,CAA8BsG,iBAA9B,CAAgD3E,IAAhD,CAAqD,IAArD,CAAjB;;AACA,QAAI,KAAK6E,qBAAL,EAAJ,EAAkC;AAC9B,UAAIC,aAAa,GAAG,IAAI/C,IAAJ,CAAS,KAAKJ,cAAd,CAApB;AACA,UAAIoD,MAAM,GAAG,EAAb;;AACA,UAAIC,OAAO,GAAG,KAAK/D,kBAAL,EAAd;;AACA,UAAIgE,YAAY,GAAG,KAAK/D,MAAL,CAAY,kBAAZ,CAAnB;;AACA,WAAK,IAAIgE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,gBAAL,KAA0B,KAAKjE,MAAL,CAAY,eAAZ,CAA9C,EAA4EgE,CAAC,EAA7E,EAAiF;AAC7E,YAAIE,GAAG,GAAG,CAAC,GAAGhI,SAAS,CAACD,OAAd,EAAuB,MAAvB,CAAV;;AACA,YAAIkI,IAAI,GAAG,KAAKC,oBAAL,CAA0BR,aAA1B,CAAX;;AACA,YAAIG,YAAJ,EAAkB;AACd,cAAIM,eAAe,GAAG;AAClBC,YAAAA,KAAK,EAAE;AACHH,cAAAA,IAAI,EAAEA,IADH;AAEHxD,cAAAA,IAAI,EAAE,IAAIE,IAAJ,CAAS+C,aAAT;AAFH,aADW;AAKlBW,YAAAA,SAAS,EAAEL,GALO;AAMlB5D,YAAAA,KAAK,EAAE0D;AANW,WAAtB;AAQAD,UAAAA,YAAY,CAACS,MAAb,CAAoBH,eAApB;AACH,SAVD,MAUO;AACHH,UAAAA,GAAG,CAACC,IAAJ,CAASA,IAAT;AACH;;AACDD,QAAAA,GAAG,CAAClF,QAAJ,CAAahB,uBAAb,EAAsCgB,QAAtC,CAA+Cf,4BAA/C,EAA6EwG,IAA7E,CAAkF,SAAlF,EAA6FX,OAA7F;AACAD,QAAAA,MAAM,CAACa,IAAP,CAAYR,GAAZ;;AACA,aAAKS,cAAL,CAAoBf,aAApB;AACH;;AACD,UAAIgB,IAAI,GAAG,CAAC,GAAG1I,SAAS,CAACD,OAAd,EAAuB,MAAvB,EAA+B+C,QAA/B,CAAwCd,gBAAxC,EAA0D2G,MAA1D,CAAiEhB,MAAjE,CAAX;AACAH,MAAAA,UAAU,CAACoB,MAAX,CAAkBF,IAAlB;AACH;AACJ,GA9BD;;AA+BAhG,EAAAA,MAAM,CAAC+E,qBAAP,GAA+B,YAAW;AACtC,WAAO,KAAP;AACH,GAFD;;AAGA/E,EAAAA,MAAM,CAAC+F,cAAP,GAAwB,UAAShE,IAAT,EAAe;AACnCA,IAAAA,IAAI,CAACa,OAAL,CAAab,IAAI,CAACc,OAAL,KAAiB,CAA9B;AACH,GAFD;;AAGA7C,EAAAA,MAAM,CAACqF,gBAAP,GAA0B,YAAW;AACjC,WAAO,CAAP;AACH,GAFD;;AAGArF,EAAAA,MAAM,CAACmG,WAAP,GAAqB,YAAW;AAC5B,SAAKC,iBAAL;;AACA,QAAIC,kBAAkB,GAAG,KAAKC,kBAAL,EAAzB;;AACA,SAAKzB,iBAAL;;AACA,SAAKV,kBAAL;;AACA,SAAKF,gBAAL;;AACA,SAAKsC,gBAAL;;AACA,SAAKC,OAAL,GAAe,IAAIxI,+BAA+B,CAACX,OAApC,CAA4C,IAA5C,CAAf;;AACA,SAAKoJ,uBAAL;;AACA,SAAKpG,cAAL,CAAoBqG,QAApB,CAA6B,KAAKC,kBAAL,CAAwBC,QAAxB,EAA7B;;AACA,SAAKC,mBAAL,CAAyBR,kBAAzB;AACH,GAXD;;AAYArG,EAAAA,MAAM,CAAC8G,oCAAP,GAA8C,YAAW;AACrD,WAAO,CAAC,GAAGrJ,OAAO,CAACyG,IAAZ,GAAP;AACH,GAFD;;AAGAlE,EAAAA,MAAM,CAAC+G,sBAAP,GAAgC,YAAW;AACvC,QAAIC,QAAQ,GAAG,KAAKC,YAAL,EAAf;;AACA,WAAO,KAAKC,yBAAL,CAA+BF,QAA/B,CAAP;AACH,GAHD;;AAIAhH,EAAAA,MAAM,CAACiH,YAAP,GAAsB,YAAW;AAC7B,QAAIE,KAAK,GAAG,KAAKC,SAAL,EAAZ;;AACA,QAAIrF,IAAI,GAAG,KAAKsF,2BAAL,EAAX;;AACA,WAAOF,KAAK,CAAC7E,OAAN,KAAkBP,IAAI,CAACO,OAAL,EAAzB;AACH,GAJD;;AAKAtC,EAAAA,MAAM,CAACkH,yBAAP,GAAmC,UAASF,QAAT,EAAmB;AAClD,QAAIG,KAAK,GAAG,KAAKC,SAAL,EAAZ;;AACA,QAAIE,gBAAgB,GAAGnF,IAAI,CAACC,KAAL,CAAW4E,QAAQ,GAAGtH,IAAI,CAAC,KAAD,CAA1B,CAAvB;AACA,QAAI6H,QAAQ,GAAG,CAACP,QAAQ,GAAGM,gBAAgB,GAAG5H,IAAI,CAAC,KAAD,CAAlC,GAA4C,KAAK0B,MAAL,CAAY,cAAZ,IAA8B1B,IAAI,CAAC,MAAD,CAA/E,IAA2F,KAAK8H,eAAL,EAA1G;;AACA,QAAIL,KAAK,CAACM,QAAN,KAAmB,KAAKrG,MAAL,CAAY,YAAZ,CAAvB,EAAkD;AAC9CmG,MAAAA,QAAQ,GAAG,KAAKpG,kBAAL,EAAX;AACH;;AACD,QAAIoG,QAAQ,GAAG,CAAf,EAAkB;AACdA,MAAAA,QAAQ,GAAG,CAAX;AACH;;AACD,WAAOD,gBAAgB,GAAG,KAAKnG,kBAAL,EAAnB,GAA+CoG,QAAtD;AACH,GAXD;;AAYAvH,EAAAA,MAAM,CAAC0H,kBAAP,GAA4B,YAAW;AACnC,QAAI,KAAKC,eAAL,EAAJ,EAA4B;AACxB,UAAIC,SAAS,GAAG,KAAKb,sBAAL,EAAhB;AACA,UAAIc,WAAW,GAAG1F,IAAI,CAACC,KAAL,CAAWwF,SAAX,CAAlB;AACA,UAAIE,YAAY,GAAGF,SAAS,GAAGC,WAA/B;AACA,aAAO,KAAKE,YAAL,MAAuBF,WAAW,GAAG,KAAKG,cAAL,EAAd,GAAsCF,YAA7D,CAAP;AACH,KALD,MAKO;AACH,aAAO,KAAKf,sBAAL,KAAgC,KAAKgB,YAAL,EAAvC;AACH;AACJ,GATD;;AAUA/H,EAAAA,MAAM,CAACiI,gBAAP,GAA0B,UAASvE,MAAT,EAAiBwE,SAAjB,EAA4BC,UAA5B,EAAwC3G,UAAxC,EAAoD;AAC1E,QAAI4G,UAAJ;AACA,QAAIC,KAAK,GAAG,KAAKX,kBAAL,EAAZ;;AACA,QAAI,eAAe,KAAKtG,MAAL,CAAY,kBAAZ,CAAnB,EAAoD;AAChDgH,MAAAA,UAAU,GAAG,KAAKE,gBAAL,CAAsBH,UAAtB,CAAb;AACAC,MAAAA,UAAU,CAAC1E,MAAX,CAAkB,CAAC,GAAG/F,SAAS,CAAC4F,eAAd,EAA+B4E,UAAU,CAAC1E,GAAX,CAAe,CAAf,CAA/B,EAAkDC,MAApE;AACA0E,MAAAA,UAAU,CAACG,GAAX,CAAe,MAAf,EAAuBL,SAAS,GAAGA,SAAS,GAAGG,KAAf,GAAuBA,KAAvD;AACH,KAJD,MAIO;AACH,WAAK,IAAIjD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG5D,UAApB,EAAgC4D,CAAC,EAAjC,EAAqC;AACjC,YAAIoD,MAAM,GAAG,KAAKb,eAAL,KAAyBvC,CAAC,GAAG,KAAK2C,YAAL,EAA7B,GAAmD,KAAK7G,aAAL,KAAuB,KAAK6G,YAAL,EAAvB,GAA6C3C,CAA7G;AACAgD,QAAAA,UAAU,GAAG,KAAKE,gBAAL,CAAsBH,UAAtB,CAAb;AACAC,QAAAA,UAAU,CAAC1E,MAAX,CAAkB,CAAC,GAAG/F,SAAS,CAAC4F,eAAd,EAA+B4E,UAAU,CAAC1E,GAAX,CAAe,CAAf,CAA/B,EAAkDC,MAApE;AACA0E,QAAAA,UAAU,CAACG,GAAX,CAAe,MAAf,EAAuBL,SAAS,GAAGA,SAAS,GAAGG,KAAZ,GAAoBG,MAAvB,GAAgCH,KAAK,GAAGG,MAAxE;AACH;AACJ;AACJ,GAfD;;AAgBAxI,EAAAA,MAAM,CAACyI,iBAAP,GAA2B,YAAW;AAClC,WAAO,KAAP;AACH,GAFD;;AAGAzI,EAAAA,MAAM,CAAC0I,wBAAP,GAAkC,UAASC,WAAT,EAAsB;AACpD,QAAI3G,MAAM,GAAG,KAAb;;AACA,QAAI,KAAK4G,kBAAL,EAAJ,EAA+B;AAC3B,UAAI7G,IAAI,GAAG,KAAKW,eAAL,CAAqBiG,WAArB,CAAX;;AACA,UAAIE,GAAG,GAAG,KAAKzB,SAAL,EAAV;;AACArF,MAAAA,IAAI,GAAG,IAAIE,IAAJ,CAASF,IAAT,CAAP;;AACA,UAAIjE,KAAK,CAACT,OAAN,CAAcyL,QAAd,CAAuBD,GAAvB,EAA4B9G,IAA5B,CAAJ,EAAuC;AACnC,YAAIgH,aAAa,GAAG,IAAI9G,IAAJ,CAASF,IAAT,CAApB;AACA,YAAIiH,WAAW,GAAG,IAAI/G,IAAJ,CAASF,IAAT,CAAlB;AACAiH,QAAAA,WAAW,GAAGA,WAAW,CAACC,eAAZ,CAA4BlH,IAAI,CAACmH,eAAL,KAAyB,KAAK1B,eAAL,EAArD,CAAd;AACAxF,QAAAA,MAAM,GAAGlE,KAAK,CAACT,OAAN,CAAc8L,WAAd,CAA0BN,GAA1B,EAA+BE,aAA/B,EAA8CC,WAA9C,CAAT;AACH;AACJ;;AACD,WAAOhH,MAAP;AACH,GAdD;;AAeAhC,EAAAA,MAAM,CAACoJ,UAAP,GAAoB,YAAW;AAC3BvJ,IAAAA,mBAAmB,CAACtB,SAApB,CAA8B6K,UAA9B,CAAyClJ,IAAzC,CAA8C,IAA9C;;AACA,SAAKG,cAAL,CAAoBgJ,KAApB;AACH,GAHD;;AAIArJ,EAAAA,MAAM,CAACsJ,kBAAP,GAA4B,UAASC,OAAT,EAAkB;AAC1C1J,IAAAA,mBAAmB,CAACtB,SAApB,CAA8B+K,kBAA9B,CAAiDpJ,IAAjD,CAAsD,IAAtD,EAA4DqJ,OAA5D;AACH,GAFD;;AAGAvJ,EAAAA,MAAM,CAACwJ,cAAP,GAAwB,YAAW;AAC/B,QAAIC,UAAU,GAAG,KAAKC,aAAL,EAAjB;;AACA,QAAIC,SAAS,GAAG,KAAKC,sBAAL,EAAhB;;AACA,QAAIC,WAAW,GAAG,KAAKxJ,cAAL,CAAoByJ,IAApB,CAAyB,IAAzB,CAAlB;;AACA,QAAIpG,MAAM,GAAG+F,UAAU,GAAGI,WAAW,CAACE,MAAtC;;AACA,QAAIrG,MAAM,GAAGiG,SAAb,EAAwB;AACpBjG,MAAAA,MAAM,GAAGiG,SAAT;AACH;;AACD,SAAKtJ,cAAL,CAAoBqD,MAApB,CAA2BA,MAA3B;;AACA,SAAKF,WAAL,CAAiBE,MAAjB,CAAwBA,MAAxB;;AACA7D,IAAAA,mBAAmB,CAACtB,SAApB,CAA8BiL,cAA9B,CAA6CtJ,IAA7C,CAAkD,IAAlD;AACH,GAXD;;AAYAF,EAAAA,MAAM,CAAC4J,sBAAP,GAAgC,YAAW;AACvC,QAAID,SAAS,GAAG,KAAKrG,mBAAL,EAAhB;;AACA,QAAI0G,wBAAwB,GAAG,KAAK7J,QAAL,GAAgB8J,WAAhB,CAA4B,IAA5B,IAAoC,KAAKC,oBAAL,EAApC,GAAkE,IAAI1K,sBAAtE,GAA+FC,wBAA9H;;AACA,QAAIkK,SAAS,GAAGK,wBAAhB,EAA0C;AACtCL,MAAAA,SAAS,GAAGK,wBAAZ;AACH;;AACD,WAAOL,SAAP;AACH,GAPD;;AAQA3J,EAAAA,MAAM,CAACmK,cAAP,GAAwB,UAASC,MAAT,EAAiBC,WAAjB,EAA8B;AAClD,QAAIC,oBAAoB,GAAG,eAAe,KAAKlJ,MAAL,CAAY,kBAAZ,CAAf,GAAiDpC,YAAY,CAACuL,QAA9D,GAAyEvL,YAAY,CAACO,UAAjH;AACA,WAAOP,YAAY,CAACwL,gBAAb,CAA8BF,oBAA9B,EAAoDF,MAApD,EAA4D;AAC/DK,MAAAA,aAAa,EAAE,KAAKC,iBAAL,EADgD;AAE/DC,MAAAA,mBAAmB,EAAE,KAAKD,iBAAL,EAF0C;AAG/DE,MAAAA,gBAAgB,EAAE,KAAKC,oBAAL,CAA0BC,IAA1B,CAA+B,IAA/B,CAH6C;AAI/DC,MAAAA,uBAAuB,EAAE,KAAKC,2BAAL;AAJsC,KAA5D,EAKJ,KAAK9J,aAAL,MAAwB,CALpB,EAKuB,KAAKE,MAAL,CAAY,sBAAZ,CALvB,EAK4D,KAAKG,iBAAL,CAAuB,KAAKyG,cAAL,EAAvB,CAL5D,EAK2GqC,WAL3G,CAAP;AAMH,GARD;;AASArK,EAAAA,MAAM,CAACiL,6BAAP,GAAuC,UAASxB,UAAT,EAAqB;AACxD,QAAIyB,aAAa,GAAG,KAAKC,uBAAL,EAApB;;AACA,QAAI1B,UAAU,GAAGyB,aAAjB,EAAgC;AAC5B,aAAOA,aAAP;AACH;;AACD,WAAOzB,UAAP;AACH,GAND;;AAOAzJ,EAAAA,MAAM,CAACmL,uBAAP,GAAiC,YAAW;AACxC,QAAIC,SAAS,GAAG,KAAKC,aAAL,EAAhB;;AACA,QAAIC,oBAAoB,GAAG,MAAM,KAAKC,qBAAL,EAAjC;;AACA,WAAO,CAAC,GAAG5N,SAAS,CAAC4F,eAAd,EAA+B6H,SAA/B,EAA0C1H,MAA1C,GAAmD0H,SAAS,CAACtB,IAAV,CAAewB,oBAAf,EAAqCvB,MAAxF,GAAiG,IAAIvK,sBAA5G;AACH,GAJD;;AAKAQ,EAAAA,MAAM,CAACwL,0BAAP,GAAoC,UAAS9J,KAAT,EAAgB;AAChD,WAAO;AACHwB,MAAAA,SAAS,EAAExB,KAAK,GAAG,KAAKR,aAAL,EADhB;AAEH+B,MAAAA,QAAQ,EAAE;AAFP,KAAP;AAIH,GALD;;AAMAjD,EAAAA,MAAM,CAACyL,qBAAP,GAA+B,UAASC,eAAT,EAA0BC,UAA1B,EAAsC;AACjE,QAAIC,OAAO,GAAG,KAAKC,gBAAL,CAAsBC,kBAAtB,CAAyCJ,eAAzC,EAA0DC,UAA1D,CAAd;;AACA,WAAO,KAAKnI,WAAL,CAAiBsG,IAAjB,CAAsB,IAAtB,EAA4BiC,EAA5B,CAA+BH,OAAO,CAAC3I,QAAvC,EAAiD6G,IAAjD,CAAsD,IAAtD,EAA4DiC,EAA5D,CAA+DH,OAAO,CAAC1I,SAAvE,CAAP;AACH,GAHD;;AAIAlD,EAAAA,MAAM,CAACgM,kBAAP,GAA4B,YAAW;AACnC,WAAO,KAAKxI,WAAL,CAAiBlC,UAAjB,CAA4B,IAA5B,CAAP;AACH,GAFD;;AAGAtB,EAAAA,MAAM,CAACqH,2BAAP,GAAqC,YAAW;AAC5C,WAAOvJ,KAAK,CAACT,OAAN,CAAc4O,QAAd,CAAuB,IAAIhK,IAAJ,CAAS,KAAKJ,cAAd,CAAvB,CAAP;AACH,GAFD;;AAGA7B,EAAAA,MAAM,CAACkM,mBAAP,GAA6B,UAASC,WAAT,EAAsBC,MAAtB,EAA8B;AACvD,QAAIC,YAAY,GAAG,KAAKjL,MAAL,CAAY,cAAZ,CAAnB;AACA,QAAIkL,UAAU,GAAG,KAAKlL,MAAL,CAAY,YAAZ,CAAjB;AACA,QAAI4D,aAAa,GAAG,KAAKuH,gBAAL,EAApB;AACA,QAAIC,iBAAiB,GAAGxH,aAAa,CAAC1C,OAAd,EAAxB;AACA,QAAImK,cAAc,GAAG,CAAC,KAAKH,UAAL,GAAkBD,YAAnB,IAAmC3M,IAAI,CAAC,MAAD,CAA5D;;AACA,QAAIgN,cAAc,GAAG5O,KAAK,CAACT,OAAN,CAAcsP,sBAAd,CAAqC3H,aAArC,EAAoDmH,WAApD,CAArB;;AACA,QAAIS,SAAS,GAAGT,WAAW,CAAC7J,OAAZ,EAAhB;AACA,QAAIuK,YAAY,GAAGD,SAAS,GAAGJ,iBAAZ,GAAgCE,cAAnD;AACA,QAAII,QAAQ,GAAG3K,IAAI,CAACC,KAAL,CAAWyK,YAAY,GAAGnN,IAAI,CAAC,KAAD,CAA9B,CAAf;AACA,QAAIqN,YAAY,GAAGF,YAAY,GAAGC,QAAQ,GAAGpN,IAAI,CAAC,KAAD,CAAjD;AACA,QAAIsN,SAAS,GAAG,CAAhB;;AACA,QAAIpF,SAAS,GAAG,KAAKzG,kBAAL,MAA6B2L,QAAQ,GAAG,KAAKG,iBAAL,CAAuBH,QAAvB,CAAxC,CAAhB;;AACA,QAAII,aAAa,GAAGN,SAAS,GAAG9O,KAAK,CAACT,OAAN,CAAc4O,QAAd,CAAuB,IAAIhK,IAAJ,CAASkK,WAAT,CAAvB,EAA8C7J,OAA9C,EAAhC;;AACA,QAAIN,MAAM,GAAG4F,SAAS,GAAG,KAAKxG,MAAL,CAAY,eAAZ,CAAZ,GAA2C1B,IAAI,CAAC,MAAD,CAA5D;;AACA,QAAI,CAAC0M,MAAL,EAAa;AACT,UAAID,WAAW,CAAC1E,QAAZ,KAAyB4E,YAA7B,EAA2C;AACvCW,QAAAA,SAAS,GAAGD,YAAY,GAAGN,cAAf,GAAgCS,aAA5C;AACH,OAFD,MAEO;AACH,YAAIf,WAAW,CAAC1E,QAAZ,MAA0B4E,YAA1B,IAA0CF,WAAW,CAAC1E,QAAZ,KAAyB6E,UAAvE,EAAmF;AAC/EU,UAAAA,SAAS,GAAGD,YAAZ;AACH,SAFD,MAEO;AACH,cAAIZ,WAAW,CAAC1E,QAAZ,MAA0B4E,YAA1B,IAA0CF,WAAW,CAAC1E,QAAZ,MAA0B6E,UAAxE,EAAoF;AAChFU,YAAAA,SAAS,GAAGD,YAAY,IAAIG,aAAa,GAAGZ,UAAU,GAAG5M,IAAI,CAAC,MAAD,CAArC,CAAxB;AACH,WAFD,MAEO;AACH,gBAAI,CAACoN,QAAL,EAAe;AACX9K,cAAAA,MAAM,GAAG6K,YAAT;AACH;AACJ;AACJ;AACJ;;AACD7K,MAAAA,MAAM,IAAIgL,SAAV;AACH;;AACD,WAAOhL,MAAP;AACH,GAlCD;;AAmCAhC,EAAAA,MAAM,CAACiN,iBAAP,GAA2B,YAAW;AAClC,WAAO,CAAP;AACH,GAFD;;AAGAjN,EAAAA,MAAM,CAACmN,kBAAP,GAA4B,YAAW;AACnC,WAAO,IAAP;AACH,GAFD;;AAGAnN,EAAAA,MAAM,CAACoN,iBAAP,GAA2B,YAAW;AAClC,WAAO,CAAP;AACH,GAFD;;AAGApN,EAAAA,MAAM,CAACqN,gBAAP,GAA0B,UAASC,SAAT,EAAoB;AAC1C,QAAIC,aAAa,GAAG1N,mBAAmB,CAACtB,SAApB,CAA8B8O,gBAA9B,CAA+CnN,IAA/C,CAAoD,IAApD,EAA0DoN,SAA1D,CAApB;;AACA,QAAIE,IAAI,GAAG,KAAKzF,YAAL,KAAsBuF,SAAjC;;AACA,QAAI,KAAKlM,MAAL,CAAY,YAAZ,CAAJ,EAA+B;AAC3BoM,MAAAA,IAAI,IAAI,CAAC,CAAT;AACH;;AACDA,IAAAA,IAAI,IAAID,aAAa,CAACC,IAAtB;AACA,WAAO;AACHC,MAAAA,GAAG,EAAE,CADF;AAEHD,MAAAA,IAAI,EAAEA,IAFH;AAGHE,MAAAA,YAAY,EAAEF;AAHX,KAAP;AAKH,GAZD;;AAaAxN,EAAAA,MAAM,CAAC2N,gBAAP,GAA0B,YAAW;AACjC,QAAIC,KAAK,GAAG,KAAKxM,MAAL,CAAY,YAAZ,CAAZ;AACA,QAAIY,MAAM,GAAG,EAAb;AACA,QAAI6L,WAAW,GAAG,KAAKC,aAAL,GAAqB3N,QAArB,EAAlB;AACA,QAAI4N,SAAS,GAAG,KAAKhG,YAAL,EAAhB;AACA,QAAIiG,gBAAgB,GAAGJ,KAAK,GAAG,KAAKK,uBAAL,KAAiC,KAAKC,uBAAL,EAApC,GAAqE,KAAKA,uBAAL,EAAjG;AACA,QAAIC,iBAAiB,GAAGH,gBAAgB,GAAGD,SAA3C;AACA,QAAIK,gBAAgB,GAAGP,WAAW,CAACxF,KAAZ,KAAsB0F,SAA7C;AACA,QAAIM,cAAc,GAAGT,KAAK,GAAGO,iBAAiB,GAAGC,gBAAvB,GAA0CD,iBAAiB,GAAGC,gBAAxF;;AACA,QAAIE,QAAQ,GAAG,KAAK5L,eAAL,CAAqByL,iBAArB,CAAf;;AACA,QAAII,SAAS,GAAG,KAAK7L,eAAL,CAAqB2L,cAArB,CAAhB;;AACA,QAAIT,KAAJ,EAAW;AACPU,MAAAA,QAAQ,GAAG,KAAK5L,eAAL,CAAqB2L,cAArB,CAAX;AACAE,MAAAA,SAAS,GAAG,KAAK7L,eAAL,CAAqByL,iBAArB,CAAZ;AACH;;AACDnM,IAAAA,MAAM,CAACwL,IAAP,GAAc;AACVgB,MAAAA,KAAK,EAAEF,QAAQ,CAAC7G,QAAT,EADG;AAEVgH,MAAAA,OAAO,EAAEH,QAAQ,CAACI,UAAT,MAAyB,EAAzB,GAA8B,EAA9B,GAAmC,CAFlC;AAGV3M,MAAAA,IAAI,EAAEjE,KAAK,CAACT,OAAN,CAAc4O,QAAd,CAAuBqC,QAAvB;AAHI,KAAd;AAKAtM,IAAAA,MAAM,CAAC2M,KAAP,GAAe;AACXH,MAAAA,KAAK,EAAED,SAAS,CAAC9G,QAAV,EADI;AAEXgH,MAAAA,OAAO,EAAEF,SAAS,CAACG,UAAV,MAA0B,EAA1B,GAA+B,EAA/B,GAAoC,CAFlC;AAGX3M,MAAAA,IAAI,EAAEjE,KAAK,CAACT,OAAN,CAAc4O,QAAd,CAAuBsC,SAAvB;AAHK,KAAf;AAKA,WAAOvM,MAAP;AACH,GA1BD;;AA2BAhC,EAAAA,MAAM,CAAC4O,mBAAP,GAA6B,UAASxC,MAAT,EAAiB;AAC1C,WAAO,KAAK5E,eAAL,EAAP;AACH,GAFD;;AAGAxH,EAAAA,MAAM,CAAC6O,mCAAP,GAA6C,YAAW;AACpD,WAAO,KAAP;AACH,GAFD;;AAGA7O,EAAAA,MAAM,CAAC8O,eAAP,GAAyB,YAAW;AAChC,WAAO,CAAP;AACH,GAFD;;AAGA9O,EAAAA,MAAM,CAAC+O,sBAAP,GAAgC,YAAW;AACvC,WAAO,CAAP;AACH,GAFD;;AAGA/O,EAAAA,MAAM,CAACgP,YAAP,GAAsB,UAASR,KAAT,EAAgBC,OAAhB,EAAyB1M,IAAzB,EAA+B;AACjD,QAAIkN,WAAW,GAAG,KAAKC,qBAAL,CAA2BV,KAA3B,EAAkCC,OAAlC,EAA2C1M,IAA3C,CAAlB;;AACA,QAAIoN,UAAU,GAAG,KAAKrB,aAAL,EAAjB;AACA,QAAItF,MAAM,GAAG,KAAKpH,MAAL,CAAY,YAAZ,IAA4B,CAAC,GAAGzD,SAAS,CAAC4F,eAAd,EAA+B,KAAK6L,sBAAL,GAA8B3L,GAA9B,CAAkC,CAAlC,CAA/B,EAAqE4E,KAAjG,GAAyG,CAAtH;;AACA,QAAI,KAAKjH,MAAL,CAAY,+BAAZ,CAAJ,EAAkD;AAC9CiO,MAAAA,UAAU,CAAC,YAAW;AAClBF,QAAAA,UAAU,CAACG,QAAX,CAAoB;AAChB9B,UAAAA,IAAI,EAAEyB,WAAW,CAACzB,IAAZ,GAAmB2B,UAAU,CAACI,UAAX,EAAnB,GAA6C/G,MADnC;AAEhBiF,UAAAA,GAAG,EAAE;AAFW,SAApB;AAIH,OALS,CAAV;AAMH,KAPD,MAOO;AACH0B,MAAAA,UAAU,CAACG,QAAX,CAAoB;AAChB9B,QAAAA,IAAI,EAAEyB,WAAW,CAACzB,IAAZ,GAAmB2B,UAAU,CAACI,UAAX,EAAnB,GAA6C/G,MADnC;AAEhBiF,QAAAA,GAAG,EAAE;AAFW,OAApB;AAIH;AACJ,GAjBD;;AAkBAzN,EAAAA,MAAM,CAACwP,0BAAP,GAAoC,YAAW;AAC3C,WAAO,KAAKvO,YAAL,EAAP;AACH,GAFD;;AAGA,SAAOrB,iBAAP;AACH,CAtbuB,CAsbtB/B,sBAAsB,CAACR,OAtbD,CAAxB;;AAubA,CAAC,GAAGO,sBAAsB,CAACP,OAA3B,EAAoC,qBAApC,EAA2DuC,iBAA3D;AACA,IAAI6P,QAAQ,GAAG7P,iBAAf;AACAxC,OAAO,CAACC,OAAR,GAAkBoS,QAAlB;AACAC,MAAM,CAACtS,OAAP,GAAiBA,OAAO,CAACC,OAAzB","sourcesContent":["/**\r\n * DevExtreme (ui/scheduler/workspaces/ui.scheduler.timeline.js)\r\n * Version: 20.2.7\r\n * Build date: Thu Apr 22 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../../core/renderer\"));\r\nvar _common = require(\"../../../core/utils/common\");\r\nvar _extend = require(\"../../../core/utils/extend\");\r\nvar _position = require(\"../../../core/utils/position\");\r\nvar _component_registrator = _interopRequireDefault(require(\"../../../core/component_registrator\"));\r\nvar _uiSchedulerWork_space = _interopRequireDefault(require(\"./ui.scheduler.work_space.indicator\"));\r\nvar _date = _interopRequireDefault(require(\"../../../core/utils/date\"));\r\nvar _uiScheduler = _interopRequireDefault(require(\"../ui.scheduler.table_creator\"));\r\nvar _uiSchedulerCurrent_time_shader = _interopRequireDefault(require(\"../shaders/ui.scheduler.current_time_shader.horizontal\"));\r\nvar _utils = _interopRequireDefault(require(\"../utils.timeZone\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _inheritsLoose(subClass, superClass) {\r\n    subClass.prototype = Object.create(superClass.prototype);\r\n    subClass.prototype.constructor = subClass;\r\n    _setPrototypeOf(subClass, superClass)\r\n}\r\n\r\nfunction _setPrototypeOf(o, p) {\r\n    _setPrototypeOf = Object.setPrototypeOf || function(o, p) {\r\n        o.__proto__ = p;\r\n        return o\r\n    };\r\n    return _setPrototypeOf(o, p)\r\n}\r\nvar tableCreator = _uiScheduler.default.tableCreator;\r\nvar TIMELINE_CLASS = \"dx-scheduler-timeline\";\r\nvar GROUP_TABLE_CLASS = \"dx-scheduler-group-table\";\r\nvar HORIZONTAL_GROUPED_WORKSPACE_CLASS = \"dx-scheduler-work-space-horizontal-grouped\";\r\nvar HEADER_PANEL_CELL_CLASS = \"dx-scheduler-header-panel-cell\";\r\nvar HEADER_PANEL_WEEK_CELL_CLASS = \"dx-scheduler-header-panel-week-cell\";\r\nvar HEADER_ROW_CLASS = \"dx-scheduler-header-row\";\r\nvar HORIZONTAL = \"horizontal\";\r\nvar DATE_TABLE_CELL_BORDER = 1;\r\nvar DATE_TABLE_HEADER_MARGIN = 10;\r\nvar toMs = _date.default.dateToMilliseconds;\r\nvar SchedulerTimeline = function(_SchedulerWorkSpace) {\r\n    _inheritsLoose(SchedulerTimeline, _SchedulerWorkSpace);\r\n\r\n    function SchedulerTimeline() {\r\n        return _SchedulerWorkSpace.apply(this, arguments) || this\r\n    }\r\n    var _proto = SchedulerTimeline.prototype;\r\n    _proto._init = function() {\r\n        _SchedulerWorkSpace.prototype._init.call(this);\r\n        this.$element().addClass(TIMELINE_CLASS);\r\n        this._$sidebarTable = (0, _renderer.default)(\"<div>\").addClass(GROUP_TABLE_CLASS)\r\n    };\r\n    _proto._getCellFromNextRow = function(direction, isMultiSelection) {\r\n        if (!isMultiSelection) {\r\n            return _SchedulerWorkSpace.prototype._getCellFromNextRow.call(this, direction, isMultiSelection)\r\n        }\r\n        return this._$focusedCell\r\n    };\r\n    _proto._getDefaultGroupStrategy = function() {\r\n        return \"vertical\"\r\n    };\r\n    _proto._toggleGroupingDirectionClass = function() {\r\n        this.$element().toggleClass(HORIZONTAL_GROUPED_WORKSPACE_CLASS, this._isHorizontalGroupedWorkSpace())\r\n    };\r\n    _proto._getDefaultOptions = function() {\r\n        return (0, _extend.extend)(_SchedulerWorkSpace.prototype._getDefaultOptions.call(this), {\r\n            groupOrientation: \"vertical\"\r\n        })\r\n    };\r\n    _proto._getRowCount = function() {\r\n        return 1\r\n    };\r\n    _proto._getCellCount = function() {\r\n        return this._getCellCountInDay() * this.option(\"intervalCount\")\r\n    };\r\n    _proto.getGroupTableWidth = function() {\r\n        return this._$sidebarTable ? this._$sidebarTable.outerWidth() : 0\r\n    };\r\n    _proto._getTotalRowCount = function(groupCount) {\r\n        if (this._isHorizontalGroupedWorkSpace()) {\r\n            return this._getRowCount()\r\n        } else {\r\n            groupCount = groupCount || 1;\r\n            return this._getRowCount() * groupCount\r\n        }\r\n    };\r\n    _proto._getDateForHeaderText = function(index) {\r\n        var newFirstViewDate = _utils.default.getDateWithoutTimezoneChange(this._firstViewDate);\r\n        return this._getDateByIndexCore(newFirstViewDate, index)\r\n    };\r\n    _proto._getDateByIndexCore = function(date, index) {\r\n        var result = new Date(date);\r\n        var dayIndex = Math.floor(index / this._getCellCountInDay());\r\n        result.setTime(date.getTime() + this._calculateCellIndex(0, index) * this._getInterval() + dayIndex * this._getHiddenInterval());\r\n        return result\r\n    };\r\n    _proto._getDateByIndex = function(index) {\r\n        var newFirstViewDate = _utils.default.getDateWithoutTimezoneChange(this._firstViewDate);\r\n        var result = this._getDateByIndexCore(newFirstViewDate, index);\r\n        if (_utils.default.isTimezoneChangeInDate(this._firstViewDate)) {\r\n            result.setDate(result.getDate() - 1)\r\n        }\r\n        return result\r\n    };\r\n    _proto._getFormat = function() {\r\n        return \"shorttime\"\r\n    };\r\n    _proto._needApplyLastGroupCellClass = function() {\r\n        return true\r\n    };\r\n    _proto._calculateHiddenInterval = function(rowIndex, cellIndex) {\r\n        var dayIndex = Math.floor(cellIndex / this._getCellCountInDay());\r\n        return dayIndex * this._getHiddenInterval()\r\n    };\r\n    _proto._getMillisecondsOffset = function(rowIndex, cellIndex) {\r\n        cellIndex = this._calculateCellIndex(rowIndex, cellIndex);\r\n        return this._getInterval() * cellIndex + this._calculateHiddenInterval(rowIndex, cellIndex)\r\n    };\r\n    _proto._createWorkSpaceElements = function() {\r\n        this._createWorkSpaceScrollableElements()\r\n    };\r\n    _proto._getWorkSpaceHeight = function() {\r\n        if (this.option(\"crossScrollingEnabled\")) {\r\n            return (0, _position.getBoundingRect)(this._$dateTable.get(0)).height\r\n        }\r\n        return (0, _position.getBoundingRect)(this.$element().get(0)).height\r\n    };\r\n    _proto._dateTableScrollableConfig = function() {\r\n        var config = _SchedulerWorkSpace.prototype._dateTableScrollableConfig.call(this);\r\n        var timelineConfig = {\r\n            direction: HORIZONTAL\r\n        };\r\n        return this.option(\"crossScrollingEnabled\") ? config : (0, _extend.extend)(config, timelineConfig)\r\n    };\r\n    _proto._needCreateCrossScrolling = function() {\r\n        return true\r\n    };\r\n    _proto._headerScrollableConfig = function() {\r\n        var config = _SchedulerWorkSpace.prototype._headerScrollableConfig.call(this);\r\n        return (0, _extend.extend)(config, {\r\n            scrollByContent: true\r\n        })\r\n    };\r\n    _proto._renderTimePanel = function() {\r\n        return (0, _common.noop)()\r\n    };\r\n    _proto._renderAllDayPanel = function() {\r\n        return (0, _common.noop)()\r\n    };\r\n    _proto._getTableAllDay = function() {\r\n        return false\r\n    };\r\n    _proto._getDateHeaderTemplate = function() {\r\n        return this.option(\"timeCellTemplate\")\r\n    };\r\n    _proto._toggleAllDayVisibility = function() {\r\n        return (0, _common.noop)()\r\n    };\r\n    _proto._changeAllDayVisibility = function() {\r\n        return (0, _common.noop)()\r\n    };\r\n    _proto.supportAllDayRow = function() {\r\n        return false\r\n    };\r\n    _proto._getGroupHeaderContainer = function() {\r\n        if (this._isHorizontalGroupedWorkSpace()) {\r\n            return this._$thead\r\n        }\r\n        return this._$sidebarTable\r\n    };\r\n    _proto._insertAllDayRowsIntoDateTable = function() {\r\n        return false\r\n    };\r\n    _proto._createAllDayPanelElements = function() {\r\n        return (0, _common.noop)()\r\n    };\r\n    _proto._renderDateHeader = function() {\r\n        var $headerRow = _SchedulerWorkSpace.prototype._renderDateHeader.call(this);\r\n        if (this._needRenderWeekHeader()) {\r\n            var firstViewDate = new Date(this._firstViewDate);\r\n            var $cells = [];\r\n            var colspan = this._getCellCountInDay();\r\n            var cellTemplate = this.option(\"dateCellTemplate\");\r\n            for (var i = 0; i < this._getWeekDuration() * this.option(\"intervalCount\"); i++) {\r\n                var $th = (0, _renderer.default)(\"<th>\");\r\n                var text = this._formatWeekdayAndDay(firstViewDate);\r\n                if (cellTemplate) {\r\n                    var templateOptions = {\r\n                        model: {\r\n                            text: text,\r\n                            date: new Date(firstViewDate)\r\n                        },\r\n                        container: $th,\r\n                        index: i\r\n                    };\r\n                    cellTemplate.render(templateOptions)\r\n                } else {\r\n                    $th.text(text)\r\n                }\r\n                $th.addClass(HEADER_PANEL_CELL_CLASS).addClass(HEADER_PANEL_WEEK_CELL_CLASS).attr(\"colSpan\", colspan);\r\n                $cells.push($th);\r\n                this._incrementDate(firstViewDate)\r\n            }\r\n            var $row = (0, _renderer.default)(\"<tr>\").addClass(HEADER_ROW_CLASS).append($cells);\r\n            $headerRow.before($row)\r\n        }\r\n    };\r\n    _proto._needRenderWeekHeader = function() {\r\n        return false\r\n    };\r\n    _proto._incrementDate = function(date) {\r\n        date.setDate(date.getDate() + 1)\r\n    };\r\n    _proto._getWeekDuration = function() {\r\n        return 1\r\n    };\r\n    _proto._renderView = function() {\r\n        this._setFirstViewDate();\r\n        var groupCellTemplates = this._renderGroupHeader();\r\n        this._renderDateHeader();\r\n        this._renderAllDayPanel();\r\n        this._renderTimePanel();\r\n        this._renderDateTable();\r\n        this._shader = new _uiSchedulerCurrent_time_shader.default(this);\r\n        this._updateGroupTableHeight();\r\n        this._$sidebarTable.appendTo(this._sidebarScrollable.$content());\r\n        this._applyCellTemplates(groupCellTemplates)\r\n    };\r\n    _proto._setHorizontalGroupHeaderCellsHeight = function() {\r\n        return (0, _common.noop)()\r\n    };\r\n    _proto.getIndicationCellCount = function() {\r\n        var timeDiff = this._getTimeDiff();\r\n        return this._calculateDurationInCells(timeDiff)\r\n    };\r\n    _proto._getTimeDiff = function() {\r\n        var today = this._getToday();\r\n        var date = this._getIndicationFirstViewDate();\r\n        return today.getTime() - date.getTime()\r\n    };\r\n    _proto._calculateDurationInCells = function(timeDiff) {\r\n        var today = this._getToday();\r\n        var differenceInDays = Math.floor(timeDiff / toMs(\"day\"));\r\n        var duration = (timeDiff - differenceInDays * toMs(\"day\") - this.option(\"startDayHour\") * toMs(\"hour\")) / this.getCellDuration();\r\n        if (today.getHours() > this.option(\"endDayHour\")) {\r\n            duration = this._getCellCountInDay()\r\n        }\r\n        if (duration < 0) {\r\n            duration = 0\r\n        }\r\n        return differenceInDays * this._getCellCountInDay() + duration\r\n    };\r\n    _proto.getIndicationWidth = function() {\r\n        if (this.isGroupedByDate()) {\r\n            var cellCount = this.getIndicationCellCount();\r\n            var integerPart = Math.floor(cellCount);\r\n            var fractionPart = cellCount - integerPart;\r\n            return this.getCellWidth() * (integerPart * this._getGroupCount() + fractionPart)\r\n        } else {\r\n            return this.getIndicationCellCount() * this.getCellWidth()\r\n        }\r\n    };\r\n    _proto._renderIndicator = function(height, rtlOffset, $container, groupCount) {\r\n        var $indicator;\r\n        var width = this.getIndicationWidth();\r\n        if (\"vertical\" === this.option(\"groupOrientation\")) {\r\n            $indicator = this._createIndicator($container);\r\n            $indicator.height((0, _position.getBoundingRect)($container.get(0)).height);\r\n            $indicator.css(\"left\", rtlOffset ? rtlOffset - width : width)\r\n        } else {\r\n            for (var i = 0; i < groupCount; i++) {\r\n                var offset = this.isGroupedByDate() ? i * this.getCellWidth() : this._getCellCount() * this.getCellWidth() * i;\r\n                $indicator = this._createIndicator($container);\r\n                $indicator.height((0, _position.getBoundingRect)($container.get(0)).height);\r\n                $indicator.css(\"left\", rtlOffset ? rtlOffset - width - offset : width + offset)\r\n            }\r\n        }\r\n    };\r\n    _proto._isVerticalShader = function() {\r\n        return false\r\n    };\r\n    _proto._isCurrentTimeHeaderCell = function(headerIndex) {\r\n        var result = false;\r\n        if (this.isIndicationOnView()) {\r\n            var date = this._getDateByIndex(headerIndex);\r\n            var now = this._getToday();\r\n            date = new Date(date);\r\n            if (_date.default.sameDate(now, date)) {\r\n                var startCellDate = new Date(date);\r\n                var endCellDate = new Date(date);\r\n                endCellDate = endCellDate.setMilliseconds(date.getMilliseconds() + this.getCellDuration());\r\n                result = _date.default.dateInRange(now, startCellDate, endCellDate)\r\n            }\r\n        }\r\n        return result\r\n    };\r\n    _proto._cleanView = function() {\r\n        _SchedulerWorkSpace.prototype._cleanView.call(this);\r\n        this._$sidebarTable.empty()\r\n    };\r\n    _proto._visibilityChanged = function(visible) {\r\n        _SchedulerWorkSpace.prototype._visibilityChanged.call(this, visible)\r\n    };\r\n    _proto._setTableSizes = function() {\r\n        var cellHeight = this.getCellHeight();\r\n        var minHeight = this._getWorkSpaceMinHeight();\r\n        var $groupCells = this._$sidebarTable.find(\"tr\");\r\n        var height = cellHeight * $groupCells.length;\r\n        if (height < minHeight) {\r\n            height = minHeight\r\n        }\r\n        this._$sidebarTable.height(height);\r\n        this._$dateTable.height(height);\r\n        _SchedulerWorkSpace.prototype._setTableSizes.call(this)\r\n    };\r\n    _proto._getWorkSpaceMinHeight = function() {\r\n        var minHeight = this._getWorkSpaceHeight();\r\n        var workspaceContainerHeight = this.$element().outerHeight(true) - this.getHeaderPanelHeight() - 2 * DATE_TABLE_CELL_BORDER - DATE_TABLE_HEADER_MARGIN;\r\n        if (minHeight < workspaceContainerHeight) {\r\n            minHeight = workspaceContainerHeight\r\n        }\r\n        return minHeight\r\n    };\r\n    _proto._makeGroupRows = function(groups, groupByDate) {\r\n        var tableCreatorStrategy = \"vertical\" === this.option(\"groupOrientation\") ? tableCreator.VERTICAL : tableCreator.HORIZONTAL;\r\n        return tableCreator.makeGroupedTable(tableCreatorStrategy, groups, {\r\n            groupRowClass: this._getGroupRowClass(),\r\n            groupHeaderRowClass: this._getGroupRowClass(),\r\n            groupHeaderClass: this._getGroupHeaderClass.bind(this),\r\n            groupHeaderContentClass: this._getGroupHeaderContentClass()\r\n        }, this._getCellCount() || 1, this.option(\"resourceCellTemplate\"), this._getTotalRowCount(this._getGroupCount()), groupByDate)\r\n    };\r\n    _proto._ensureGroupHeaderCellsHeight = function(cellHeight) {\r\n        var minCellHeight = this._calculateMinCellHeight();\r\n        if (cellHeight < minCellHeight) {\r\n            return minCellHeight\r\n        }\r\n        return cellHeight\r\n    };\r\n    _proto._calculateMinCellHeight = function() {\r\n        var dateTable = this._getDateTable();\r\n        var dateTableRowSelector = \".\" + this._getDateTableRowClass();\r\n        return (0, _position.getBoundingRect)(dateTable).height / dateTable.find(dateTableRowSelector).length - 2 * DATE_TABLE_CELL_BORDER\r\n    };\r\n    _proto._getCellCoordinatesByIndex = function(index) {\r\n        return {\r\n            cellIndex: index % this._getCellCount(),\r\n            rowIndex: 0\r\n        }\r\n    };\r\n    _proto._getCellByCoordinates = function(cellCoordinates, groupIndex) {\r\n        var indexes = this._groupedStrategy.prepareCellIndexes(cellCoordinates, groupIndex);\r\n        return this._$dateTable.find(\"tr\").eq(indexes.rowIndex).find(\"td\").eq(indexes.cellIndex)\r\n    };\r\n    _proto._getWorkSpaceWidth = function() {\r\n        return this._$dateTable.outerWidth(true)\r\n    };\r\n    _proto._getIndicationFirstViewDate = function() {\r\n        return _date.default.trimTime(new Date(this._firstViewDate))\r\n    };\r\n    _proto._getIntervalBetween = function(currentDate, allDay) {\r\n        var startDayHour = this.option(\"startDayHour\");\r\n        var endDayHour = this.option(\"endDayHour\");\r\n        var firstViewDate = this.getStartViewDate();\r\n        var firstViewDateTime = firstViewDate.getTime();\r\n        var hiddenInterval = (24 - endDayHour + startDayHour) * toMs(\"hour\");\r\n        var timeZoneOffset = _date.default.getTimezonesDifference(firstViewDate, currentDate);\r\n        var apptStart = currentDate.getTime();\r\n        var fullInterval = apptStart - firstViewDateTime - timeZoneOffset;\r\n        var fullDays = Math.floor(fullInterval / toMs(\"day\"));\r\n        var tailDuration = fullInterval - fullDays * toMs(\"day\");\r\n        var tailDelta = 0;\r\n        var cellCount = this._getCellCountInDay() * (fullDays - this._getWeekendsCount(fullDays));\r\n        var gapBeforeAppt = apptStart - _date.default.trimTime(new Date(currentDate)).getTime();\r\n        var result = cellCount * this.option(\"hoursInterval\") * toMs(\"hour\");\r\n        if (!allDay) {\r\n            if (currentDate.getHours() < startDayHour) {\r\n                tailDelta = tailDuration - hiddenInterval + gapBeforeAppt\r\n            } else {\r\n                if (currentDate.getHours() >= startDayHour && currentDate.getHours() < endDayHour) {\r\n                    tailDelta = tailDuration\r\n                } else {\r\n                    if (currentDate.getHours() >= startDayHour && currentDate.getHours() >= endDayHour) {\r\n                        tailDelta = tailDuration - (gapBeforeAppt - endDayHour * toMs(\"hour\"))\r\n                    } else {\r\n                        if (!fullDays) {\r\n                            result = fullInterval\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            result += tailDelta\r\n        }\r\n        return result\r\n    };\r\n    _proto._getWeekendsCount = function() {\r\n        return 0\r\n    };\r\n    _proto.getAllDayContainer = function() {\r\n        return null\r\n    };\r\n    _proto.getTimePanelWidth = function() {\r\n        return 0\r\n    };\r\n    _proto.getPositionShift = function(timeShift) {\r\n        var positionShift = _SchedulerWorkSpace.prototype.getPositionShift.call(this, timeShift);\r\n        var left = this.getCellWidth() * timeShift;\r\n        if (this.option(\"rtlEnabled\")) {\r\n            left *= -1\r\n        }\r\n        left += positionShift.left;\r\n        return {\r\n            top: 0,\r\n            left: left,\r\n            cellPosition: left\r\n        }\r\n    };\r\n    _proto.getVisibleBounds = function() {\r\n        var isRtl = this.option(\"rtlEnabled\");\r\n        var result = {};\r\n        var $scrollable = this.getScrollable().$element();\r\n        var cellWidth = this.getCellWidth();\r\n        var scrollableOffset = isRtl ? this.getScrollableOuterWidth() - this.getScrollableScrollLeft() : this.getScrollableScrollLeft();\r\n        var scrolledCellCount = scrollableOffset / cellWidth;\r\n        var visibleCellCount = $scrollable.width() / cellWidth;\r\n        var totalCellCount = isRtl ? scrolledCellCount - visibleCellCount : scrolledCellCount + visibleCellCount;\r\n        var leftDate = this._getDateByIndex(scrolledCellCount);\r\n        var rightDate = this._getDateByIndex(totalCellCount);\r\n        if (isRtl) {\r\n            leftDate = this._getDateByIndex(totalCellCount);\r\n            rightDate = this._getDateByIndex(scrolledCellCount)\r\n        }\r\n        result.left = {\r\n            hours: leftDate.getHours(),\r\n            minutes: leftDate.getMinutes() >= 30 ? 30 : 0,\r\n            date: _date.default.trimTime(leftDate)\r\n        };\r\n        result.right = {\r\n            hours: rightDate.getHours(),\r\n            minutes: rightDate.getMinutes() >= 30 ? 30 : 0,\r\n            date: _date.default.trimTime(rightDate)\r\n        };\r\n        return result\r\n    };\r\n    _proto.getIntervalDuration = function(allDay) {\r\n        return this.getCellDuration()\r\n    };\r\n    _proto._supportCompactDropDownAppointments = function() {\r\n        return false\r\n    };\r\n    _proto.getCellMinWidth = function() {\r\n        return 0\r\n    };\r\n    _proto.getWorkSpaceLeftOffset = function() {\r\n        return 0\r\n    };\r\n    _proto.scrollToTime = function(hours, minutes, date) {\r\n        var coordinates = this._getScrollCoordinates(hours, minutes, date);\r\n        var scrollable = this.getScrollable();\r\n        var offset = this.option(\"rtlEnabled\") ? (0, _position.getBoundingRect)(this.getScrollableContainer().get(0)).width : 0;\r\n        if (this.option(\"templatesRenderAsynchronously\")) {\r\n            setTimeout(function() {\r\n                scrollable.scrollBy({\r\n                    left: coordinates.left - scrollable.scrollLeft() - offset,\r\n                    top: 0\r\n                })\r\n            })\r\n        } else {\r\n            scrollable.scrollBy({\r\n                left: coordinates.left - scrollable.scrollLeft() - offset,\r\n                top: 0\r\n            })\r\n        }\r\n    };\r\n    _proto._getRowCountWithAllDayRows = function() {\r\n        return this._getRowCount()\r\n    };\r\n    return SchedulerTimeline\r\n}(_uiSchedulerWork_space.default);\r\n(0, _component_registrator.default)(\"dxSchedulerTimeline\", SchedulerTimeline);\r\nvar _default = SchedulerTimeline;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}